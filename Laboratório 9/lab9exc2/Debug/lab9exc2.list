
lab9exc2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000063e0  08000110  08000110  00010110  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000002c0  080064f0  080064f0  000164f0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM          00000008  080067b0  080067b0  000167b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .init_array   00000004  080067b8  080067b8  000167b8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .fini_array   00000004  080067bc  080067bc  000167bc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .data         00000688  20000000  080067c0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .bss          0000009c  20000688  08006e48  00020688  2**2
                  ALLOC
  8 ._user_heap_stack 00000100  20000724  08006e48  00020724  2**0
                  ALLOC
  9 .ARM.attributes 00000029  00000000  00000000  00020688  2**0
                  CONTENTS, READONLY
 10 .debug_info   000066d3  00000000  00000000  000206b1  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 00001225  00000000  00000000  00026d84  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_aranges 00000808  00000000  00000000  00027fb0  2**3
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000740  00000000  00000000  000287b8  2**3
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   00002e84  00000000  00000000  00028ef8  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    000028ef  00000000  00000000  0002bd7c  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .comment      0000007c  00000000  00000000  0002e66b  2**0
                  CONTENTS, READONLY
 17 .debug_frame  00003048  00000000  00000000  0002e6e8  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	; (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	; (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	; (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	20000688 	.word	0x20000688
 800012c:	00000000 	.word	0x00000000
 8000130:	080064d8 	.word	0x080064d8

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	; (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	; (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	; (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	2000068c 	.word	0x2000068c
 800014c:	080064d8 	.word	0x080064d8

08000150 <strlen>:
 8000150:	4603      	mov	r3, r0
 8000152:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000156:	2a00      	cmp	r2, #0
 8000158:	d1fb      	bne.n	8000152 <strlen+0x2>
 800015a:	1a18      	subs	r0, r3, r0
 800015c:	3801      	subs	r0, #1
 800015e:	4770      	bx	lr

08000160 <__aeabi_drsub>:
 8000160:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000164:	e002      	b.n	800016c <__adddf3>
 8000166:	bf00      	nop

08000168 <__aeabi_dsub>:
 8000168:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800016c <__adddf3>:
 800016c:	b530      	push	{r4, r5, lr}
 800016e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000172:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000176:	ea94 0f05 	teq	r4, r5
 800017a:	bf08      	it	eq
 800017c:	ea90 0f02 	teqeq	r0, r2
 8000180:	bf1f      	itttt	ne
 8000182:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000186:	ea55 0c02 	orrsne.w	ip, r5, r2
 800018a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800018e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000192:	f000 80e2 	beq.w	800035a <__adddf3+0x1ee>
 8000196:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800019a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800019e:	bfb8      	it	lt
 80001a0:	426d      	neglt	r5, r5
 80001a2:	dd0c      	ble.n	80001be <__adddf3+0x52>
 80001a4:	442c      	add	r4, r5
 80001a6:	ea80 0202 	eor.w	r2, r0, r2
 80001aa:	ea81 0303 	eor.w	r3, r1, r3
 80001ae:	ea82 0000 	eor.w	r0, r2, r0
 80001b2:	ea83 0101 	eor.w	r1, r3, r1
 80001b6:	ea80 0202 	eor.w	r2, r0, r2
 80001ba:	ea81 0303 	eor.w	r3, r1, r3
 80001be:	2d36      	cmp	r5, #54	; 0x36
 80001c0:	bf88      	it	hi
 80001c2:	bd30      	pophi	{r4, r5, pc}
 80001c4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80001c8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80001cc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80001d0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80001d4:	d002      	beq.n	80001dc <__adddf3+0x70>
 80001d6:	4240      	negs	r0, r0
 80001d8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80001dc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 80001e0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80001e4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80001e8:	d002      	beq.n	80001f0 <__adddf3+0x84>
 80001ea:	4252      	negs	r2, r2
 80001ec:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80001f0:	ea94 0f05 	teq	r4, r5
 80001f4:	f000 80a7 	beq.w	8000346 <__adddf3+0x1da>
 80001f8:	f1a4 0401 	sub.w	r4, r4, #1
 80001fc:	f1d5 0e20 	rsbs	lr, r5, #32
 8000200:	db0d      	blt.n	800021e <__adddf3+0xb2>
 8000202:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000206:	fa22 f205 	lsr.w	r2, r2, r5
 800020a:	1880      	adds	r0, r0, r2
 800020c:	f141 0100 	adc.w	r1, r1, #0
 8000210:	fa03 f20e 	lsl.w	r2, r3, lr
 8000214:	1880      	adds	r0, r0, r2
 8000216:	fa43 f305 	asr.w	r3, r3, r5
 800021a:	4159      	adcs	r1, r3
 800021c:	e00e      	b.n	800023c <__adddf3+0xd0>
 800021e:	f1a5 0520 	sub.w	r5, r5, #32
 8000222:	f10e 0e20 	add.w	lr, lr, #32
 8000226:	2a01      	cmp	r2, #1
 8000228:	fa03 fc0e 	lsl.w	ip, r3, lr
 800022c:	bf28      	it	cs
 800022e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000232:	fa43 f305 	asr.w	r3, r3, r5
 8000236:	18c0      	adds	r0, r0, r3
 8000238:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800023c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000240:	d507      	bpl.n	8000252 <__adddf3+0xe6>
 8000242:	f04f 0e00 	mov.w	lr, #0
 8000246:	f1dc 0c00 	rsbs	ip, ip, #0
 800024a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800024e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000252:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000256:	d31b      	bcc.n	8000290 <__adddf3+0x124>
 8000258:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800025c:	d30c      	bcc.n	8000278 <__adddf3+0x10c>
 800025e:	0849      	lsrs	r1, r1, #1
 8000260:	ea5f 0030 	movs.w	r0, r0, rrx
 8000264:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000268:	f104 0401 	add.w	r4, r4, #1
 800026c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000270:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000274:	f080 809a 	bcs.w	80003ac <__adddf3+0x240>
 8000278:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800027c:	bf08      	it	eq
 800027e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000282:	f150 0000 	adcs.w	r0, r0, #0
 8000286:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800028a:	ea41 0105 	orr.w	r1, r1, r5
 800028e:	bd30      	pop	{r4, r5, pc}
 8000290:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000294:	4140      	adcs	r0, r0
 8000296:	eb41 0101 	adc.w	r1, r1, r1
 800029a:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 800029e:	f1a4 0401 	sub.w	r4, r4, #1
 80002a2:	d1e9      	bne.n	8000278 <__adddf3+0x10c>
 80002a4:	f091 0f00 	teq	r1, #0
 80002a8:	bf04      	itt	eq
 80002aa:	4601      	moveq	r1, r0
 80002ac:	2000      	moveq	r0, #0
 80002ae:	fab1 f381 	clz	r3, r1
 80002b2:	bf08      	it	eq
 80002b4:	3320      	addeq	r3, #32
 80002b6:	f1a3 030b 	sub.w	r3, r3, #11
 80002ba:	f1b3 0220 	subs.w	r2, r3, #32
 80002be:	da0c      	bge.n	80002da <__adddf3+0x16e>
 80002c0:	320c      	adds	r2, #12
 80002c2:	dd08      	ble.n	80002d6 <__adddf3+0x16a>
 80002c4:	f102 0c14 	add.w	ip, r2, #20
 80002c8:	f1c2 020c 	rsb	r2, r2, #12
 80002cc:	fa01 f00c 	lsl.w	r0, r1, ip
 80002d0:	fa21 f102 	lsr.w	r1, r1, r2
 80002d4:	e00c      	b.n	80002f0 <__adddf3+0x184>
 80002d6:	f102 0214 	add.w	r2, r2, #20
 80002da:	bfd8      	it	le
 80002dc:	f1c2 0c20 	rsble	ip, r2, #32
 80002e0:	fa01 f102 	lsl.w	r1, r1, r2
 80002e4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80002e8:	bfdc      	itt	le
 80002ea:	ea41 010c 	orrle.w	r1, r1, ip
 80002ee:	4090      	lslle	r0, r2
 80002f0:	1ae4      	subs	r4, r4, r3
 80002f2:	bfa2      	ittt	ge
 80002f4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80002f8:	4329      	orrge	r1, r5
 80002fa:	bd30      	popge	{r4, r5, pc}
 80002fc:	ea6f 0404 	mvn.w	r4, r4
 8000300:	3c1f      	subs	r4, #31
 8000302:	da1c      	bge.n	800033e <__adddf3+0x1d2>
 8000304:	340c      	adds	r4, #12
 8000306:	dc0e      	bgt.n	8000326 <__adddf3+0x1ba>
 8000308:	f104 0414 	add.w	r4, r4, #20
 800030c:	f1c4 0220 	rsb	r2, r4, #32
 8000310:	fa20 f004 	lsr.w	r0, r0, r4
 8000314:	fa01 f302 	lsl.w	r3, r1, r2
 8000318:	ea40 0003 	orr.w	r0, r0, r3
 800031c:	fa21 f304 	lsr.w	r3, r1, r4
 8000320:	ea45 0103 	orr.w	r1, r5, r3
 8000324:	bd30      	pop	{r4, r5, pc}
 8000326:	f1c4 040c 	rsb	r4, r4, #12
 800032a:	f1c4 0220 	rsb	r2, r4, #32
 800032e:	fa20 f002 	lsr.w	r0, r0, r2
 8000332:	fa01 f304 	lsl.w	r3, r1, r4
 8000336:	ea40 0003 	orr.w	r0, r0, r3
 800033a:	4629      	mov	r1, r5
 800033c:	bd30      	pop	{r4, r5, pc}
 800033e:	fa21 f004 	lsr.w	r0, r1, r4
 8000342:	4629      	mov	r1, r5
 8000344:	bd30      	pop	{r4, r5, pc}
 8000346:	f094 0f00 	teq	r4, #0
 800034a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800034e:	bf06      	itte	eq
 8000350:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000354:	3401      	addeq	r4, #1
 8000356:	3d01      	subne	r5, #1
 8000358:	e74e      	b.n	80001f8 <__adddf3+0x8c>
 800035a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800035e:	bf18      	it	ne
 8000360:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000364:	d029      	beq.n	80003ba <__adddf3+0x24e>
 8000366:	ea94 0f05 	teq	r4, r5
 800036a:	bf08      	it	eq
 800036c:	ea90 0f02 	teqeq	r0, r2
 8000370:	d005      	beq.n	800037e <__adddf3+0x212>
 8000372:	ea54 0c00 	orrs.w	ip, r4, r0
 8000376:	bf04      	itt	eq
 8000378:	4619      	moveq	r1, r3
 800037a:	4610      	moveq	r0, r2
 800037c:	bd30      	pop	{r4, r5, pc}
 800037e:	ea91 0f03 	teq	r1, r3
 8000382:	bf1e      	ittt	ne
 8000384:	2100      	movne	r1, #0
 8000386:	2000      	movne	r0, #0
 8000388:	bd30      	popne	{r4, r5, pc}
 800038a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800038e:	d105      	bne.n	800039c <__adddf3+0x230>
 8000390:	0040      	lsls	r0, r0, #1
 8000392:	4149      	adcs	r1, r1
 8000394:	bf28      	it	cs
 8000396:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800039a:	bd30      	pop	{r4, r5, pc}
 800039c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80003a0:	bf3c      	itt	cc
 80003a2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80003a6:	bd30      	popcc	{r4, r5, pc}
 80003a8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003ac:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80003b0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80003b4:	f04f 0000 	mov.w	r0, #0
 80003b8:	bd30      	pop	{r4, r5, pc}
 80003ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003be:	bf1a      	itte	ne
 80003c0:	4619      	movne	r1, r3
 80003c2:	4610      	movne	r0, r2
 80003c4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80003c8:	bf1c      	itt	ne
 80003ca:	460b      	movne	r3, r1
 80003cc:	4602      	movne	r2, r0
 80003ce:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80003d2:	bf06      	itte	eq
 80003d4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80003d8:	ea91 0f03 	teqeq	r1, r3
 80003dc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80003e0:	bd30      	pop	{r4, r5, pc}
 80003e2:	bf00      	nop

080003e4 <__aeabi_ui2d>:
 80003e4:	f090 0f00 	teq	r0, #0
 80003e8:	bf04      	itt	eq
 80003ea:	2100      	moveq	r1, #0
 80003ec:	4770      	bxeq	lr
 80003ee:	b530      	push	{r4, r5, lr}
 80003f0:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80003f4:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80003f8:	f04f 0500 	mov.w	r5, #0
 80003fc:	f04f 0100 	mov.w	r1, #0
 8000400:	e750      	b.n	80002a4 <__adddf3+0x138>
 8000402:	bf00      	nop

08000404 <__aeabi_i2d>:
 8000404:	f090 0f00 	teq	r0, #0
 8000408:	bf04      	itt	eq
 800040a:	2100      	moveq	r1, #0
 800040c:	4770      	bxeq	lr
 800040e:	b530      	push	{r4, r5, lr}
 8000410:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000414:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000418:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800041c:	bf48      	it	mi
 800041e:	4240      	negmi	r0, r0
 8000420:	f04f 0100 	mov.w	r1, #0
 8000424:	e73e      	b.n	80002a4 <__adddf3+0x138>
 8000426:	bf00      	nop

08000428 <__aeabi_f2d>:
 8000428:	0042      	lsls	r2, r0, #1
 800042a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800042e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000432:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000436:	bf1f      	itttt	ne
 8000438:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800043c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000440:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000444:	4770      	bxne	lr
 8000446:	f092 0f00 	teq	r2, #0
 800044a:	bf14      	ite	ne
 800044c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000450:	4770      	bxeq	lr
 8000452:	b530      	push	{r4, r5, lr}
 8000454:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000458:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800045c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000460:	e720      	b.n	80002a4 <__adddf3+0x138>
 8000462:	bf00      	nop

08000464 <__aeabi_ul2d>:
 8000464:	ea50 0201 	orrs.w	r2, r0, r1
 8000468:	bf08      	it	eq
 800046a:	4770      	bxeq	lr
 800046c:	b530      	push	{r4, r5, lr}
 800046e:	f04f 0500 	mov.w	r5, #0
 8000472:	e00a      	b.n	800048a <__aeabi_l2d+0x16>

08000474 <__aeabi_l2d>:
 8000474:	ea50 0201 	orrs.w	r2, r0, r1
 8000478:	bf08      	it	eq
 800047a:	4770      	bxeq	lr
 800047c:	b530      	push	{r4, r5, lr}
 800047e:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8000482:	d502      	bpl.n	800048a <__aeabi_l2d+0x16>
 8000484:	4240      	negs	r0, r0
 8000486:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800048a:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800048e:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000492:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000496:	f43f aedc 	beq.w	8000252 <__adddf3+0xe6>
 800049a:	f04f 0203 	mov.w	r2, #3
 800049e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004a2:	bf18      	it	ne
 80004a4:	3203      	addne	r2, #3
 80004a6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004aa:	bf18      	it	ne
 80004ac:	3203      	addne	r2, #3
 80004ae:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004b2:	f1c2 0320 	rsb	r3, r2, #32
 80004b6:	fa00 fc03 	lsl.w	ip, r0, r3
 80004ba:	fa20 f002 	lsr.w	r0, r0, r2
 80004be:	fa01 fe03 	lsl.w	lr, r1, r3
 80004c2:	ea40 000e 	orr.w	r0, r0, lr
 80004c6:	fa21 f102 	lsr.w	r1, r1, r2
 80004ca:	4414      	add	r4, r2
 80004cc:	e6c1      	b.n	8000252 <__adddf3+0xe6>
 80004ce:	bf00      	nop

080004d0 <__aeabi_dmul>:
 80004d0:	b570      	push	{r4, r5, r6, lr}
 80004d2:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80004d6:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80004da:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80004de:	bf1d      	ittte	ne
 80004e0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80004e4:	ea94 0f0c 	teqne	r4, ip
 80004e8:	ea95 0f0c 	teqne	r5, ip
 80004ec:	f000 f8de 	bleq	80006ac <__aeabi_dmul+0x1dc>
 80004f0:	442c      	add	r4, r5
 80004f2:	ea81 0603 	eor.w	r6, r1, r3
 80004f6:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80004fa:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80004fe:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8000502:	bf18      	it	ne
 8000504:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000508:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800050c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000510:	d038      	beq.n	8000584 <__aeabi_dmul+0xb4>
 8000512:	fba0 ce02 	umull	ip, lr, r0, r2
 8000516:	f04f 0500 	mov.w	r5, #0
 800051a:	fbe1 e502 	umlal	lr, r5, r1, r2
 800051e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 8000522:	fbe0 e503 	umlal	lr, r5, r0, r3
 8000526:	f04f 0600 	mov.w	r6, #0
 800052a:	fbe1 5603 	umlal	r5, r6, r1, r3
 800052e:	f09c 0f00 	teq	ip, #0
 8000532:	bf18      	it	ne
 8000534:	f04e 0e01 	orrne.w	lr, lr, #1
 8000538:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 800053c:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000540:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 8000544:	d204      	bcs.n	8000550 <__aeabi_dmul+0x80>
 8000546:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 800054a:	416d      	adcs	r5, r5
 800054c:	eb46 0606 	adc.w	r6, r6, r6
 8000550:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000554:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000558:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 800055c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000560:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8000564:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000568:	bf88      	it	hi
 800056a:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 800056e:	d81e      	bhi.n	80005ae <__aeabi_dmul+0xde>
 8000570:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 8000574:	bf08      	it	eq
 8000576:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 800057a:	f150 0000 	adcs.w	r0, r0, #0
 800057e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000582:	bd70      	pop	{r4, r5, r6, pc}
 8000584:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000588:	ea46 0101 	orr.w	r1, r6, r1
 800058c:	ea40 0002 	orr.w	r0, r0, r2
 8000590:	ea81 0103 	eor.w	r1, r1, r3
 8000594:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000598:	bfc2      	ittt	gt
 800059a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800059e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80005a2:	bd70      	popgt	{r4, r5, r6, pc}
 80005a4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80005a8:	f04f 0e00 	mov.w	lr, #0
 80005ac:	3c01      	subs	r4, #1
 80005ae:	f300 80ab 	bgt.w	8000708 <__aeabi_dmul+0x238>
 80005b2:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80005b6:	bfde      	ittt	le
 80005b8:	2000      	movle	r0, #0
 80005ba:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80005be:	bd70      	pople	{r4, r5, r6, pc}
 80005c0:	f1c4 0400 	rsb	r4, r4, #0
 80005c4:	3c20      	subs	r4, #32
 80005c6:	da35      	bge.n	8000634 <__aeabi_dmul+0x164>
 80005c8:	340c      	adds	r4, #12
 80005ca:	dc1b      	bgt.n	8000604 <__aeabi_dmul+0x134>
 80005cc:	f104 0414 	add.w	r4, r4, #20
 80005d0:	f1c4 0520 	rsb	r5, r4, #32
 80005d4:	fa00 f305 	lsl.w	r3, r0, r5
 80005d8:	fa20 f004 	lsr.w	r0, r0, r4
 80005dc:	fa01 f205 	lsl.w	r2, r1, r5
 80005e0:	ea40 0002 	orr.w	r0, r0, r2
 80005e4:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80005e8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005ec:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80005f0:	fa21 f604 	lsr.w	r6, r1, r4
 80005f4:	eb42 0106 	adc.w	r1, r2, r6
 80005f8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80005fc:	bf08      	it	eq
 80005fe:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000602:	bd70      	pop	{r4, r5, r6, pc}
 8000604:	f1c4 040c 	rsb	r4, r4, #12
 8000608:	f1c4 0520 	rsb	r5, r4, #32
 800060c:	fa00 f304 	lsl.w	r3, r0, r4
 8000610:	fa20 f005 	lsr.w	r0, r0, r5
 8000614:	fa01 f204 	lsl.w	r2, r1, r4
 8000618:	ea40 0002 	orr.w	r0, r0, r2
 800061c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000620:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000624:	f141 0100 	adc.w	r1, r1, #0
 8000628:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800062c:	bf08      	it	eq
 800062e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000632:	bd70      	pop	{r4, r5, r6, pc}
 8000634:	f1c4 0520 	rsb	r5, r4, #32
 8000638:	fa00 f205 	lsl.w	r2, r0, r5
 800063c:	ea4e 0e02 	orr.w	lr, lr, r2
 8000640:	fa20 f304 	lsr.w	r3, r0, r4
 8000644:	fa01 f205 	lsl.w	r2, r1, r5
 8000648:	ea43 0302 	orr.w	r3, r3, r2
 800064c:	fa21 f004 	lsr.w	r0, r1, r4
 8000650:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000654:	fa21 f204 	lsr.w	r2, r1, r4
 8000658:	ea20 0002 	bic.w	r0, r0, r2
 800065c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000660:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000664:	bf08      	it	eq
 8000666:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800066a:	bd70      	pop	{r4, r5, r6, pc}
 800066c:	f094 0f00 	teq	r4, #0
 8000670:	d10f      	bne.n	8000692 <__aeabi_dmul+0x1c2>
 8000672:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 8000676:	0040      	lsls	r0, r0, #1
 8000678:	eb41 0101 	adc.w	r1, r1, r1
 800067c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000680:	bf08      	it	eq
 8000682:	3c01      	subeq	r4, #1
 8000684:	d0f7      	beq.n	8000676 <__aeabi_dmul+0x1a6>
 8000686:	ea41 0106 	orr.w	r1, r1, r6
 800068a:	f095 0f00 	teq	r5, #0
 800068e:	bf18      	it	ne
 8000690:	4770      	bxne	lr
 8000692:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000696:	0052      	lsls	r2, r2, #1
 8000698:	eb43 0303 	adc.w	r3, r3, r3
 800069c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80006a0:	bf08      	it	eq
 80006a2:	3d01      	subeq	r5, #1
 80006a4:	d0f7      	beq.n	8000696 <__aeabi_dmul+0x1c6>
 80006a6:	ea43 0306 	orr.w	r3, r3, r6
 80006aa:	4770      	bx	lr
 80006ac:	ea94 0f0c 	teq	r4, ip
 80006b0:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80006b4:	bf18      	it	ne
 80006b6:	ea95 0f0c 	teqne	r5, ip
 80006ba:	d00c      	beq.n	80006d6 <__aeabi_dmul+0x206>
 80006bc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006c0:	bf18      	it	ne
 80006c2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006c6:	d1d1      	bne.n	800066c <__aeabi_dmul+0x19c>
 80006c8:	ea81 0103 	eor.w	r1, r1, r3
 80006cc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006d0:	f04f 0000 	mov.w	r0, #0
 80006d4:	bd70      	pop	{r4, r5, r6, pc}
 80006d6:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006da:	bf06      	itte	eq
 80006dc:	4610      	moveq	r0, r2
 80006de:	4619      	moveq	r1, r3
 80006e0:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006e4:	d019      	beq.n	800071a <__aeabi_dmul+0x24a>
 80006e6:	ea94 0f0c 	teq	r4, ip
 80006ea:	d102      	bne.n	80006f2 <__aeabi_dmul+0x222>
 80006ec:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80006f0:	d113      	bne.n	800071a <__aeabi_dmul+0x24a>
 80006f2:	ea95 0f0c 	teq	r5, ip
 80006f6:	d105      	bne.n	8000704 <__aeabi_dmul+0x234>
 80006f8:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80006fc:	bf1c      	itt	ne
 80006fe:	4610      	movne	r0, r2
 8000700:	4619      	movne	r1, r3
 8000702:	d10a      	bne.n	800071a <__aeabi_dmul+0x24a>
 8000704:	ea81 0103 	eor.w	r1, r1, r3
 8000708:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800070c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000710:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000714:	f04f 0000 	mov.w	r0, #0
 8000718:	bd70      	pop	{r4, r5, r6, pc}
 800071a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800071e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 8000722:	bd70      	pop	{r4, r5, r6, pc}

08000724 <__aeabi_ddiv>:
 8000724:	b570      	push	{r4, r5, r6, lr}
 8000726:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800072a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800072e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000732:	bf1d      	ittte	ne
 8000734:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000738:	ea94 0f0c 	teqne	r4, ip
 800073c:	ea95 0f0c 	teqne	r5, ip
 8000740:	f000 f8a7 	bleq	8000892 <__aeabi_ddiv+0x16e>
 8000744:	eba4 0405 	sub.w	r4, r4, r5
 8000748:	ea81 0e03 	eor.w	lr, r1, r3
 800074c:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000750:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000754:	f000 8088 	beq.w	8000868 <__aeabi_ddiv+0x144>
 8000758:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800075c:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000760:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 8000764:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000768:	ea4f 2202 	mov.w	r2, r2, lsl #8
 800076c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000770:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 8000774:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000778:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 800077c:	429d      	cmp	r5, r3
 800077e:	bf08      	it	eq
 8000780:	4296      	cmpeq	r6, r2
 8000782:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 8000786:	f504 7440 	add.w	r4, r4, #768	; 0x300
 800078a:	d202      	bcs.n	8000792 <__aeabi_ddiv+0x6e>
 800078c:	085b      	lsrs	r3, r3, #1
 800078e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000792:	1ab6      	subs	r6, r6, r2
 8000794:	eb65 0503 	sbc.w	r5, r5, r3
 8000798:	085b      	lsrs	r3, r3, #1
 800079a:	ea4f 0232 	mov.w	r2, r2, rrx
 800079e:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80007a2:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80007a6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007aa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007ae:	bf22      	ittt	cs
 80007b0:	1ab6      	subcs	r6, r6, r2
 80007b2:	4675      	movcs	r5, lr
 80007b4:	ea40 000c 	orrcs.w	r0, r0, ip
 80007b8:	085b      	lsrs	r3, r3, #1
 80007ba:	ea4f 0232 	mov.w	r2, r2, rrx
 80007be:	ebb6 0e02 	subs.w	lr, r6, r2
 80007c2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007c6:	bf22      	ittt	cs
 80007c8:	1ab6      	subcs	r6, r6, r2
 80007ca:	4675      	movcs	r5, lr
 80007cc:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80007d0:	085b      	lsrs	r3, r3, #1
 80007d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007d6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007da:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007de:	bf22      	ittt	cs
 80007e0:	1ab6      	subcs	r6, r6, r2
 80007e2:	4675      	movcs	r5, lr
 80007e4:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80007e8:	085b      	lsrs	r3, r3, #1
 80007ea:	ea4f 0232 	mov.w	r2, r2, rrx
 80007ee:	ebb6 0e02 	subs.w	lr, r6, r2
 80007f2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007f6:	bf22      	ittt	cs
 80007f8:	1ab6      	subcs	r6, r6, r2
 80007fa:	4675      	movcs	r5, lr
 80007fc:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000800:	ea55 0e06 	orrs.w	lr, r5, r6
 8000804:	d018      	beq.n	8000838 <__aeabi_ddiv+0x114>
 8000806:	ea4f 1505 	mov.w	r5, r5, lsl #4
 800080a:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 800080e:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8000812:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000816:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 800081a:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800081e:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 8000822:	d1c0      	bne.n	80007a6 <__aeabi_ddiv+0x82>
 8000824:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000828:	d10b      	bne.n	8000842 <__aeabi_ddiv+0x11e>
 800082a:	ea41 0100 	orr.w	r1, r1, r0
 800082e:	f04f 0000 	mov.w	r0, #0
 8000832:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8000836:	e7b6      	b.n	80007a6 <__aeabi_ddiv+0x82>
 8000838:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 800083c:	bf04      	itt	eq
 800083e:	4301      	orreq	r1, r0
 8000840:	2000      	moveq	r0, #0
 8000842:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000846:	bf88      	it	hi
 8000848:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 800084c:	f63f aeaf 	bhi.w	80005ae <__aeabi_dmul+0xde>
 8000850:	ebb5 0c03 	subs.w	ip, r5, r3
 8000854:	bf04      	itt	eq
 8000856:	ebb6 0c02 	subseq.w	ip, r6, r2
 800085a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800085e:	f150 0000 	adcs.w	r0, r0, #0
 8000862:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000866:	bd70      	pop	{r4, r5, r6, pc}
 8000868:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 800086c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000870:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8000874:	bfc2      	ittt	gt
 8000876:	ebd4 050c 	rsbsgt	r5, r4, ip
 800087a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800087e:	bd70      	popgt	{r4, r5, r6, pc}
 8000880:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000884:	f04f 0e00 	mov.w	lr, #0
 8000888:	3c01      	subs	r4, #1
 800088a:	e690      	b.n	80005ae <__aeabi_dmul+0xde>
 800088c:	ea45 0e06 	orr.w	lr, r5, r6
 8000890:	e68d      	b.n	80005ae <__aeabi_dmul+0xde>
 8000892:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000896:	ea94 0f0c 	teq	r4, ip
 800089a:	bf08      	it	eq
 800089c:	ea95 0f0c 	teqeq	r5, ip
 80008a0:	f43f af3b 	beq.w	800071a <__aeabi_dmul+0x24a>
 80008a4:	ea94 0f0c 	teq	r4, ip
 80008a8:	d10a      	bne.n	80008c0 <__aeabi_ddiv+0x19c>
 80008aa:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008ae:	f47f af34 	bne.w	800071a <__aeabi_dmul+0x24a>
 80008b2:	ea95 0f0c 	teq	r5, ip
 80008b6:	f47f af25 	bne.w	8000704 <__aeabi_dmul+0x234>
 80008ba:	4610      	mov	r0, r2
 80008bc:	4619      	mov	r1, r3
 80008be:	e72c      	b.n	800071a <__aeabi_dmul+0x24a>
 80008c0:	ea95 0f0c 	teq	r5, ip
 80008c4:	d106      	bne.n	80008d4 <__aeabi_ddiv+0x1b0>
 80008c6:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008ca:	f43f aefd 	beq.w	80006c8 <__aeabi_dmul+0x1f8>
 80008ce:	4610      	mov	r0, r2
 80008d0:	4619      	mov	r1, r3
 80008d2:	e722      	b.n	800071a <__aeabi_dmul+0x24a>
 80008d4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008d8:	bf18      	it	ne
 80008da:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80008de:	f47f aec5 	bne.w	800066c <__aeabi_dmul+0x19c>
 80008e2:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80008e6:	f47f af0d 	bne.w	8000704 <__aeabi_dmul+0x234>
 80008ea:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80008ee:	f47f aeeb 	bne.w	80006c8 <__aeabi_dmul+0x1f8>
 80008f2:	e712      	b.n	800071a <__aeabi_dmul+0x24a>

080008f4 <__gedf2>:
 80008f4:	f04f 3cff 	mov.w	ip, #4294967295
 80008f8:	e006      	b.n	8000908 <__cmpdf2+0x4>
 80008fa:	bf00      	nop

080008fc <__ledf2>:
 80008fc:	f04f 0c01 	mov.w	ip, #1
 8000900:	e002      	b.n	8000908 <__cmpdf2+0x4>
 8000902:	bf00      	nop

08000904 <__cmpdf2>:
 8000904:	f04f 0c01 	mov.w	ip, #1
 8000908:	f84d cd04 	str.w	ip, [sp, #-4]!
 800090c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000910:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000914:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000918:	bf18      	it	ne
 800091a:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 800091e:	d01b      	beq.n	8000958 <__cmpdf2+0x54>
 8000920:	b001      	add	sp, #4
 8000922:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000926:	bf0c      	ite	eq
 8000928:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 800092c:	ea91 0f03 	teqne	r1, r3
 8000930:	bf02      	ittt	eq
 8000932:	ea90 0f02 	teqeq	r0, r2
 8000936:	2000      	moveq	r0, #0
 8000938:	4770      	bxeq	lr
 800093a:	f110 0f00 	cmn.w	r0, #0
 800093e:	ea91 0f03 	teq	r1, r3
 8000942:	bf58      	it	pl
 8000944:	4299      	cmppl	r1, r3
 8000946:	bf08      	it	eq
 8000948:	4290      	cmpeq	r0, r2
 800094a:	bf2c      	ite	cs
 800094c:	17d8      	asrcs	r0, r3, #31
 800094e:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000952:	f040 0001 	orr.w	r0, r0, #1
 8000956:	4770      	bx	lr
 8000958:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 800095c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000960:	d102      	bne.n	8000968 <__cmpdf2+0x64>
 8000962:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000966:	d107      	bne.n	8000978 <__cmpdf2+0x74>
 8000968:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 800096c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000970:	d1d6      	bne.n	8000920 <__cmpdf2+0x1c>
 8000972:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000976:	d0d3      	beq.n	8000920 <__cmpdf2+0x1c>
 8000978:	f85d 0b04 	ldr.w	r0, [sp], #4
 800097c:	4770      	bx	lr
 800097e:	bf00      	nop

08000980 <__aeabi_cdrcmple>:
 8000980:	4684      	mov	ip, r0
 8000982:	4610      	mov	r0, r2
 8000984:	4662      	mov	r2, ip
 8000986:	468c      	mov	ip, r1
 8000988:	4619      	mov	r1, r3
 800098a:	4663      	mov	r3, ip
 800098c:	e000      	b.n	8000990 <__aeabi_cdcmpeq>
 800098e:	bf00      	nop

08000990 <__aeabi_cdcmpeq>:
 8000990:	b501      	push	{r0, lr}
 8000992:	f7ff ffb7 	bl	8000904 <__cmpdf2>
 8000996:	2800      	cmp	r0, #0
 8000998:	bf48      	it	mi
 800099a:	f110 0f00 	cmnmi.w	r0, #0
 800099e:	bd01      	pop	{r0, pc}

080009a0 <__aeabi_dcmpeq>:
 80009a0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009a4:	f7ff fff4 	bl	8000990 <__aeabi_cdcmpeq>
 80009a8:	bf0c      	ite	eq
 80009aa:	2001      	moveq	r0, #1
 80009ac:	2000      	movne	r0, #0
 80009ae:	f85d fb08 	ldr.w	pc, [sp], #8
 80009b2:	bf00      	nop

080009b4 <__aeabi_dcmplt>:
 80009b4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009b8:	f7ff ffea 	bl	8000990 <__aeabi_cdcmpeq>
 80009bc:	bf34      	ite	cc
 80009be:	2001      	movcc	r0, #1
 80009c0:	2000      	movcs	r0, #0
 80009c2:	f85d fb08 	ldr.w	pc, [sp], #8
 80009c6:	bf00      	nop

080009c8 <__aeabi_dcmple>:
 80009c8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009cc:	f7ff ffe0 	bl	8000990 <__aeabi_cdcmpeq>
 80009d0:	bf94      	ite	ls
 80009d2:	2001      	movls	r0, #1
 80009d4:	2000      	movhi	r0, #0
 80009d6:	f85d fb08 	ldr.w	pc, [sp], #8
 80009da:	bf00      	nop

080009dc <__aeabi_dcmpge>:
 80009dc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009e0:	f7ff ffce 	bl	8000980 <__aeabi_cdrcmple>
 80009e4:	bf94      	ite	ls
 80009e6:	2001      	movls	r0, #1
 80009e8:	2000      	movhi	r0, #0
 80009ea:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ee:	bf00      	nop

080009f0 <__aeabi_dcmpgt>:
 80009f0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009f4:	f7ff ffc4 	bl	8000980 <__aeabi_cdrcmple>
 80009f8:	bf34      	ite	cc
 80009fa:	2001      	movcc	r0, #1
 80009fc:	2000      	movcs	r0, #0
 80009fe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a02:	bf00      	nop

08000a04 <__aeabi_dcmpun>:
 8000a04:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a08:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a0c:	d102      	bne.n	8000a14 <__aeabi_dcmpun+0x10>
 8000a0e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a12:	d10a      	bne.n	8000a2a <__aeabi_dcmpun+0x26>
 8000a14:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a18:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a1c:	d102      	bne.n	8000a24 <__aeabi_dcmpun+0x20>
 8000a1e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a22:	d102      	bne.n	8000a2a <__aeabi_dcmpun+0x26>
 8000a24:	f04f 0000 	mov.w	r0, #0
 8000a28:	4770      	bx	lr
 8000a2a:	f04f 0001 	mov.w	r0, #1
 8000a2e:	4770      	bx	lr

08000a30 <__aeabi_d2iz>:
 8000a30:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a34:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000a38:	d215      	bcs.n	8000a66 <__aeabi_d2iz+0x36>
 8000a3a:	d511      	bpl.n	8000a60 <__aeabi_d2iz+0x30>
 8000a3c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000a40:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a44:	d912      	bls.n	8000a6c <__aeabi_d2iz+0x3c>
 8000a46:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a4a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000a4e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a52:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000a56:	fa23 f002 	lsr.w	r0, r3, r2
 8000a5a:	bf18      	it	ne
 8000a5c:	4240      	negne	r0, r0
 8000a5e:	4770      	bx	lr
 8000a60:	f04f 0000 	mov.w	r0, #0
 8000a64:	4770      	bx	lr
 8000a66:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a6a:	d105      	bne.n	8000a78 <__aeabi_d2iz+0x48>
 8000a6c:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000a70:	bf08      	it	eq
 8000a72:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000a76:	4770      	bx	lr
 8000a78:	f04f 0000 	mov.w	r0, #0
 8000a7c:	4770      	bx	lr
 8000a7e:	bf00      	nop

08000a80 <__aeabi_d2f>:
 8000a80:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a84:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000a88:	bf24      	itt	cs
 8000a8a:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000a8e:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000a92:	d90d      	bls.n	8000ab0 <__aeabi_d2f+0x30>
 8000a94:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000a98:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000a9c:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000aa0:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000aa4:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000aa8:	bf08      	it	eq
 8000aaa:	f020 0001 	biceq.w	r0, r0, #1
 8000aae:	4770      	bx	lr
 8000ab0:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000ab4:	d121      	bne.n	8000afa <__aeabi_d2f+0x7a>
 8000ab6:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000aba:	bfbc      	itt	lt
 8000abc:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000ac0:	4770      	bxlt	lr
 8000ac2:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000ac6:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000aca:	f1c2 0218 	rsb	r2, r2, #24
 8000ace:	f1c2 0c20 	rsb	ip, r2, #32
 8000ad2:	fa10 f30c 	lsls.w	r3, r0, ip
 8000ad6:	fa20 f002 	lsr.w	r0, r0, r2
 8000ada:	bf18      	it	ne
 8000adc:	f040 0001 	orrne.w	r0, r0, #1
 8000ae0:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000ae4:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000ae8:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000aec:	ea40 000c 	orr.w	r0, r0, ip
 8000af0:	fa23 f302 	lsr.w	r3, r3, r2
 8000af4:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000af8:	e7cc      	b.n	8000a94 <__aeabi_d2f+0x14>
 8000afa:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000afe:	d107      	bne.n	8000b10 <__aeabi_d2f+0x90>
 8000b00:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b04:	bf1e      	ittt	ne
 8000b06:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000b0a:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000b0e:	4770      	bxne	lr
 8000b10:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000b14:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000b18:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000b1c:	4770      	bx	lr
 8000b1e:	bf00      	nop

08000b20 <__aeabi_frsub>:
 8000b20:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8000b24:	e002      	b.n	8000b2c <__addsf3>
 8000b26:	bf00      	nop

08000b28 <__aeabi_fsub>:
 8000b28:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08000b2c <__addsf3>:
 8000b2c:	0042      	lsls	r2, r0, #1
 8000b2e:	bf1f      	itttt	ne
 8000b30:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000b34:	ea92 0f03 	teqne	r2, r3
 8000b38:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000b3c:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000b40:	d06a      	beq.n	8000c18 <__addsf3+0xec>
 8000b42:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000b46:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000b4a:	bfc1      	itttt	gt
 8000b4c:	18d2      	addgt	r2, r2, r3
 8000b4e:	4041      	eorgt	r1, r0
 8000b50:	4048      	eorgt	r0, r1
 8000b52:	4041      	eorgt	r1, r0
 8000b54:	bfb8      	it	lt
 8000b56:	425b      	neglt	r3, r3
 8000b58:	2b19      	cmp	r3, #25
 8000b5a:	bf88      	it	hi
 8000b5c:	4770      	bxhi	lr
 8000b5e:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8000b62:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000b66:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8000b6a:	bf18      	it	ne
 8000b6c:	4240      	negne	r0, r0
 8000b6e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b72:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8000b76:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8000b7a:	bf18      	it	ne
 8000b7c:	4249      	negne	r1, r1
 8000b7e:	ea92 0f03 	teq	r2, r3
 8000b82:	d03f      	beq.n	8000c04 <__addsf3+0xd8>
 8000b84:	f1a2 0201 	sub.w	r2, r2, #1
 8000b88:	fa41 fc03 	asr.w	ip, r1, r3
 8000b8c:	eb10 000c 	adds.w	r0, r0, ip
 8000b90:	f1c3 0320 	rsb	r3, r3, #32
 8000b94:	fa01 f103 	lsl.w	r1, r1, r3
 8000b98:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000b9c:	d502      	bpl.n	8000ba4 <__addsf3+0x78>
 8000b9e:	4249      	negs	r1, r1
 8000ba0:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000ba4:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8000ba8:	d313      	bcc.n	8000bd2 <__addsf3+0xa6>
 8000baa:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8000bae:	d306      	bcc.n	8000bbe <__addsf3+0x92>
 8000bb0:	0840      	lsrs	r0, r0, #1
 8000bb2:	ea4f 0131 	mov.w	r1, r1, rrx
 8000bb6:	f102 0201 	add.w	r2, r2, #1
 8000bba:	2afe      	cmp	r2, #254	; 0xfe
 8000bbc:	d251      	bcs.n	8000c62 <__addsf3+0x136>
 8000bbe:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8000bc2:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000bc6:	bf08      	it	eq
 8000bc8:	f020 0001 	biceq.w	r0, r0, #1
 8000bcc:	ea40 0003 	orr.w	r0, r0, r3
 8000bd0:	4770      	bx	lr
 8000bd2:	0049      	lsls	r1, r1, #1
 8000bd4:	eb40 0000 	adc.w	r0, r0, r0
 8000bd8:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
 8000bdc:	f1a2 0201 	sub.w	r2, r2, #1
 8000be0:	d1ed      	bne.n	8000bbe <__addsf3+0x92>
 8000be2:	fab0 fc80 	clz	ip, r0
 8000be6:	f1ac 0c08 	sub.w	ip, ip, #8
 8000bea:	ebb2 020c 	subs.w	r2, r2, ip
 8000bee:	fa00 f00c 	lsl.w	r0, r0, ip
 8000bf2:	bfaa      	itet	ge
 8000bf4:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000bf8:	4252      	neglt	r2, r2
 8000bfa:	4318      	orrge	r0, r3
 8000bfc:	bfbc      	itt	lt
 8000bfe:	40d0      	lsrlt	r0, r2
 8000c00:	4318      	orrlt	r0, r3
 8000c02:	4770      	bx	lr
 8000c04:	f092 0f00 	teq	r2, #0
 8000c08:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8000c0c:	bf06      	itte	eq
 8000c0e:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8000c12:	3201      	addeq	r2, #1
 8000c14:	3b01      	subne	r3, #1
 8000c16:	e7b5      	b.n	8000b84 <__addsf3+0x58>
 8000c18:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000c1c:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000c20:	bf18      	it	ne
 8000c22:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000c26:	d021      	beq.n	8000c6c <__addsf3+0x140>
 8000c28:	ea92 0f03 	teq	r2, r3
 8000c2c:	d004      	beq.n	8000c38 <__addsf3+0x10c>
 8000c2e:	f092 0f00 	teq	r2, #0
 8000c32:	bf08      	it	eq
 8000c34:	4608      	moveq	r0, r1
 8000c36:	4770      	bx	lr
 8000c38:	ea90 0f01 	teq	r0, r1
 8000c3c:	bf1c      	itt	ne
 8000c3e:	2000      	movne	r0, #0
 8000c40:	4770      	bxne	lr
 8000c42:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8000c46:	d104      	bne.n	8000c52 <__addsf3+0x126>
 8000c48:	0040      	lsls	r0, r0, #1
 8000c4a:	bf28      	it	cs
 8000c4c:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8000c50:	4770      	bx	lr
 8000c52:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8000c56:	bf3c      	itt	cc
 8000c58:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8000c5c:	4770      	bxcc	lr
 8000c5e:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000c62:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8000c66:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c6a:	4770      	bx	lr
 8000c6c:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000c70:	bf16      	itet	ne
 8000c72:	4608      	movne	r0, r1
 8000c74:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000c78:	4601      	movne	r1, r0
 8000c7a:	0242      	lsls	r2, r0, #9
 8000c7c:	bf06      	itte	eq
 8000c7e:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000c82:	ea90 0f01 	teqeq	r0, r1
 8000c86:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 8000c8a:	4770      	bx	lr

08000c8c <__aeabi_ui2f>:
 8000c8c:	f04f 0300 	mov.w	r3, #0
 8000c90:	e004      	b.n	8000c9c <__aeabi_i2f+0x8>
 8000c92:	bf00      	nop

08000c94 <__aeabi_i2f>:
 8000c94:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8000c98:	bf48      	it	mi
 8000c9a:	4240      	negmi	r0, r0
 8000c9c:	ea5f 0c00 	movs.w	ip, r0
 8000ca0:	bf08      	it	eq
 8000ca2:	4770      	bxeq	lr
 8000ca4:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8000ca8:	4601      	mov	r1, r0
 8000caa:	f04f 0000 	mov.w	r0, #0
 8000cae:	e01c      	b.n	8000cea <__aeabi_l2f+0x2a>

08000cb0 <__aeabi_ul2f>:
 8000cb0:	ea50 0201 	orrs.w	r2, r0, r1
 8000cb4:	bf08      	it	eq
 8000cb6:	4770      	bxeq	lr
 8000cb8:	f04f 0300 	mov.w	r3, #0
 8000cbc:	e00a      	b.n	8000cd4 <__aeabi_l2f+0x14>
 8000cbe:	bf00      	nop

08000cc0 <__aeabi_l2f>:
 8000cc0:	ea50 0201 	orrs.w	r2, r0, r1
 8000cc4:	bf08      	it	eq
 8000cc6:	4770      	bxeq	lr
 8000cc8:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8000ccc:	d502      	bpl.n	8000cd4 <__aeabi_l2f+0x14>
 8000cce:	4240      	negs	r0, r0
 8000cd0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000cd4:	ea5f 0c01 	movs.w	ip, r1
 8000cd8:	bf02      	ittt	eq
 8000cda:	4684      	moveq	ip, r0
 8000cdc:	4601      	moveq	r1, r0
 8000cde:	2000      	moveq	r0, #0
 8000ce0:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8000ce4:	bf08      	it	eq
 8000ce6:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8000cea:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8000cee:	fabc f28c 	clz	r2, ip
 8000cf2:	3a08      	subs	r2, #8
 8000cf4:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000cf8:	db10      	blt.n	8000d1c <__aeabi_l2f+0x5c>
 8000cfa:	fa01 fc02 	lsl.w	ip, r1, r2
 8000cfe:	4463      	add	r3, ip
 8000d00:	fa00 fc02 	lsl.w	ip, r0, r2
 8000d04:	f1c2 0220 	rsb	r2, r2, #32
 8000d08:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000d0c:	fa20 f202 	lsr.w	r2, r0, r2
 8000d10:	eb43 0002 	adc.w	r0, r3, r2
 8000d14:	bf08      	it	eq
 8000d16:	f020 0001 	biceq.w	r0, r0, #1
 8000d1a:	4770      	bx	lr
 8000d1c:	f102 0220 	add.w	r2, r2, #32
 8000d20:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d24:	f1c2 0220 	rsb	r2, r2, #32
 8000d28:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000d2c:	fa21 f202 	lsr.w	r2, r1, r2
 8000d30:	eb43 0002 	adc.w	r0, r3, r2
 8000d34:	bf08      	it	eq
 8000d36:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000d3a:	4770      	bx	lr

08000d3c <__aeabi_fmul>:
 8000d3c:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000d40:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000d44:	bf1e      	ittt	ne
 8000d46:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000d4a:	ea92 0f0c 	teqne	r2, ip
 8000d4e:	ea93 0f0c 	teqne	r3, ip
 8000d52:	d06f      	beq.n	8000e34 <__aeabi_fmul+0xf8>
 8000d54:	441a      	add	r2, r3
 8000d56:	ea80 0c01 	eor.w	ip, r0, r1
 8000d5a:	0240      	lsls	r0, r0, #9
 8000d5c:	bf18      	it	ne
 8000d5e:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000d62:	d01e      	beq.n	8000da2 <__aeabi_fmul+0x66>
 8000d64:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8000d68:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000d6c:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000d70:	fba0 3101 	umull	r3, r1, r0, r1
 8000d74:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000d78:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8000d7c:	bf3e      	ittt	cc
 8000d7e:	0049      	lslcc	r1, r1, #1
 8000d80:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8000d84:	005b      	lslcc	r3, r3, #1
 8000d86:	ea40 0001 	orr.w	r0, r0, r1
 8000d8a:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 8000d8e:	2afd      	cmp	r2, #253	; 0xfd
 8000d90:	d81d      	bhi.n	8000dce <__aeabi_fmul+0x92>
 8000d92:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8000d96:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000d9a:	bf08      	it	eq
 8000d9c:	f020 0001 	biceq.w	r0, r0, #1
 8000da0:	4770      	bx	lr
 8000da2:	f090 0f00 	teq	r0, #0
 8000da6:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000daa:	bf08      	it	eq
 8000dac:	0249      	lsleq	r1, r1, #9
 8000dae:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000db2:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8000db6:	3a7f      	subs	r2, #127	; 0x7f
 8000db8:	bfc2      	ittt	gt
 8000dba:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000dbe:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000dc2:	4770      	bxgt	lr
 8000dc4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000dc8:	f04f 0300 	mov.w	r3, #0
 8000dcc:	3a01      	subs	r2, #1
 8000dce:	dc5d      	bgt.n	8000e8c <__aeabi_fmul+0x150>
 8000dd0:	f112 0f19 	cmn.w	r2, #25
 8000dd4:	bfdc      	itt	le
 8000dd6:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 8000dda:	4770      	bxle	lr
 8000ddc:	f1c2 0200 	rsb	r2, r2, #0
 8000de0:	0041      	lsls	r1, r0, #1
 8000de2:	fa21 f102 	lsr.w	r1, r1, r2
 8000de6:	f1c2 0220 	rsb	r2, r2, #32
 8000dea:	fa00 fc02 	lsl.w	ip, r0, r2
 8000dee:	ea5f 0031 	movs.w	r0, r1, rrx
 8000df2:	f140 0000 	adc.w	r0, r0, #0
 8000df6:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000dfa:	bf08      	it	eq
 8000dfc:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000e00:	4770      	bx	lr
 8000e02:	f092 0f00 	teq	r2, #0
 8000e06:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000e0a:	bf02      	ittt	eq
 8000e0c:	0040      	lsleq	r0, r0, #1
 8000e0e:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000e12:	3a01      	subeq	r2, #1
 8000e14:	d0f9      	beq.n	8000e0a <__aeabi_fmul+0xce>
 8000e16:	ea40 000c 	orr.w	r0, r0, ip
 8000e1a:	f093 0f00 	teq	r3, #0
 8000e1e:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000e22:	bf02      	ittt	eq
 8000e24:	0049      	lsleq	r1, r1, #1
 8000e26:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000e2a:	3b01      	subeq	r3, #1
 8000e2c:	d0f9      	beq.n	8000e22 <__aeabi_fmul+0xe6>
 8000e2e:	ea41 010c 	orr.w	r1, r1, ip
 8000e32:	e78f      	b.n	8000d54 <__aeabi_fmul+0x18>
 8000e34:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000e38:	ea92 0f0c 	teq	r2, ip
 8000e3c:	bf18      	it	ne
 8000e3e:	ea93 0f0c 	teqne	r3, ip
 8000e42:	d00a      	beq.n	8000e5a <__aeabi_fmul+0x11e>
 8000e44:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8000e48:	bf18      	it	ne
 8000e4a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8000e4e:	d1d8      	bne.n	8000e02 <__aeabi_fmul+0xc6>
 8000e50:	ea80 0001 	eor.w	r0, r0, r1
 8000e54:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000e58:	4770      	bx	lr
 8000e5a:	f090 0f00 	teq	r0, #0
 8000e5e:	bf17      	itett	ne
 8000e60:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8000e64:	4608      	moveq	r0, r1
 8000e66:	f091 0f00 	teqne	r1, #0
 8000e6a:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 8000e6e:	d014      	beq.n	8000e9a <__aeabi_fmul+0x15e>
 8000e70:	ea92 0f0c 	teq	r2, ip
 8000e74:	d101      	bne.n	8000e7a <__aeabi_fmul+0x13e>
 8000e76:	0242      	lsls	r2, r0, #9
 8000e78:	d10f      	bne.n	8000e9a <__aeabi_fmul+0x15e>
 8000e7a:	ea93 0f0c 	teq	r3, ip
 8000e7e:	d103      	bne.n	8000e88 <__aeabi_fmul+0x14c>
 8000e80:	024b      	lsls	r3, r1, #9
 8000e82:	bf18      	it	ne
 8000e84:	4608      	movne	r0, r1
 8000e86:	d108      	bne.n	8000e9a <__aeabi_fmul+0x15e>
 8000e88:	ea80 0001 	eor.w	r0, r0, r1
 8000e8c:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000e90:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000e94:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000e98:	4770      	bx	lr
 8000e9a:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000e9e:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 8000ea2:	4770      	bx	lr

08000ea4 <__aeabi_fdiv>:
 8000ea4:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000ea8:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000eac:	bf1e      	ittt	ne
 8000eae:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000eb2:	ea92 0f0c 	teqne	r2, ip
 8000eb6:	ea93 0f0c 	teqne	r3, ip
 8000eba:	d069      	beq.n	8000f90 <__aeabi_fdiv+0xec>
 8000ebc:	eba2 0203 	sub.w	r2, r2, r3
 8000ec0:	ea80 0c01 	eor.w	ip, r0, r1
 8000ec4:	0249      	lsls	r1, r1, #9
 8000ec6:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8000eca:	d037      	beq.n	8000f3c <__aeabi_fdiv+0x98>
 8000ecc:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8000ed0:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8000ed4:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8000ed8:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000edc:	428b      	cmp	r3, r1
 8000ede:	bf38      	it	cc
 8000ee0:	005b      	lslcc	r3, r3, #1
 8000ee2:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 8000ee6:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 8000eea:	428b      	cmp	r3, r1
 8000eec:	bf24      	itt	cs
 8000eee:	1a5b      	subcs	r3, r3, r1
 8000ef0:	ea40 000c 	orrcs.w	r0, r0, ip
 8000ef4:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8000ef8:	bf24      	itt	cs
 8000efa:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8000efe:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000f02:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8000f06:	bf24      	itt	cs
 8000f08:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8000f0c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000f10:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8000f14:	bf24      	itt	cs
 8000f16:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8000f1a:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000f1e:	011b      	lsls	r3, r3, #4
 8000f20:	bf18      	it	ne
 8000f22:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8000f26:	d1e0      	bne.n	8000eea <__aeabi_fdiv+0x46>
 8000f28:	2afd      	cmp	r2, #253	; 0xfd
 8000f2a:	f63f af50 	bhi.w	8000dce <__aeabi_fmul+0x92>
 8000f2e:	428b      	cmp	r3, r1
 8000f30:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000f34:	bf08      	it	eq
 8000f36:	f020 0001 	biceq.w	r0, r0, #1
 8000f3a:	4770      	bx	lr
 8000f3c:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000f40:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000f44:	327f      	adds	r2, #127	; 0x7f
 8000f46:	bfc2      	ittt	gt
 8000f48:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000f4c:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000f50:	4770      	bxgt	lr
 8000f52:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000f56:	f04f 0300 	mov.w	r3, #0
 8000f5a:	3a01      	subs	r2, #1
 8000f5c:	e737      	b.n	8000dce <__aeabi_fmul+0x92>
 8000f5e:	f092 0f00 	teq	r2, #0
 8000f62:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000f66:	bf02      	ittt	eq
 8000f68:	0040      	lsleq	r0, r0, #1
 8000f6a:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000f6e:	3a01      	subeq	r2, #1
 8000f70:	d0f9      	beq.n	8000f66 <__aeabi_fdiv+0xc2>
 8000f72:	ea40 000c 	orr.w	r0, r0, ip
 8000f76:	f093 0f00 	teq	r3, #0
 8000f7a:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000f7e:	bf02      	ittt	eq
 8000f80:	0049      	lsleq	r1, r1, #1
 8000f82:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000f86:	3b01      	subeq	r3, #1
 8000f88:	d0f9      	beq.n	8000f7e <__aeabi_fdiv+0xda>
 8000f8a:	ea41 010c 	orr.w	r1, r1, ip
 8000f8e:	e795      	b.n	8000ebc <__aeabi_fdiv+0x18>
 8000f90:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000f94:	ea92 0f0c 	teq	r2, ip
 8000f98:	d108      	bne.n	8000fac <__aeabi_fdiv+0x108>
 8000f9a:	0242      	lsls	r2, r0, #9
 8000f9c:	f47f af7d 	bne.w	8000e9a <__aeabi_fmul+0x15e>
 8000fa0:	ea93 0f0c 	teq	r3, ip
 8000fa4:	f47f af70 	bne.w	8000e88 <__aeabi_fmul+0x14c>
 8000fa8:	4608      	mov	r0, r1
 8000faa:	e776      	b.n	8000e9a <__aeabi_fmul+0x15e>
 8000fac:	ea93 0f0c 	teq	r3, ip
 8000fb0:	d104      	bne.n	8000fbc <__aeabi_fdiv+0x118>
 8000fb2:	024b      	lsls	r3, r1, #9
 8000fb4:	f43f af4c 	beq.w	8000e50 <__aeabi_fmul+0x114>
 8000fb8:	4608      	mov	r0, r1
 8000fba:	e76e      	b.n	8000e9a <__aeabi_fmul+0x15e>
 8000fbc:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8000fc0:	bf18      	it	ne
 8000fc2:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8000fc6:	d1ca      	bne.n	8000f5e <__aeabi_fdiv+0xba>
 8000fc8:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 8000fcc:	f47f af5c 	bne.w	8000e88 <__aeabi_fmul+0x14c>
 8000fd0:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 8000fd4:	f47f af3c 	bne.w	8000e50 <__aeabi_fmul+0x114>
 8000fd8:	e75f      	b.n	8000e9a <__aeabi_fmul+0x15e>
 8000fda:	bf00      	nop

08000fdc <__gesf2>:
 8000fdc:	f04f 3cff 	mov.w	ip, #4294967295
 8000fe0:	e006      	b.n	8000ff0 <__cmpsf2+0x4>
 8000fe2:	bf00      	nop

08000fe4 <__lesf2>:
 8000fe4:	f04f 0c01 	mov.w	ip, #1
 8000fe8:	e002      	b.n	8000ff0 <__cmpsf2+0x4>
 8000fea:	bf00      	nop

08000fec <__cmpsf2>:
 8000fec:	f04f 0c01 	mov.w	ip, #1
 8000ff0:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000ff4:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8000ff8:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000ffc:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8001000:	bf18      	it	ne
 8001002:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8001006:	d011      	beq.n	800102c <__cmpsf2+0x40>
 8001008:	b001      	add	sp, #4
 800100a:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 800100e:	bf18      	it	ne
 8001010:	ea90 0f01 	teqne	r0, r1
 8001014:	bf58      	it	pl
 8001016:	ebb2 0003 	subspl.w	r0, r2, r3
 800101a:	bf88      	it	hi
 800101c:	17c8      	asrhi	r0, r1, #31
 800101e:	bf38      	it	cc
 8001020:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 8001024:	bf18      	it	ne
 8001026:	f040 0001 	orrne.w	r0, r0, #1
 800102a:	4770      	bx	lr
 800102c:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8001030:	d102      	bne.n	8001038 <__cmpsf2+0x4c>
 8001032:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 8001036:	d105      	bne.n	8001044 <__cmpsf2+0x58>
 8001038:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 800103c:	d1e4      	bne.n	8001008 <__cmpsf2+0x1c>
 800103e:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 8001042:	d0e1      	beq.n	8001008 <__cmpsf2+0x1c>
 8001044:	f85d 0b04 	ldr.w	r0, [sp], #4
 8001048:	4770      	bx	lr
 800104a:	bf00      	nop

0800104c <__aeabi_cfrcmple>:
 800104c:	4684      	mov	ip, r0
 800104e:	4608      	mov	r0, r1
 8001050:	4661      	mov	r1, ip
 8001052:	e7ff      	b.n	8001054 <__aeabi_cfcmpeq>

08001054 <__aeabi_cfcmpeq>:
 8001054:	b50f      	push	{r0, r1, r2, r3, lr}
 8001056:	f7ff ffc9 	bl	8000fec <__cmpsf2>
 800105a:	2800      	cmp	r0, #0
 800105c:	bf48      	it	mi
 800105e:	f110 0f00 	cmnmi.w	r0, #0
 8001062:	bd0f      	pop	{r0, r1, r2, r3, pc}

08001064 <__aeabi_fcmpeq>:
 8001064:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001068:	f7ff fff4 	bl	8001054 <__aeabi_cfcmpeq>
 800106c:	bf0c      	ite	eq
 800106e:	2001      	moveq	r0, #1
 8001070:	2000      	movne	r0, #0
 8001072:	f85d fb08 	ldr.w	pc, [sp], #8
 8001076:	bf00      	nop

08001078 <__aeabi_fcmplt>:
 8001078:	f84d ed08 	str.w	lr, [sp, #-8]!
 800107c:	f7ff ffea 	bl	8001054 <__aeabi_cfcmpeq>
 8001080:	bf34      	ite	cc
 8001082:	2001      	movcc	r0, #1
 8001084:	2000      	movcs	r0, #0
 8001086:	f85d fb08 	ldr.w	pc, [sp], #8
 800108a:	bf00      	nop

0800108c <__aeabi_fcmple>:
 800108c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001090:	f7ff ffe0 	bl	8001054 <__aeabi_cfcmpeq>
 8001094:	bf94      	ite	ls
 8001096:	2001      	movls	r0, #1
 8001098:	2000      	movhi	r0, #0
 800109a:	f85d fb08 	ldr.w	pc, [sp], #8
 800109e:	bf00      	nop

080010a0 <__aeabi_fcmpge>:
 80010a0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80010a4:	f7ff ffd2 	bl	800104c <__aeabi_cfrcmple>
 80010a8:	bf94      	ite	ls
 80010aa:	2001      	movls	r0, #1
 80010ac:	2000      	movhi	r0, #0
 80010ae:	f85d fb08 	ldr.w	pc, [sp], #8
 80010b2:	bf00      	nop

080010b4 <__aeabi_fcmpgt>:
 80010b4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80010b8:	f7ff ffc8 	bl	800104c <__aeabi_cfrcmple>
 80010bc:	bf34      	ite	cc
 80010be:	2001      	movcc	r0, #1
 80010c0:	2000      	movcs	r0, #0
 80010c2:	f85d fb08 	ldr.w	pc, [sp], #8
 80010c6:	bf00      	nop

080010c8 <__aeabi_fcmpun>:
 80010c8:	ea4f 0240 	mov.w	r2, r0, lsl #1
 80010cc:	ea4f 0341 	mov.w	r3, r1, lsl #1
 80010d0:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 80010d4:	d102      	bne.n	80010dc <__aeabi_fcmpun+0x14>
 80010d6:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 80010da:	d108      	bne.n	80010ee <__aeabi_fcmpun+0x26>
 80010dc:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 80010e0:	d102      	bne.n	80010e8 <__aeabi_fcmpun+0x20>
 80010e2:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 80010e6:	d102      	bne.n	80010ee <__aeabi_fcmpun+0x26>
 80010e8:	f04f 0000 	mov.w	r0, #0
 80010ec:	4770      	bx	lr
 80010ee:	f04f 0001 	mov.w	r0, #1
 80010f2:	4770      	bx	lr

080010f4 <__aeabi_uldivmod>:
 80010f4:	b953      	cbnz	r3, 800110c <__aeabi_uldivmod+0x18>
 80010f6:	b94a      	cbnz	r2, 800110c <__aeabi_uldivmod+0x18>
 80010f8:	2900      	cmp	r1, #0
 80010fa:	bf08      	it	eq
 80010fc:	2800      	cmpeq	r0, #0
 80010fe:	bf1c      	itt	ne
 8001100:	f04f 31ff 	movne.w	r1, #4294967295
 8001104:	f04f 30ff 	movne.w	r0, #4294967295
 8001108:	f000 b97a 	b.w	8001400 <__aeabi_idiv0>
 800110c:	f1ad 0c08 	sub.w	ip, sp, #8
 8001110:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8001114:	f000 f806 	bl	8001124 <__udivmoddi4>
 8001118:	f8dd e004 	ldr.w	lr, [sp, #4]
 800111c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8001120:	b004      	add	sp, #16
 8001122:	4770      	bx	lr

08001124 <__udivmoddi4>:
 8001124:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001128:	468c      	mov	ip, r1
 800112a:	460e      	mov	r6, r1
 800112c:	4604      	mov	r4, r0
 800112e:	9d08      	ldr	r5, [sp, #32]
 8001130:	2b00      	cmp	r3, #0
 8001132:	d150      	bne.n	80011d6 <__udivmoddi4+0xb2>
 8001134:	428a      	cmp	r2, r1
 8001136:	4617      	mov	r7, r2
 8001138:	d96c      	bls.n	8001214 <__udivmoddi4+0xf0>
 800113a:	fab2 fe82 	clz	lr, r2
 800113e:	f1be 0f00 	cmp.w	lr, #0
 8001142:	d00b      	beq.n	800115c <__udivmoddi4+0x38>
 8001144:	f1ce 0c20 	rsb	ip, lr, #32
 8001148:	fa01 f60e 	lsl.w	r6, r1, lr
 800114c:	fa20 fc0c 	lsr.w	ip, r0, ip
 8001150:	fa02 f70e 	lsl.w	r7, r2, lr
 8001154:	ea4c 0c06 	orr.w	ip, ip, r6
 8001158:	fa00 f40e 	lsl.w	r4, r0, lr
 800115c:	0c3a      	lsrs	r2, r7, #16
 800115e:	fbbc f9f2 	udiv	r9, ip, r2
 8001162:	b2bb      	uxth	r3, r7
 8001164:	fb02 cc19 	mls	ip, r2, r9, ip
 8001168:	fb09 fa03 	mul.w	sl, r9, r3
 800116c:	ea4f 4814 	mov.w	r8, r4, lsr #16
 8001170:	ea48 460c 	orr.w	r6, r8, ip, lsl #16
 8001174:	45b2      	cmp	sl, r6
 8001176:	d90a      	bls.n	800118e <__udivmoddi4+0x6a>
 8001178:	19f6      	adds	r6, r6, r7
 800117a:	f109 31ff 	add.w	r1, r9, #4294967295
 800117e:	f080 8125 	bcs.w	80013cc <__udivmoddi4+0x2a8>
 8001182:	45b2      	cmp	sl, r6
 8001184:	f240 8122 	bls.w	80013cc <__udivmoddi4+0x2a8>
 8001188:	f1a9 0902 	sub.w	r9, r9, #2
 800118c:	443e      	add	r6, r7
 800118e:	eba6 060a 	sub.w	r6, r6, sl
 8001192:	fbb6 f0f2 	udiv	r0, r6, r2
 8001196:	fb02 6610 	mls	r6, r2, r0, r6
 800119a:	fb00 f303 	mul.w	r3, r0, r3
 800119e:	b2a4      	uxth	r4, r4
 80011a0:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 80011a4:	42a3      	cmp	r3, r4
 80011a6:	d909      	bls.n	80011bc <__udivmoddi4+0x98>
 80011a8:	19e4      	adds	r4, r4, r7
 80011aa:	f100 32ff 	add.w	r2, r0, #4294967295
 80011ae:	f080 810b 	bcs.w	80013c8 <__udivmoddi4+0x2a4>
 80011b2:	42a3      	cmp	r3, r4
 80011b4:	f240 8108 	bls.w	80013c8 <__udivmoddi4+0x2a4>
 80011b8:	3802      	subs	r0, #2
 80011ba:	443c      	add	r4, r7
 80011bc:	2100      	movs	r1, #0
 80011be:	1ae4      	subs	r4, r4, r3
 80011c0:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 80011c4:	2d00      	cmp	r5, #0
 80011c6:	d062      	beq.n	800128e <__udivmoddi4+0x16a>
 80011c8:	2300      	movs	r3, #0
 80011ca:	fa24 f40e 	lsr.w	r4, r4, lr
 80011ce:	602c      	str	r4, [r5, #0]
 80011d0:	606b      	str	r3, [r5, #4]
 80011d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80011d6:	428b      	cmp	r3, r1
 80011d8:	d907      	bls.n	80011ea <__udivmoddi4+0xc6>
 80011da:	2d00      	cmp	r5, #0
 80011dc:	d055      	beq.n	800128a <__udivmoddi4+0x166>
 80011de:	2100      	movs	r1, #0
 80011e0:	e885 0041 	stmia.w	r5, {r0, r6}
 80011e4:	4608      	mov	r0, r1
 80011e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80011ea:	fab3 f183 	clz	r1, r3
 80011ee:	2900      	cmp	r1, #0
 80011f0:	f040 808f 	bne.w	8001312 <__udivmoddi4+0x1ee>
 80011f4:	42b3      	cmp	r3, r6
 80011f6:	d302      	bcc.n	80011fe <__udivmoddi4+0xda>
 80011f8:	4282      	cmp	r2, r0
 80011fa:	f200 80fc 	bhi.w	80013f6 <__udivmoddi4+0x2d2>
 80011fe:	1a84      	subs	r4, r0, r2
 8001200:	eb66 0603 	sbc.w	r6, r6, r3
 8001204:	2001      	movs	r0, #1
 8001206:	46b4      	mov	ip, r6
 8001208:	2d00      	cmp	r5, #0
 800120a:	d040      	beq.n	800128e <__udivmoddi4+0x16a>
 800120c:	e885 1010 	stmia.w	r5, {r4, ip}
 8001210:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001214:	b912      	cbnz	r2, 800121c <__udivmoddi4+0xf8>
 8001216:	2701      	movs	r7, #1
 8001218:	fbb7 f7f2 	udiv	r7, r7, r2
 800121c:	fab7 fe87 	clz	lr, r7
 8001220:	f1be 0f00 	cmp.w	lr, #0
 8001224:	d135      	bne.n	8001292 <__udivmoddi4+0x16e>
 8001226:	2101      	movs	r1, #1
 8001228:	1bf6      	subs	r6, r6, r7
 800122a:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 800122e:	fa1f f887 	uxth.w	r8, r7
 8001232:	fbb6 f2fc 	udiv	r2, r6, ip
 8001236:	fb0c 6612 	mls	r6, ip, r2, r6
 800123a:	fb08 f002 	mul.w	r0, r8, r2
 800123e:	0c23      	lsrs	r3, r4, #16
 8001240:	ea43 4606 	orr.w	r6, r3, r6, lsl #16
 8001244:	42b0      	cmp	r0, r6
 8001246:	d907      	bls.n	8001258 <__udivmoddi4+0x134>
 8001248:	19f6      	adds	r6, r6, r7
 800124a:	f102 33ff 	add.w	r3, r2, #4294967295
 800124e:	d202      	bcs.n	8001256 <__udivmoddi4+0x132>
 8001250:	42b0      	cmp	r0, r6
 8001252:	f200 80d2 	bhi.w	80013fa <__udivmoddi4+0x2d6>
 8001256:	461a      	mov	r2, r3
 8001258:	1a36      	subs	r6, r6, r0
 800125a:	fbb6 f0fc 	udiv	r0, r6, ip
 800125e:	fb0c 6610 	mls	r6, ip, r0, r6
 8001262:	fb08 f800 	mul.w	r8, r8, r0
 8001266:	b2a3      	uxth	r3, r4
 8001268:	ea43 4406 	orr.w	r4, r3, r6, lsl #16
 800126c:	45a0      	cmp	r8, r4
 800126e:	d907      	bls.n	8001280 <__udivmoddi4+0x15c>
 8001270:	19e4      	adds	r4, r4, r7
 8001272:	f100 33ff 	add.w	r3, r0, #4294967295
 8001276:	d202      	bcs.n	800127e <__udivmoddi4+0x15a>
 8001278:	45a0      	cmp	r8, r4
 800127a:	f200 80b9 	bhi.w	80013f0 <__udivmoddi4+0x2cc>
 800127e:	4618      	mov	r0, r3
 8001280:	eba4 0408 	sub.w	r4, r4, r8
 8001284:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8001288:	e79c      	b.n	80011c4 <__udivmoddi4+0xa0>
 800128a:	4629      	mov	r1, r5
 800128c:	4628      	mov	r0, r5
 800128e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001292:	fa07 f70e 	lsl.w	r7, r7, lr
 8001296:	f1ce 0320 	rsb	r3, lr, #32
 800129a:	fa26 f203 	lsr.w	r2, r6, r3
 800129e:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 80012a2:	fbb2 f1fc 	udiv	r1, r2, ip
 80012a6:	fa1f f887 	uxth.w	r8, r7
 80012aa:	fb0c 2211 	mls	r2, ip, r1, r2
 80012ae:	fa06 f60e 	lsl.w	r6, r6, lr
 80012b2:	fa20 f303 	lsr.w	r3, r0, r3
 80012b6:	fb01 f908 	mul.w	r9, r1, r8
 80012ba:	4333      	orrs	r3, r6
 80012bc:	0c1e      	lsrs	r6, r3, #16
 80012be:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
 80012c2:	45b1      	cmp	r9, r6
 80012c4:	fa00 f40e 	lsl.w	r4, r0, lr
 80012c8:	d909      	bls.n	80012de <__udivmoddi4+0x1ba>
 80012ca:	19f6      	adds	r6, r6, r7
 80012cc:	f101 32ff 	add.w	r2, r1, #4294967295
 80012d0:	f080 808c 	bcs.w	80013ec <__udivmoddi4+0x2c8>
 80012d4:	45b1      	cmp	r9, r6
 80012d6:	f240 8089 	bls.w	80013ec <__udivmoddi4+0x2c8>
 80012da:	3902      	subs	r1, #2
 80012dc:	443e      	add	r6, r7
 80012de:	eba6 0609 	sub.w	r6, r6, r9
 80012e2:	fbb6 f0fc 	udiv	r0, r6, ip
 80012e6:	fb0c 6210 	mls	r2, ip, r0, r6
 80012ea:	fb00 f908 	mul.w	r9, r0, r8
 80012ee:	b29e      	uxth	r6, r3
 80012f0:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
 80012f4:	45b1      	cmp	r9, r6
 80012f6:	d907      	bls.n	8001308 <__udivmoddi4+0x1e4>
 80012f8:	19f6      	adds	r6, r6, r7
 80012fa:	f100 33ff 	add.w	r3, r0, #4294967295
 80012fe:	d271      	bcs.n	80013e4 <__udivmoddi4+0x2c0>
 8001300:	45b1      	cmp	r9, r6
 8001302:	d96f      	bls.n	80013e4 <__udivmoddi4+0x2c0>
 8001304:	3802      	subs	r0, #2
 8001306:	443e      	add	r6, r7
 8001308:	eba6 0609 	sub.w	r6, r6, r9
 800130c:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8001310:	e78f      	b.n	8001232 <__udivmoddi4+0x10e>
 8001312:	f1c1 0720 	rsb	r7, r1, #32
 8001316:	fa22 f807 	lsr.w	r8, r2, r7
 800131a:	408b      	lsls	r3, r1
 800131c:	ea48 0303 	orr.w	r3, r8, r3
 8001320:	fa26 f407 	lsr.w	r4, r6, r7
 8001324:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 8001328:	fbb4 f9fe 	udiv	r9, r4, lr
 800132c:	fa1f fc83 	uxth.w	ip, r3
 8001330:	fb0e 4419 	mls	r4, lr, r9, r4
 8001334:	408e      	lsls	r6, r1
 8001336:	fa20 f807 	lsr.w	r8, r0, r7
 800133a:	fb09 fa0c 	mul.w	sl, r9, ip
 800133e:	ea48 0806 	orr.w	r8, r8, r6
 8001342:	ea4f 4618 	mov.w	r6, r8, lsr #16
 8001346:	ea46 4404 	orr.w	r4, r6, r4, lsl #16
 800134a:	45a2      	cmp	sl, r4
 800134c:	fa02 f201 	lsl.w	r2, r2, r1
 8001350:	fa00 f601 	lsl.w	r6, r0, r1
 8001354:	d908      	bls.n	8001368 <__udivmoddi4+0x244>
 8001356:	18e4      	adds	r4, r4, r3
 8001358:	f109 30ff 	add.w	r0, r9, #4294967295
 800135c:	d244      	bcs.n	80013e8 <__udivmoddi4+0x2c4>
 800135e:	45a2      	cmp	sl, r4
 8001360:	d942      	bls.n	80013e8 <__udivmoddi4+0x2c4>
 8001362:	f1a9 0902 	sub.w	r9, r9, #2
 8001366:	441c      	add	r4, r3
 8001368:	eba4 040a 	sub.w	r4, r4, sl
 800136c:	fbb4 f0fe 	udiv	r0, r4, lr
 8001370:	fb0e 4410 	mls	r4, lr, r0, r4
 8001374:	fb00 fc0c 	mul.w	ip, r0, ip
 8001378:	fa1f f888 	uxth.w	r8, r8
 800137c:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
 8001380:	45a4      	cmp	ip, r4
 8001382:	d907      	bls.n	8001394 <__udivmoddi4+0x270>
 8001384:	18e4      	adds	r4, r4, r3
 8001386:	f100 3eff 	add.w	lr, r0, #4294967295
 800138a:	d229      	bcs.n	80013e0 <__udivmoddi4+0x2bc>
 800138c:	45a4      	cmp	ip, r4
 800138e:	d927      	bls.n	80013e0 <__udivmoddi4+0x2bc>
 8001390:	3802      	subs	r0, #2
 8001392:	441c      	add	r4, r3
 8001394:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8001398:	fba0 8902 	umull	r8, r9, r0, r2
 800139c:	eba4 0c0c 	sub.w	ip, r4, ip
 80013a0:	45cc      	cmp	ip, r9
 80013a2:	46c2      	mov	sl, r8
 80013a4:	46ce      	mov	lr, r9
 80013a6:	d315      	bcc.n	80013d4 <__udivmoddi4+0x2b0>
 80013a8:	d012      	beq.n	80013d0 <__udivmoddi4+0x2ac>
 80013aa:	b155      	cbz	r5, 80013c2 <__udivmoddi4+0x29e>
 80013ac:	ebb6 030a 	subs.w	r3, r6, sl
 80013b0:	eb6c 060e 	sbc.w	r6, ip, lr
 80013b4:	fa06 f707 	lsl.w	r7, r6, r7
 80013b8:	40cb      	lsrs	r3, r1
 80013ba:	431f      	orrs	r7, r3
 80013bc:	40ce      	lsrs	r6, r1
 80013be:	602f      	str	r7, [r5, #0]
 80013c0:	606e      	str	r6, [r5, #4]
 80013c2:	2100      	movs	r1, #0
 80013c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80013c8:	4610      	mov	r0, r2
 80013ca:	e6f7      	b.n	80011bc <__udivmoddi4+0x98>
 80013cc:	4689      	mov	r9, r1
 80013ce:	e6de      	b.n	800118e <__udivmoddi4+0x6a>
 80013d0:	4546      	cmp	r6, r8
 80013d2:	d2ea      	bcs.n	80013aa <__udivmoddi4+0x286>
 80013d4:	ebb8 0a02 	subs.w	sl, r8, r2
 80013d8:	eb69 0e03 	sbc.w	lr, r9, r3
 80013dc:	3801      	subs	r0, #1
 80013de:	e7e4      	b.n	80013aa <__udivmoddi4+0x286>
 80013e0:	4670      	mov	r0, lr
 80013e2:	e7d7      	b.n	8001394 <__udivmoddi4+0x270>
 80013e4:	4618      	mov	r0, r3
 80013e6:	e78f      	b.n	8001308 <__udivmoddi4+0x1e4>
 80013e8:	4681      	mov	r9, r0
 80013ea:	e7bd      	b.n	8001368 <__udivmoddi4+0x244>
 80013ec:	4611      	mov	r1, r2
 80013ee:	e776      	b.n	80012de <__udivmoddi4+0x1ba>
 80013f0:	3802      	subs	r0, #2
 80013f2:	443c      	add	r4, r7
 80013f4:	e744      	b.n	8001280 <__udivmoddi4+0x15c>
 80013f6:	4608      	mov	r0, r1
 80013f8:	e706      	b.n	8001208 <__udivmoddi4+0xe4>
 80013fa:	3a02      	subs	r2, #2
 80013fc:	443e      	add	r6, r7
 80013fe:	e72b      	b.n	8001258 <__udivmoddi4+0x134>

08001400 <__aeabi_idiv0>:
 8001400:	4770      	bx	lr
 8001402:	bf00      	nop

08001404 <NVIC_Init>:
  * @param  NVIC_InitStruct: pointer to a NVIC_InitTypeDef structure that contains
  *         the configuration information for the specified NVIC peripheral.
  * @retval None
  */
void NVIC_Init(NVIC_InitTypeDef* NVIC_InitStruct)
{
 8001404:	b480      	push	{r7}
 8001406:	b087      	sub	sp, #28
 8001408:	af00      	add	r7, sp, #0
 800140a:	6078      	str	r0, [r7, #4]
  uint32_t tmppriority = 0x00, tmppre = 0x00, tmpsub = 0x0F;
 800140c:	2300      	movs	r3, #0
 800140e:	617b      	str	r3, [r7, #20]
 8001410:	2300      	movs	r3, #0
 8001412:	613b      	str	r3, [r7, #16]
 8001414:	230f      	movs	r3, #15
 8001416:	60fb      	str	r3, [r7, #12]
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(NVIC_InitStruct->NVIC_IRQChannelCmd));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority));  
  assert_param(IS_NVIC_SUB_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelSubPriority));
    
  if (NVIC_InitStruct->NVIC_IRQChannelCmd != DISABLE)
 8001418:	687b      	ldr	r3, [r7, #4]
 800141a:	78db      	ldrb	r3, [r3, #3]
 800141c:	2b00      	cmp	r3, #0
 800141e:	d03a      	beq.n	8001496 <NVIC_Init+0x92>
  {
    /* Compute the Corresponding IRQ Priority --------------------------------*/    
    tmppriority = (0x700 - ((SCB->AIRCR) & (uint32_t)0x700))>> 0x08;
 8001420:	4b27      	ldr	r3, [pc, #156]	; (80014c0 <NVIC_Init+0xbc>)
 8001422:	68db      	ldr	r3, [r3, #12]
 8001424:	43db      	mvns	r3, r3
 8001426:	0a1b      	lsrs	r3, r3, #8
 8001428:	f003 0307 	and.w	r3, r3, #7
 800142c:	617b      	str	r3, [r7, #20]
    tmppre = (0x4 - tmppriority);
 800142e:	697b      	ldr	r3, [r7, #20]
 8001430:	f1c3 0304 	rsb	r3, r3, #4
 8001434:	613b      	str	r3, [r7, #16]
    tmpsub = tmpsub >> tmppriority;
 8001436:	68fa      	ldr	r2, [r7, #12]
 8001438:	697b      	ldr	r3, [r7, #20]
 800143a:	fa22 f303 	lsr.w	r3, r2, r3
 800143e:	60fb      	str	r3, [r7, #12]

    tmppriority = (uint32_t)NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority << tmppre;
 8001440:	687b      	ldr	r3, [r7, #4]
 8001442:	785b      	ldrb	r3, [r3, #1]
 8001444:	461a      	mov	r2, r3
 8001446:	693b      	ldr	r3, [r7, #16]
 8001448:	fa02 f303 	lsl.w	r3, r2, r3
 800144c:	617b      	str	r3, [r7, #20]
    tmppriority |=  NVIC_InitStruct->NVIC_IRQChannelSubPriority & tmpsub;
 800144e:	687b      	ldr	r3, [r7, #4]
 8001450:	789b      	ldrb	r3, [r3, #2]
 8001452:	461a      	mov	r2, r3
 8001454:	68fb      	ldr	r3, [r7, #12]
 8001456:	4013      	ands	r3, r2
 8001458:	697a      	ldr	r2, [r7, #20]
 800145a:	4313      	orrs	r3, r2
 800145c:	617b      	str	r3, [r7, #20]
    tmppriority = tmppriority << 0x04;
 800145e:	697b      	ldr	r3, [r7, #20]
 8001460:	011b      	lsls	r3, r3, #4
 8001462:	617b      	str	r3, [r7, #20]
        
    NVIC->IP[NVIC_InitStruct->NVIC_IRQChannel] = tmppriority;
 8001464:	4a17      	ldr	r2, [pc, #92]	; (80014c4 <NVIC_Init+0xc0>)
 8001466:	687b      	ldr	r3, [r7, #4]
 8001468:	781b      	ldrb	r3, [r3, #0]
 800146a:	6979      	ldr	r1, [r7, #20]
 800146c:	b2c9      	uxtb	r1, r1
 800146e:	4413      	add	r3, r2
 8001470:	460a      	mov	r2, r1
 8001472:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
    
    /* Enable the Selected IRQ Channels --------------------------------------*/
    NVIC->ISER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 8001476:	4a13      	ldr	r2, [pc, #76]	; (80014c4 <NVIC_Init+0xc0>)
 8001478:	687b      	ldr	r3, [r7, #4]
 800147a:	781b      	ldrb	r3, [r3, #0]
 800147c:	095b      	lsrs	r3, r3, #5
 800147e:	b2db      	uxtb	r3, r3
 8001480:	4618      	mov	r0, r3
      (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 8001482:	687b      	ldr	r3, [r7, #4]
 8001484:	781b      	ldrb	r3, [r3, #0]
 8001486:	f003 031f 	and.w	r3, r3, #31
 800148a:	2101      	movs	r1, #1
 800148c:	fa01 f303 	lsl.w	r3, r1, r3
    NVIC->ISER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 8001490:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
  {
    /* Disable the Selected IRQ Channels -------------------------------------*/
    NVIC->ICER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
      (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
  }
}
 8001494:	e00f      	b.n	80014b6 <NVIC_Init+0xb2>
    NVIC->ICER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 8001496:	490b      	ldr	r1, [pc, #44]	; (80014c4 <NVIC_Init+0xc0>)
 8001498:	687b      	ldr	r3, [r7, #4]
 800149a:	781b      	ldrb	r3, [r3, #0]
 800149c:	095b      	lsrs	r3, r3, #5
 800149e:	b2db      	uxtb	r3, r3
 80014a0:	4618      	mov	r0, r3
      (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 80014a2:	687b      	ldr	r3, [r7, #4]
 80014a4:	781b      	ldrb	r3, [r3, #0]
 80014a6:	f003 031f 	and.w	r3, r3, #31
 80014aa:	2201      	movs	r2, #1
 80014ac:	409a      	lsls	r2, r3
    NVIC->ICER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 80014ae:	f100 0320 	add.w	r3, r0, #32
 80014b2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 80014b6:	bf00      	nop
 80014b8:	371c      	adds	r7, #28
 80014ba:	46bd      	mov	sp, r7
 80014bc:	bc80      	pop	{r7}
 80014be:	4770      	bx	lr
 80014c0:	e000ed00 	.word	0xe000ed00
 80014c4:	e000e100 	.word	0xe000e100

080014c8 <GPIO_Init>:
  * @param  GPIO_InitStruct: pointer to a GPIO_InitTypeDef structure that
  *         contains the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct)
{
 80014c8:	b480      	push	{r7}
 80014ca:	b089      	sub	sp, #36	; 0x24
 80014cc:	af00      	add	r7, sp, #0
 80014ce:	6078      	str	r0, [r7, #4]
 80014d0:	6039      	str	r1, [r7, #0]
  uint32_t currentmode = 0x00, currentpin = 0x00, pinpos = 0x00, pos = 0x00;
 80014d2:	2300      	movs	r3, #0
 80014d4:	61fb      	str	r3, [r7, #28]
 80014d6:	2300      	movs	r3, #0
 80014d8:	613b      	str	r3, [r7, #16]
 80014da:	2300      	movs	r3, #0
 80014dc:	61bb      	str	r3, [r7, #24]
 80014de:	2300      	movs	r3, #0
 80014e0:	60fb      	str	r3, [r7, #12]
  uint32_t tmpreg = 0x00, pinmask = 0x00;
 80014e2:	2300      	movs	r3, #0
 80014e4:	617b      	str	r3, [r7, #20]
 80014e6:	2300      	movs	r3, #0
 80014e8:	60bb      	str	r3, [r7, #8]
  assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
  assert_param(IS_GPIO_MODE(GPIO_InitStruct->GPIO_Mode));
  assert_param(IS_GPIO_PIN(GPIO_InitStruct->GPIO_Pin));  
  
/*---------------------------- GPIO Mode Configuration -----------------------*/
  currentmode = ((uint32_t)GPIO_InitStruct->GPIO_Mode) & ((uint32_t)0x0F);
 80014ea:	683b      	ldr	r3, [r7, #0]
 80014ec:	78db      	ldrb	r3, [r3, #3]
 80014ee:	f003 030f 	and.w	r3, r3, #15
 80014f2:	61fb      	str	r3, [r7, #28]
  if ((((uint32_t)GPIO_InitStruct->GPIO_Mode) & ((uint32_t)0x10)) != 0x00)
 80014f4:	683b      	ldr	r3, [r7, #0]
 80014f6:	78db      	ldrb	r3, [r3, #3]
 80014f8:	f003 0310 	and.w	r3, r3, #16
 80014fc:	2b00      	cmp	r3, #0
 80014fe:	d005      	beq.n	800150c <GPIO_Init+0x44>
  { 
    /* Check the parameters */
    assert_param(IS_GPIO_SPEED(GPIO_InitStruct->GPIO_Speed));
    /* Output mode */
    currentmode |= (uint32_t)GPIO_InitStruct->GPIO_Speed;
 8001500:	683b      	ldr	r3, [r7, #0]
 8001502:	789b      	ldrb	r3, [r3, #2]
 8001504:	461a      	mov	r2, r3
 8001506:	69fb      	ldr	r3, [r7, #28]
 8001508:	4313      	orrs	r3, r2
 800150a:	61fb      	str	r3, [r7, #28]
  }
/*---------------------------- GPIO CRL Configuration ------------------------*/
  /* Configure the eight low port pins */
  if (((uint32_t)GPIO_InitStruct->GPIO_Pin & ((uint32_t)0x00FF)) != 0x00)
 800150c:	683b      	ldr	r3, [r7, #0]
 800150e:	881b      	ldrh	r3, [r3, #0]
 8001510:	b2db      	uxtb	r3, r3
 8001512:	2b00      	cmp	r3, #0
 8001514:	d044      	beq.n	80015a0 <GPIO_Init+0xd8>
  {
    tmpreg = GPIOx->CRL;
 8001516:	687b      	ldr	r3, [r7, #4]
 8001518:	681b      	ldr	r3, [r3, #0]
 800151a:	617b      	str	r3, [r7, #20]
    for (pinpos = 0x00; pinpos < 0x08; pinpos++)
 800151c:	2300      	movs	r3, #0
 800151e:	61bb      	str	r3, [r7, #24]
 8001520:	e038      	b.n	8001594 <GPIO_Init+0xcc>
    {
      pos = ((uint32_t)0x01) << pinpos;
 8001522:	2201      	movs	r2, #1
 8001524:	69bb      	ldr	r3, [r7, #24]
 8001526:	fa02 f303 	lsl.w	r3, r2, r3
 800152a:	60fb      	str	r3, [r7, #12]
      /* Get the port pins position */
      currentpin = (GPIO_InitStruct->GPIO_Pin) & pos;
 800152c:	683b      	ldr	r3, [r7, #0]
 800152e:	881b      	ldrh	r3, [r3, #0]
 8001530:	461a      	mov	r2, r3
 8001532:	68fb      	ldr	r3, [r7, #12]
 8001534:	4013      	ands	r3, r2
 8001536:	613b      	str	r3, [r7, #16]
      if (currentpin == pos)
 8001538:	693a      	ldr	r2, [r7, #16]
 800153a:	68fb      	ldr	r3, [r7, #12]
 800153c:	429a      	cmp	r2, r3
 800153e:	d126      	bne.n	800158e <GPIO_Init+0xc6>
      {
        pos = pinpos << 2;
 8001540:	69bb      	ldr	r3, [r7, #24]
 8001542:	009b      	lsls	r3, r3, #2
 8001544:	60fb      	str	r3, [r7, #12]
        /* Clear the corresponding low control register bits */
        pinmask = ((uint32_t)0x0F) << pos;
 8001546:	220f      	movs	r2, #15
 8001548:	68fb      	ldr	r3, [r7, #12]
 800154a:	fa02 f303 	lsl.w	r3, r2, r3
 800154e:	60bb      	str	r3, [r7, #8]
        tmpreg &= ~pinmask;
 8001550:	68bb      	ldr	r3, [r7, #8]
 8001552:	43db      	mvns	r3, r3
 8001554:	697a      	ldr	r2, [r7, #20]
 8001556:	4013      	ands	r3, r2
 8001558:	617b      	str	r3, [r7, #20]
        /* Write the mode configuration in the corresponding bits */
        tmpreg |= (currentmode << pos);
 800155a:	69fa      	ldr	r2, [r7, #28]
 800155c:	68fb      	ldr	r3, [r7, #12]
 800155e:	fa02 f303 	lsl.w	r3, r2, r3
 8001562:	697a      	ldr	r2, [r7, #20]
 8001564:	4313      	orrs	r3, r2
 8001566:	617b      	str	r3, [r7, #20]
        /* Reset the corresponding ODR bit */
        if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPD)
 8001568:	683b      	ldr	r3, [r7, #0]
 800156a:	78db      	ldrb	r3, [r3, #3]
 800156c:	2b28      	cmp	r3, #40	; 0x28
 800156e:	d105      	bne.n	800157c <GPIO_Init+0xb4>
        {
          GPIOx->BRR = (((uint32_t)0x01) << pinpos);
 8001570:	2201      	movs	r2, #1
 8001572:	69bb      	ldr	r3, [r7, #24]
 8001574:	409a      	lsls	r2, r3
 8001576:	687b      	ldr	r3, [r7, #4]
 8001578:	615a      	str	r2, [r3, #20]
 800157a:	e008      	b.n	800158e <GPIO_Init+0xc6>
        }
        else
        {
          /* Set the corresponding ODR bit */
          if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPU)
 800157c:	683b      	ldr	r3, [r7, #0]
 800157e:	78db      	ldrb	r3, [r3, #3]
 8001580:	2b48      	cmp	r3, #72	; 0x48
 8001582:	d104      	bne.n	800158e <GPIO_Init+0xc6>
          {
            GPIOx->BSRR = (((uint32_t)0x01) << pinpos);
 8001584:	2201      	movs	r2, #1
 8001586:	69bb      	ldr	r3, [r7, #24]
 8001588:	409a      	lsls	r2, r3
 800158a:	687b      	ldr	r3, [r7, #4]
 800158c:	611a      	str	r2, [r3, #16]
    for (pinpos = 0x00; pinpos < 0x08; pinpos++)
 800158e:	69bb      	ldr	r3, [r7, #24]
 8001590:	3301      	adds	r3, #1
 8001592:	61bb      	str	r3, [r7, #24]
 8001594:	69bb      	ldr	r3, [r7, #24]
 8001596:	2b07      	cmp	r3, #7
 8001598:	d9c3      	bls.n	8001522 <GPIO_Init+0x5a>
          }
        }
      }
    }
    GPIOx->CRL = tmpreg;
 800159a:	687b      	ldr	r3, [r7, #4]
 800159c:	697a      	ldr	r2, [r7, #20]
 800159e:	601a      	str	r2, [r3, #0]
  }
/*---------------------------- GPIO CRH Configuration ------------------------*/
  /* Configure the eight high port pins */
  if (GPIO_InitStruct->GPIO_Pin > 0x00FF)
 80015a0:	683b      	ldr	r3, [r7, #0]
 80015a2:	881b      	ldrh	r3, [r3, #0]
 80015a4:	2bff      	cmp	r3, #255	; 0xff
 80015a6:	d946      	bls.n	8001636 <GPIO_Init+0x16e>
  {
    tmpreg = GPIOx->CRH;
 80015a8:	687b      	ldr	r3, [r7, #4]
 80015aa:	685b      	ldr	r3, [r3, #4]
 80015ac:	617b      	str	r3, [r7, #20]
    for (pinpos = 0x00; pinpos < 0x08; pinpos++)
 80015ae:	2300      	movs	r3, #0
 80015b0:	61bb      	str	r3, [r7, #24]
 80015b2:	e03a      	b.n	800162a <GPIO_Init+0x162>
    {
      pos = (((uint32_t)0x01) << (pinpos + 0x08));
 80015b4:	69bb      	ldr	r3, [r7, #24]
 80015b6:	3308      	adds	r3, #8
 80015b8:	2201      	movs	r2, #1
 80015ba:	fa02 f303 	lsl.w	r3, r2, r3
 80015be:	60fb      	str	r3, [r7, #12]
      /* Get the port pins position */
      currentpin = ((GPIO_InitStruct->GPIO_Pin) & pos);
 80015c0:	683b      	ldr	r3, [r7, #0]
 80015c2:	881b      	ldrh	r3, [r3, #0]
 80015c4:	461a      	mov	r2, r3
 80015c6:	68fb      	ldr	r3, [r7, #12]
 80015c8:	4013      	ands	r3, r2
 80015ca:	613b      	str	r3, [r7, #16]
      if (currentpin == pos)
 80015cc:	693a      	ldr	r2, [r7, #16]
 80015ce:	68fb      	ldr	r3, [r7, #12]
 80015d0:	429a      	cmp	r2, r3
 80015d2:	d127      	bne.n	8001624 <GPIO_Init+0x15c>
      {
        pos = pinpos << 2;
 80015d4:	69bb      	ldr	r3, [r7, #24]
 80015d6:	009b      	lsls	r3, r3, #2
 80015d8:	60fb      	str	r3, [r7, #12]
        /* Clear the corresponding high control register bits */
        pinmask = ((uint32_t)0x0F) << pos;
 80015da:	220f      	movs	r2, #15
 80015dc:	68fb      	ldr	r3, [r7, #12]
 80015de:	fa02 f303 	lsl.w	r3, r2, r3
 80015e2:	60bb      	str	r3, [r7, #8]
        tmpreg &= ~pinmask;
 80015e4:	68bb      	ldr	r3, [r7, #8]
 80015e6:	43db      	mvns	r3, r3
 80015e8:	697a      	ldr	r2, [r7, #20]
 80015ea:	4013      	ands	r3, r2
 80015ec:	617b      	str	r3, [r7, #20]
        /* Write the mode configuration in the corresponding bits */
        tmpreg |= (currentmode << pos);
 80015ee:	69fa      	ldr	r2, [r7, #28]
 80015f0:	68fb      	ldr	r3, [r7, #12]
 80015f2:	fa02 f303 	lsl.w	r3, r2, r3
 80015f6:	697a      	ldr	r2, [r7, #20]
 80015f8:	4313      	orrs	r3, r2
 80015fa:	617b      	str	r3, [r7, #20]
        /* Reset the corresponding ODR bit */
        if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPD)
 80015fc:	683b      	ldr	r3, [r7, #0]
 80015fe:	78db      	ldrb	r3, [r3, #3]
 8001600:	2b28      	cmp	r3, #40	; 0x28
 8001602:	d105      	bne.n	8001610 <GPIO_Init+0x148>
        {
          GPIOx->BRR = (((uint32_t)0x01) << (pinpos + 0x08));
 8001604:	69bb      	ldr	r3, [r7, #24]
 8001606:	3308      	adds	r3, #8
 8001608:	2201      	movs	r2, #1
 800160a:	409a      	lsls	r2, r3
 800160c:	687b      	ldr	r3, [r7, #4]
 800160e:	615a      	str	r2, [r3, #20]
        }
        /* Set the corresponding ODR bit */
        if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPU)
 8001610:	683b      	ldr	r3, [r7, #0]
 8001612:	78db      	ldrb	r3, [r3, #3]
 8001614:	2b48      	cmp	r3, #72	; 0x48
 8001616:	d105      	bne.n	8001624 <GPIO_Init+0x15c>
        {
          GPIOx->BSRR = (((uint32_t)0x01) << (pinpos + 0x08));
 8001618:	69bb      	ldr	r3, [r7, #24]
 800161a:	3308      	adds	r3, #8
 800161c:	2201      	movs	r2, #1
 800161e:	409a      	lsls	r2, r3
 8001620:	687b      	ldr	r3, [r7, #4]
 8001622:	611a      	str	r2, [r3, #16]
    for (pinpos = 0x00; pinpos < 0x08; pinpos++)
 8001624:	69bb      	ldr	r3, [r7, #24]
 8001626:	3301      	adds	r3, #1
 8001628:	61bb      	str	r3, [r7, #24]
 800162a:	69bb      	ldr	r3, [r7, #24]
 800162c:	2b07      	cmp	r3, #7
 800162e:	d9c1      	bls.n	80015b4 <GPIO_Init+0xec>
        }
      }
    }
    GPIOx->CRH = tmpreg;
 8001630:	687b      	ldr	r3, [r7, #4]
 8001632:	697a      	ldr	r2, [r7, #20]
 8001634:	605a      	str	r2, [r3, #4]
  }
}
 8001636:	bf00      	nop
 8001638:	3724      	adds	r7, #36	; 0x24
 800163a:	46bd      	mov	sp, r7
 800163c:	bc80      	pop	{r7}
 800163e:	4770      	bx	lr

08001640 <GPIO_WriteBit>:
  *     @arg Bit_RESET: to clear the port pin
  *     @arg Bit_SET: to set the port pin
  * @retval None
  */
void GPIO_WriteBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, BitAction BitVal)
{
 8001640:	b480      	push	{r7}
 8001642:	b083      	sub	sp, #12
 8001644:	af00      	add	r7, sp, #0
 8001646:	6078      	str	r0, [r7, #4]
 8001648:	460b      	mov	r3, r1
 800164a:	807b      	strh	r3, [r7, #2]
 800164c:	4613      	mov	r3, r2
 800164e:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
  assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_BIT_ACTION(BitVal)); 
  
  if (BitVal != Bit_RESET)
 8001650:	787b      	ldrb	r3, [r7, #1]
 8001652:	2b00      	cmp	r3, #0
 8001654:	d003      	beq.n	800165e <GPIO_WriteBit+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 8001656:	887a      	ldrh	r2, [r7, #2]
 8001658:	687b      	ldr	r3, [r7, #4]
 800165a:	611a      	str	r2, [r3, #16]
  }
  else
  {
    GPIOx->BRR = GPIO_Pin;
  }
}
 800165c:	e002      	b.n	8001664 <GPIO_WriteBit+0x24>
    GPIOx->BRR = GPIO_Pin;
 800165e:	887a      	ldrh	r2, [r7, #2]
 8001660:	687b      	ldr	r3, [r7, #4]
 8001662:	615a      	str	r2, [r3, #20]
}
 8001664:	bf00      	nop
 8001666:	370c      	adds	r7, #12
 8001668:	46bd      	mov	sp, r7
 800166a:	bc80      	pop	{r7}
 800166c:	4770      	bx	lr
	...

08001670 <RCC_GetClocksFreq>:
  * @note   The result of this function could be not correct when using 
  *         fractional value for HSE crystal.  
  * @retval None
  */
void RCC_GetClocksFreq(RCC_ClocksTypeDef* RCC_Clocks)
{
 8001670:	b480      	push	{r7}
 8001672:	b087      	sub	sp, #28
 8001674:	af00      	add	r7, sp, #0
 8001676:	6078      	str	r0, [r7, #4]
  uint32_t tmp = 0, pllmull = 0, pllsource = 0, presc = 0;
 8001678:	2300      	movs	r3, #0
 800167a:	617b      	str	r3, [r7, #20]
 800167c:	2300      	movs	r3, #0
 800167e:	613b      	str	r3, [r7, #16]
 8001680:	2300      	movs	r3, #0
 8001682:	60fb      	str	r3, [r7, #12]
 8001684:	2300      	movs	r3, #0
 8001686:	60bb      	str	r3, [r7, #8]
#if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
  uint32_t prediv1factor = 0;
#endif
    
  /* Get SYSCLK source -------------------------------------------------------*/
  tmp = RCC->CFGR & CFGR_SWS_Mask;
 8001688:	4b4c      	ldr	r3, [pc, #304]	; (80017bc <RCC_GetClocksFreq+0x14c>)
 800168a:	685b      	ldr	r3, [r3, #4]
 800168c:	f003 030c 	and.w	r3, r3, #12
 8001690:	617b      	str	r3, [r7, #20]
  
  switch (tmp)
 8001692:	697b      	ldr	r3, [r7, #20]
 8001694:	2b04      	cmp	r3, #4
 8001696:	d007      	beq.n	80016a8 <RCC_GetClocksFreq+0x38>
 8001698:	2b08      	cmp	r3, #8
 800169a:	d009      	beq.n	80016b0 <RCC_GetClocksFreq+0x40>
 800169c:	2b00      	cmp	r3, #0
 800169e:	d133      	bne.n	8001708 <RCC_GetClocksFreq+0x98>
  {
    case 0x00:  /* HSI used as system clock */
      RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
 80016a0:	687b      	ldr	r3, [r7, #4]
 80016a2:	4a47      	ldr	r2, [pc, #284]	; (80017c0 <RCC_GetClocksFreq+0x150>)
 80016a4:	601a      	str	r2, [r3, #0]
      break;
 80016a6:	e033      	b.n	8001710 <RCC_GetClocksFreq+0xa0>
    case 0x04:  /* HSE used as system clock */
      RCC_Clocks->SYSCLK_Frequency = HSE_VALUE;
 80016a8:	687b      	ldr	r3, [r7, #4]
 80016aa:	4a45      	ldr	r2, [pc, #276]	; (80017c0 <RCC_GetClocksFreq+0x150>)
 80016ac:	601a      	str	r2, [r3, #0]
      break;
 80016ae:	e02f      	b.n	8001710 <RCC_GetClocksFreq+0xa0>
    case 0x08:  /* PLL used as system clock */

      /* Get PLL clock source and multiplication factor ----------------------*/
      pllmull = RCC->CFGR & CFGR_PLLMull_Mask;
 80016b0:	4b42      	ldr	r3, [pc, #264]	; (80017bc <RCC_GetClocksFreq+0x14c>)
 80016b2:	685b      	ldr	r3, [r3, #4]
 80016b4:	f403 1370 	and.w	r3, r3, #3932160	; 0x3c0000
 80016b8:	613b      	str	r3, [r7, #16]
      pllsource = RCC->CFGR & CFGR_PLLSRC_Mask;
 80016ba:	4b40      	ldr	r3, [pc, #256]	; (80017bc <RCC_GetClocksFreq+0x14c>)
 80016bc:	685b      	ldr	r3, [r3, #4]
 80016be:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80016c2:	60fb      	str	r3, [r7, #12]
      
#ifndef STM32F10X_CL      
      pllmull = ( pllmull >> 18) + 2;
 80016c4:	693b      	ldr	r3, [r7, #16]
 80016c6:	0c9b      	lsrs	r3, r3, #18
 80016c8:	3302      	adds	r3, #2
 80016ca:	613b      	str	r3, [r7, #16]
      
      if (pllsource == 0x00)
 80016cc:	68fb      	ldr	r3, [r7, #12]
 80016ce:	2b00      	cmp	r3, #0
 80016d0:	d106      	bne.n	80016e0 <RCC_GetClocksFreq+0x70>
      {/* HSI oscillator clock divided by 2 selected as PLL clock entry */
        RCC_Clocks->SYSCLK_Frequency = (HSI_VALUE >> 1) * pllmull;
 80016d2:	693b      	ldr	r3, [r7, #16]
 80016d4:	4a3b      	ldr	r2, [pc, #236]	; (80017c4 <RCC_GetClocksFreq+0x154>)
 80016d6:	fb02 f203 	mul.w	r2, r2, r3
 80016da:	687b      	ldr	r3, [r7, #4]
 80016dc:	601a      	str	r2, [r3, #0]
          pll2mull = ((RCC->CFGR2 & CFGR2_PLL2MUL) >> 8 ) + 2; 
          RCC_Clocks->SYSCLK_Frequency = (((HSE_VALUE / prediv2factor) * pll2mull) / prediv1factor) * pllmull;                         
        }
      }
#endif /* STM32F10X_CL */ 
      break;
 80016de:	e017      	b.n	8001710 <RCC_GetClocksFreq+0xa0>
        if ((RCC->CFGR & CFGR_PLLXTPRE_Mask) != (uint32_t)RESET)
 80016e0:	4b36      	ldr	r3, [pc, #216]	; (80017bc <RCC_GetClocksFreq+0x14c>)
 80016e2:	685b      	ldr	r3, [r3, #4]
 80016e4:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80016e8:	2b00      	cmp	r3, #0
 80016ea:	d006      	beq.n	80016fa <RCC_GetClocksFreq+0x8a>
          RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE >> 1) * pllmull;
 80016ec:	693b      	ldr	r3, [r7, #16]
 80016ee:	4a35      	ldr	r2, [pc, #212]	; (80017c4 <RCC_GetClocksFreq+0x154>)
 80016f0:	fb02 f203 	mul.w	r2, r2, r3
 80016f4:	687b      	ldr	r3, [r7, #4]
 80016f6:	601a      	str	r2, [r3, #0]
      break;
 80016f8:	e00a      	b.n	8001710 <RCC_GetClocksFreq+0xa0>
          RCC_Clocks->SYSCLK_Frequency = HSE_VALUE * pllmull;
 80016fa:	693b      	ldr	r3, [r7, #16]
 80016fc:	4a30      	ldr	r2, [pc, #192]	; (80017c0 <RCC_GetClocksFreq+0x150>)
 80016fe:	fb02 f203 	mul.w	r2, r2, r3
 8001702:	687b      	ldr	r3, [r7, #4]
 8001704:	601a      	str	r2, [r3, #0]
      break;
 8001706:	e003      	b.n	8001710 <RCC_GetClocksFreq+0xa0>

    default:
      RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
 8001708:	687b      	ldr	r3, [r7, #4]
 800170a:	4a2d      	ldr	r2, [pc, #180]	; (80017c0 <RCC_GetClocksFreq+0x150>)
 800170c:	601a      	str	r2, [r3, #0]
      break;
 800170e:	bf00      	nop
  }

  /* Compute HCLK, PCLK1, PCLK2 and ADCCLK clocks frequencies ----------------*/
  /* Get HCLK prescaler */
  tmp = RCC->CFGR & CFGR_HPRE_Set_Mask;
 8001710:	4b2a      	ldr	r3, [pc, #168]	; (80017bc <RCC_GetClocksFreq+0x14c>)
 8001712:	685b      	ldr	r3, [r3, #4]
 8001714:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8001718:	617b      	str	r3, [r7, #20]
  tmp = tmp >> 4;
 800171a:	697b      	ldr	r3, [r7, #20]
 800171c:	091b      	lsrs	r3, r3, #4
 800171e:	617b      	str	r3, [r7, #20]
  presc = APBAHBPrescTable[tmp];
 8001720:	4a29      	ldr	r2, [pc, #164]	; (80017c8 <RCC_GetClocksFreq+0x158>)
 8001722:	697b      	ldr	r3, [r7, #20]
 8001724:	4413      	add	r3, r2
 8001726:	781b      	ldrb	r3, [r3, #0]
 8001728:	b2db      	uxtb	r3, r3
 800172a:	60bb      	str	r3, [r7, #8]
  /* HCLK clock frequency */
  RCC_Clocks->HCLK_Frequency = RCC_Clocks->SYSCLK_Frequency >> presc;
 800172c:	687b      	ldr	r3, [r7, #4]
 800172e:	681a      	ldr	r2, [r3, #0]
 8001730:	68bb      	ldr	r3, [r7, #8]
 8001732:	40da      	lsrs	r2, r3
 8001734:	687b      	ldr	r3, [r7, #4]
 8001736:	605a      	str	r2, [r3, #4]
  /* Get PCLK1 prescaler */
  tmp = RCC->CFGR & CFGR_PPRE1_Set_Mask;
 8001738:	4b20      	ldr	r3, [pc, #128]	; (80017bc <RCC_GetClocksFreq+0x14c>)
 800173a:	685b      	ldr	r3, [r3, #4]
 800173c:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8001740:	617b      	str	r3, [r7, #20]
  tmp = tmp >> 8;
 8001742:	697b      	ldr	r3, [r7, #20]
 8001744:	0a1b      	lsrs	r3, r3, #8
 8001746:	617b      	str	r3, [r7, #20]
  presc = APBAHBPrescTable[tmp];
 8001748:	4a1f      	ldr	r2, [pc, #124]	; (80017c8 <RCC_GetClocksFreq+0x158>)
 800174a:	697b      	ldr	r3, [r7, #20]
 800174c:	4413      	add	r3, r2
 800174e:	781b      	ldrb	r3, [r3, #0]
 8001750:	b2db      	uxtb	r3, r3
 8001752:	60bb      	str	r3, [r7, #8]
  /* PCLK1 clock frequency */
  RCC_Clocks->PCLK1_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 8001754:	687b      	ldr	r3, [r7, #4]
 8001756:	685a      	ldr	r2, [r3, #4]
 8001758:	68bb      	ldr	r3, [r7, #8]
 800175a:	40da      	lsrs	r2, r3
 800175c:	687b      	ldr	r3, [r7, #4]
 800175e:	609a      	str	r2, [r3, #8]
  /* Get PCLK2 prescaler */
  tmp = RCC->CFGR & CFGR_PPRE2_Set_Mask;
 8001760:	4b16      	ldr	r3, [pc, #88]	; (80017bc <RCC_GetClocksFreq+0x14c>)
 8001762:	685b      	ldr	r3, [r3, #4]
 8001764:	f403 5360 	and.w	r3, r3, #14336	; 0x3800
 8001768:	617b      	str	r3, [r7, #20]
  tmp = tmp >> 11;
 800176a:	697b      	ldr	r3, [r7, #20]
 800176c:	0adb      	lsrs	r3, r3, #11
 800176e:	617b      	str	r3, [r7, #20]
  presc = APBAHBPrescTable[tmp];
 8001770:	4a15      	ldr	r2, [pc, #84]	; (80017c8 <RCC_GetClocksFreq+0x158>)
 8001772:	697b      	ldr	r3, [r7, #20]
 8001774:	4413      	add	r3, r2
 8001776:	781b      	ldrb	r3, [r3, #0]
 8001778:	b2db      	uxtb	r3, r3
 800177a:	60bb      	str	r3, [r7, #8]
  /* PCLK2 clock frequency */
  RCC_Clocks->PCLK2_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 800177c:	687b      	ldr	r3, [r7, #4]
 800177e:	685a      	ldr	r2, [r3, #4]
 8001780:	68bb      	ldr	r3, [r7, #8]
 8001782:	40da      	lsrs	r2, r3
 8001784:	687b      	ldr	r3, [r7, #4]
 8001786:	60da      	str	r2, [r3, #12]
  /* Get ADCCLK prescaler */
  tmp = RCC->CFGR & CFGR_ADCPRE_Set_Mask;
 8001788:	4b0c      	ldr	r3, [pc, #48]	; (80017bc <RCC_GetClocksFreq+0x14c>)
 800178a:	685b      	ldr	r3, [r3, #4]
 800178c:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001790:	617b      	str	r3, [r7, #20]
  tmp = tmp >> 14;
 8001792:	697b      	ldr	r3, [r7, #20]
 8001794:	0b9b      	lsrs	r3, r3, #14
 8001796:	617b      	str	r3, [r7, #20]
  presc = ADCPrescTable[tmp];
 8001798:	4a0c      	ldr	r2, [pc, #48]	; (80017cc <RCC_GetClocksFreq+0x15c>)
 800179a:	697b      	ldr	r3, [r7, #20]
 800179c:	4413      	add	r3, r2
 800179e:	781b      	ldrb	r3, [r3, #0]
 80017a0:	b2db      	uxtb	r3, r3
 80017a2:	60bb      	str	r3, [r7, #8]
  /* ADCCLK clock frequency */
  RCC_Clocks->ADCCLK_Frequency = RCC_Clocks->PCLK2_Frequency / presc;
 80017a4:	687b      	ldr	r3, [r7, #4]
 80017a6:	68da      	ldr	r2, [r3, #12]
 80017a8:	68bb      	ldr	r3, [r7, #8]
 80017aa:	fbb2 f2f3 	udiv	r2, r2, r3
 80017ae:	687b      	ldr	r3, [r7, #4]
 80017b0:	611a      	str	r2, [r3, #16]
}
 80017b2:	bf00      	nop
 80017b4:	371c      	adds	r7, #28
 80017b6:	46bd      	mov	sp, r7
 80017b8:	bc80      	pop	{r7}
 80017ba:	4770      	bx	lr
 80017bc:	40021000 	.word	0x40021000
 80017c0:	007a1200 	.word	0x007a1200
 80017c4:	003d0900 	.word	0x003d0900
 80017c8:	20000000 	.word	0x20000000
 80017cc:	20000010 	.word	0x20000010

080017d0 <RCC_APB2PeriphClockCmd>:
  * @param  NewState: new state of the specified peripheral clock.
  *   This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void RCC_APB2PeriphClockCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
{
 80017d0:	b480      	push	{r7}
 80017d2:	b083      	sub	sp, #12
 80017d4:	af00      	add	r7, sp, #0
 80017d6:	6078      	str	r0, [r7, #4]
 80017d8:	460b      	mov	r3, r1
 80017da:	70fb      	strb	r3, [r7, #3]
  /* Check the parameters */
  assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  if (NewState != DISABLE)
 80017dc:	78fb      	ldrb	r3, [r7, #3]
 80017de:	2b00      	cmp	r3, #0
 80017e0:	d006      	beq.n	80017f0 <RCC_APB2PeriphClockCmd+0x20>
  {
    RCC->APB2ENR |= RCC_APB2Periph;
 80017e2:	4909      	ldr	r1, [pc, #36]	; (8001808 <RCC_APB2PeriphClockCmd+0x38>)
 80017e4:	4b08      	ldr	r3, [pc, #32]	; (8001808 <RCC_APB2PeriphClockCmd+0x38>)
 80017e6:	699a      	ldr	r2, [r3, #24]
 80017e8:	687b      	ldr	r3, [r7, #4]
 80017ea:	4313      	orrs	r3, r2
 80017ec:	618b      	str	r3, [r1, #24]
  }
  else
  {
    RCC->APB2ENR &= ~RCC_APB2Periph;
  }
}
 80017ee:	e006      	b.n	80017fe <RCC_APB2PeriphClockCmd+0x2e>
    RCC->APB2ENR &= ~RCC_APB2Periph;
 80017f0:	4905      	ldr	r1, [pc, #20]	; (8001808 <RCC_APB2PeriphClockCmd+0x38>)
 80017f2:	4b05      	ldr	r3, [pc, #20]	; (8001808 <RCC_APB2PeriphClockCmd+0x38>)
 80017f4:	699a      	ldr	r2, [r3, #24]
 80017f6:	687b      	ldr	r3, [r7, #4]
 80017f8:	43db      	mvns	r3, r3
 80017fa:	4013      	ands	r3, r2
 80017fc:	618b      	str	r3, [r1, #24]
}
 80017fe:	bf00      	nop
 8001800:	370c      	adds	r7, #12
 8001802:	46bd      	mov	sp, r7
 8001804:	bc80      	pop	{r7}
 8001806:	4770      	bx	lr
 8001808:	40021000 	.word	0x40021000

0800180c <RCC_APB1PeriphClockCmd>:
  * @param  NewState: new state of the specified peripheral clock.
  *   This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void RCC_APB1PeriphClockCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
{
 800180c:	b480      	push	{r7}
 800180e:	b083      	sub	sp, #12
 8001810:	af00      	add	r7, sp, #0
 8001812:	6078      	str	r0, [r7, #4]
 8001814:	460b      	mov	r3, r1
 8001816:	70fb      	strb	r3, [r7, #3]
  /* Check the parameters */
  assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  if (NewState != DISABLE)
 8001818:	78fb      	ldrb	r3, [r7, #3]
 800181a:	2b00      	cmp	r3, #0
 800181c:	d006      	beq.n	800182c <RCC_APB1PeriphClockCmd+0x20>
  {
    RCC->APB1ENR |= RCC_APB1Periph;
 800181e:	4909      	ldr	r1, [pc, #36]	; (8001844 <RCC_APB1PeriphClockCmd+0x38>)
 8001820:	4b08      	ldr	r3, [pc, #32]	; (8001844 <RCC_APB1PeriphClockCmd+0x38>)
 8001822:	69da      	ldr	r2, [r3, #28]
 8001824:	687b      	ldr	r3, [r7, #4]
 8001826:	4313      	orrs	r3, r2
 8001828:	61cb      	str	r3, [r1, #28]
  }
  else
  {
    RCC->APB1ENR &= ~RCC_APB1Periph;
  }
}
 800182a:	e006      	b.n	800183a <RCC_APB1PeriphClockCmd+0x2e>
    RCC->APB1ENR &= ~RCC_APB1Periph;
 800182c:	4905      	ldr	r1, [pc, #20]	; (8001844 <RCC_APB1PeriphClockCmd+0x38>)
 800182e:	4b05      	ldr	r3, [pc, #20]	; (8001844 <RCC_APB1PeriphClockCmd+0x38>)
 8001830:	69da      	ldr	r2, [r3, #28]
 8001832:	687b      	ldr	r3, [r7, #4]
 8001834:	43db      	mvns	r3, r3
 8001836:	4013      	ands	r3, r2
 8001838:	61cb      	str	r3, [r1, #28]
}
 800183a:	bf00      	nop
 800183c:	370c      	adds	r7, #12
 800183e:	46bd      	mov	sp, r7
 8001840:	bc80      	pop	{r7}
 8001842:	4770      	bx	lr
 8001844:	40021000 	.word	0x40021000

08001848 <SPI_Init>:
  * @param  SPI_InitStruct: pointer to a SPI_InitTypeDef structure that
  *         contains the configuration information for the specified SPI peripheral.
  * @retval None
  */
void SPI_Init(SPI_TypeDef* SPIx, SPI_InitTypeDef* SPI_InitStruct)
{
 8001848:	b480      	push	{r7}
 800184a:	b085      	sub	sp, #20
 800184c:	af00      	add	r7, sp, #0
 800184e:	6078      	str	r0, [r7, #4]
 8001850:	6039      	str	r1, [r7, #0]
  uint16_t tmpreg = 0;
 8001852:	2300      	movs	r3, #0
 8001854:	81fb      	strh	r3, [r7, #14]
  assert_param(IS_SPI_FIRST_BIT(SPI_InitStruct->SPI_FirstBit));
  assert_param(IS_SPI_CRC_POLYNOMIAL(SPI_InitStruct->SPI_CRCPolynomial));

/*---------------------------- SPIx CR1 Configuration ------------------------*/
  /* Get the SPIx CR1 value */
  tmpreg = SPIx->CR1;
 8001856:	687b      	ldr	r3, [r7, #4]
 8001858:	881b      	ldrh	r3, [r3, #0]
 800185a:	81fb      	strh	r3, [r7, #14]
  /* Clear BIDIMode, BIDIOE, RxONLY, SSM, SSI, LSBFirst, BR, MSTR, CPOL and CPHA bits */
  tmpreg &= CR1_CLEAR_Mask;
 800185c:	89fb      	ldrh	r3, [r7, #14]
 800185e:	f403 5341 	and.w	r3, r3, #12352	; 0x3040
 8001862:	81fb      	strh	r3, [r7, #14]
  /* Set SSM, SSI and MSTR bits according to SPI_Mode and SPI_NSS values */
  /* Set LSBFirst bit according to SPI_FirstBit value */
  /* Set BR bits according to SPI_BaudRatePrescaler value */
  /* Set CPOL bit according to SPI_CPOL value */
  /* Set CPHA bit according to SPI_CPHA value */
  tmpreg |= (uint16_t)((uint32_t)SPI_InitStruct->SPI_Direction | SPI_InitStruct->SPI_Mode |
 8001864:	683b      	ldr	r3, [r7, #0]
 8001866:	881a      	ldrh	r2, [r3, #0]
 8001868:	683b      	ldr	r3, [r7, #0]
 800186a:	885b      	ldrh	r3, [r3, #2]
 800186c:	4313      	orrs	r3, r2
 800186e:	b29a      	uxth	r2, r3
                  SPI_InitStruct->SPI_DataSize | SPI_InitStruct->SPI_CPOL |  
 8001870:	683b      	ldr	r3, [r7, #0]
 8001872:	889b      	ldrh	r3, [r3, #4]
  tmpreg |= (uint16_t)((uint32_t)SPI_InitStruct->SPI_Direction | SPI_InitStruct->SPI_Mode |
 8001874:	4313      	orrs	r3, r2
 8001876:	b29a      	uxth	r2, r3
                  SPI_InitStruct->SPI_DataSize | SPI_InitStruct->SPI_CPOL |  
 8001878:	683b      	ldr	r3, [r7, #0]
 800187a:	88db      	ldrh	r3, [r3, #6]
  tmpreg |= (uint16_t)((uint32_t)SPI_InitStruct->SPI_Direction | SPI_InitStruct->SPI_Mode |
 800187c:	4313      	orrs	r3, r2
 800187e:	b29a      	uxth	r2, r3
                  SPI_InitStruct->SPI_CPHA | SPI_InitStruct->SPI_NSS |  
 8001880:	683b      	ldr	r3, [r7, #0]
 8001882:	891b      	ldrh	r3, [r3, #8]
  tmpreg |= (uint16_t)((uint32_t)SPI_InitStruct->SPI_Direction | SPI_InitStruct->SPI_Mode |
 8001884:	4313      	orrs	r3, r2
 8001886:	b29a      	uxth	r2, r3
                  SPI_InitStruct->SPI_CPHA | SPI_InitStruct->SPI_NSS |  
 8001888:	683b      	ldr	r3, [r7, #0]
 800188a:	895b      	ldrh	r3, [r3, #10]
  tmpreg |= (uint16_t)((uint32_t)SPI_InitStruct->SPI_Direction | SPI_InitStruct->SPI_Mode |
 800188c:	4313      	orrs	r3, r2
 800188e:	b29a      	uxth	r2, r3
                  SPI_InitStruct->SPI_BaudRatePrescaler | SPI_InitStruct->SPI_FirstBit);
 8001890:	683b      	ldr	r3, [r7, #0]
 8001892:	899b      	ldrh	r3, [r3, #12]
  tmpreg |= (uint16_t)((uint32_t)SPI_InitStruct->SPI_Direction | SPI_InitStruct->SPI_Mode |
 8001894:	4313      	orrs	r3, r2
 8001896:	b29a      	uxth	r2, r3
                  SPI_InitStruct->SPI_BaudRatePrescaler | SPI_InitStruct->SPI_FirstBit);
 8001898:	683b      	ldr	r3, [r7, #0]
 800189a:	89db      	ldrh	r3, [r3, #14]
  tmpreg |= (uint16_t)((uint32_t)SPI_InitStruct->SPI_Direction | SPI_InitStruct->SPI_Mode |
 800189c:	4313      	orrs	r3, r2
 800189e:	b29a      	uxth	r2, r3
 80018a0:	89fb      	ldrh	r3, [r7, #14]
 80018a2:	4313      	orrs	r3, r2
 80018a4:	81fb      	strh	r3, [r7, #14]
  /* Write to SPIx CR1 */
  SPIx->CR1 = tmpreg;
 80018a6:	687b      	ldr	r3, [r7, #4]
 80018a8:	89fa      	ldrh	r2, [r7, #14]
 80018aa:	801a      	strh	r2, [r3, #0]
  
  /* Activate the SPI mode (Reset I2SMOD bit in I2SCFGR register) */
  SPIx->I2SCFGR &= SPI_Mode_Select;		
 80018ac:	687b      	ldr	r3, [r7, #4]
 80018ae:	8b9b      	ldrh	r3, [r3, #28]
 80018b0:	b29b      	uxth	r3, r3
 80018b2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80018b6:	b29a      	uxth	r2, r3
 80018b8:	687b      	ldr	r3, [r7, #4]
 80018ba:	839a      	strh	r2, [r3, #28]

/*---------------------------- SPIx CRCPOLY Configuration --------------------*/
  /* Write to SPIx CRCPOLY */
  SPIx->CRCPR = SPI_InitStruct->SPI_CRCPolynomial;
 80018bc:	683b      	ldr	r3, [r7, #0]
 80018be:	8a1a      	ldrh	r2, [r3, #16]
 80018c0:	687b      	ldr	r3, [r7, #4]
 80018c2:	821a      	strh	r2, [r3, #16]
}
 80018c4:	bf00      	nop
 80018c6:	3714      	adds	r7, #20
 80018c8:	46bd      	mov	sp, r7
 80018ca:	bc80      	pop	{r7}
 80018cc:	4770      	bx	lr

080018ce <SPI_Cmd>:
  * @param  NewState: new state of the SPIx peripheral. 
  *   This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void SPI_Cmd(SPI_TypeDef* SPIx, FunctionalState NewState)
{
 80018ce:	b480      	push	{r7}
 80018d0:	b083      	sub	sp, #12
 80018d2:	af00      	add	r7, sp, #0
 80018d4:	6078      	str	r0, [r7, #4]
 80018d6:	460b      	mov	r3, r1
 80018d8:	70fb      	strb	r3, [r7, #3]
  /* Check the parameters */
  assert_param(IS_SPI_ALL_PERIPH(SPIx));
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  if (NewState != DISABLE)
 80018da:	78fb      	ldrb	r3, [r7, #3]
 80018dc:	2b00      	cmp	r3, #0
 80018de:	d008      	beq.n	80018f2 <SPI_Cmd+0x24>
  {
    /* Enable the selected SPI peripheral */
    SPIx->CR1 |= CR1_SPE_Set;
 80018e0:	687b      	ldr	r3, [r7, #4]
 80018e2:	881b      	ldrh	r3, [r3, #0]
 80018e4:	b29b      	uxth	r3, r3
 80018e6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80018ea:	b29a      	uxth	r2, r3
 80018ec:	687b      	ldr	r3, [r7, #4]
 80018ee:	801a      	strh	r2, [r3, #0]
  else
  {
    /* Disable the selected SPI peripheral */
    SPIx->CR1 &= CR1_SPE_Reset;
  }
}
 80018f0:	e007      	b.n	8001902 <SPI_Cmd+0x34>
    SPIx->CR1 &= CR1_SPE_Reset;
 80018f2:	687b      	ldr	r3, [r7, #4]
 80018f4:	881b      	ldrh	r3, [r3, #0]
 80018f6:	b29b      	uxth	r3, r3
 80018f8:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80018fc:	b29a      	uxth	r2, r3
 80018fe:	687b      	ldr	r3, [r7, #4]
 8001900:	801a      	strh	r2, [r3, #0]
}
 8001902:	bf00      	nop
 8001904:	370c      	adds	r7, #12
 8001906:	46bd      	mov	sp, r7
 8001908:	bc80      	pop	{r7}
 800190a:	4770      	bx	lr

0800190c <SPI_I2S_SendData>:
  *   - 2 or 3 in I2S mode
  * @param  Data : Data to be transmitted.
  * @retval None
  */
void SPI_I2S_SendData(SPI_TypeDef* SPIx, uint16_t Data)
{
 800190c:	b480      	push	{r7}
 800190e:	b083      	sub	sp, #12
 8001910:	af00      	add	r7, sp, #0
 8001912:	6078      	str	r0, [r7, #4]
 8001914:	460b      	mov	r3, r1
 8001916:	807b      	strh	r3, [r7, #2]
  /* Check the parameters */
  assert_param(IS_SPI_ALL_PERIPH(SPIx));
  
  /* Write in the DR register the data to be sent */
  SPIx->DR = Data;
 8001918:	687b      	ldr	r3, [r7, #4]
 800191a:	887a      	ldrh	r2, [r7, #2]
 800191c:	819a      	strh	r2, [r3, #12]
}
 800191e:	bf00      	nop
 8001920:	370c      	adds	r7, #12
 8001922:	46bd      	mov	sp, r7
 8001924:	bc80      	pop	{r7}
 8001926:	4770      	bx	lr

08001928 <SPI_I2S_ReceiveData>:
  *   - 1, 2 or 3 in SPI mode 
  *   - 2 or 3 in I2S mode
  * @retval The value of the received data.
  */
uint16_t SPI_I2S_ReceiveData(SPI_TypeDef* SPIx)
{
 8001928:	b480      	push	{r7}
 800192a:	b083      	sub	sp, #12
 800192c:	af00      	add	r7, sp, #0
 800192e:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_SPI_ALL_PERIPH(SPIx));
  
  /* Return the data in the DR register */
  return SPIx->DR;
 8001930:	687b      	ldr	r3, [r7, #4]
 8001932:	899b      	ldrh	r3, [r3, #12]
 8001934:	b29b      	uxth	r3, r3
}
 8001936:	4618      	mov	r0, r3
 8001938:	370c      	adds	r7, #12
 800193a:	46bd      	mov	sp, r7
 800193c:	bc80      	pop	{r7}
 800193e:	4770      	bx	lr

08001940 <SPI_I2S_GetFlagStatus>:
  *     @arg I2S_FLAG_UDR: Underrun Error flag.
  *     @arg I2S_FLAG_CHSIDE: Channel Side flag.
  * @retval The new state of SPI_I2S_FLAG (SET or RESET).
  */
FlagStatus SPI_I2S_GetFlagStatus(SPI_TypeDef* SPIx, uint16_t SPI_I2S_FLAG)
{
 8001940:	b480      	push	{r7}
 8001942:	b085      	sub	sp, #20
 8001944:	af00      	add	r7, sp, #0
 8001946:	6078      	str	r0, [r7, #4]
 8001948:	460b      	mov	r3, r1
 800194a:	807b      	strh	r3, [r7, #2]
  FlagStatus bitstatus = RESET;
 800194c:	2300      	movs	r3, #0
 800194e:	73fb      	strb	r3, [r7, #15]
  /* Check the parameters */
  assert_param(IS_SPI_ALL_PERIPH(SPIx));
  assert_param(IS_SPI_I2S_GET_FLAG(SPI_I2S_FLAG));
  /* Check the status of the specified SPI/I2S flag */
  if ((SPIx->SR & SPI_I2S_FLAG) != (uint16_t)RESET)
 8001950:	687b      	ldr	r3, [r7, #4]
 8001952:	891b      	ldrh	r3, [r3, #8]
 8001954:	b29a      	uxth	r2, r3
 8001956:	887b      	ldrh	r3, [r7, #2]
 8001958:	4013      	ands	r3, r2
 800195a:	b29b      	uxth	r3, r3
 800195c:	2b00      	cmp	r3, #0
 800195e:	d002      	beq.n	8001966 <SPI_I2S_GetFlagStatus+0x26>
  {
    /* SPI_I2S_FLAG is set */
    bitstatus = SET;
 8001960:	2301      	movs	r3, #1
 8001962:	73fb      	strb	r3, [r7, #15]
 8001964:	e001      	b.n	800196a <SPI_I2S_GetFlagStatus+0x2a>
  }
  else
  {
    /* SPI_I2S_FLAG is reset */
    bitstatus = RESET;
 8001966:	2300      	movs	r3, #0
 8001968:	73fb      	strb	r3, [r7, #15]
  }
  /* Return the SPI_I2S_FLAG status */
  return  bitstatus;
 800196a:	7bfb      	ldrb	r3, [r7, #15]
}
 800196c:	4618      	mov	r0, r3
 800196e:	3714      	adds	r7, #20
 8001970:	46bd      	mov	sp, r7
 8001972:	bc80      	pop	{r7}
 8001974:	4770      	bx	lr
	...

08001978 <TIM_TimeBaseInit>:
  *         structure that contains the configuration information for the 
  *         specified TIM peripheral.
  * @retval None
  */
void TIM_TimeBaseInit(TIM_TypeDef* TIMx, TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
{
 8001978:	b480      	push	{r7}
 800197a:	b085      	sub	sp, #20
 800197c:	af00      	add	r7, sp, #0
 800197e:	6078      	str	r0, [r7, #4]
 8001980:	6039      	str	r1, [r7, #0]
  uint16_t tmpcr1 = 0;
 8001982:	2300      	movs	r3, #0
 8001984:	81fb      	strh	r3, [r7, #14]
  /* Check the parameters */
  assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
  assert_param(IS_TIM_COUNTER_MODE(TIM_TimeBaseInitStruct->TIM_CounterMode));
  assert_param(IS_TIM_CKD_DIV(TIM_TimeBaseInitStruct->TIM_ClockDivision));

  tmpcr1 = TIMx->CR1;  
 8001986:	687b      	ldr	r3, [r7, #4]
 8001988:	881b      	ldrh	r3, [r3, #0]
 800198a:	81fb      	strh	r3, [r7, #14]

  if((TIMx == TIM1) || (TIMx == TIM8)|| (TIMx == TIM2) || (TIMx == TIM3)||
 800198c:	687b      	ldr	r3, [r7, #4]
 800198e:	4a2e      	ldr	r2, [pc, #184]	; (8001a48 <TIM_TimeBaseInit+0xd0>)
 8001990:	4293      	cmp	r3, r2
 8001992:	d013      	beq.n	80019bc <TIM_TimeBaseInit+0x44>
 8001994:	687b      	ldr	r3, [r7, #4]
 8001996:	4a2d      	ldr	r2, [pc, #180]	; (8001a4c <TIM_TimeBaseInit+0xd4>)
 8001998:	4293      	cmp	r3, r2
 800199a:	d00f      	beq.n	80019bc <TIM_TimeBaseInit+0x44>
 800199c:	687b      	ldr	r3, [r7, #4]
 800199e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80019a2:	d00b      	beq.n	80019bc <TIM_TimeBaseInit+0x44>
 80019a4:	687b      	ldr	r3, [r7, #4]
 80019a6:	4a2a      	ldr	r2, [pc, #168]	; (8001a50 <TIM_TimeBaseInit+0xd8>)
 80019a8:	4293      	cmp	r3, r2
 80019aa:	d007      	beq.n	80019bc <TIM_TimeBaseInit+0x44>
 80019ac:	687b      	ldr	r3, [r7, #4]
 80019ae:	4a29      	ldr	r2, [pc, #164]	; (8001a54 <TIM_TimeBaseInit+0xdc>)
 80019b0:	4293      	cmp	r3, r2
 80019b2:	d003      	beq.n	80019bc <TIM_TimeBaseInit+0x44>
     (TIMx == TIM4) || (TIMx == TIM5)) 
 80019b4:	687b      	ldr	r3, [r7, #4]
 80019b6:	4a28      	ldr	r2, [pc, #160]	; (8001a58 <TIM_TimeBaseInit+0xe0>)
 80019b8:	4293      	cmp	r3, r2
 80019ba:	d108      	bne.n	80019ce <TIM_TimeBaseInit+0x56>
  {
    /* Select the Counter Mode */
    tmpcr1 &= (uint16_t)(~((uint16_t)(TIM_CR1_DIR | TIM_CR1_CMS)));
 80019bc:	89fb      	ldrh	r3, [r7, #14]
 80019be:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80019c2:	81fb      	strh	r3, [r7, #14]
    tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_CounterMode;
 80019c4:	683b      	ldr	r3, [r7, #0]
 80019c6:	885a      	ldrh	r2, [r3, #2]
 80019c8:	89fb      	ldrh	r3, [r7, #14]
 80019ca:	4313      	orrs	r3, r2
 80019cc:	81fb      	strh	r3, [r7, #14]
  }
 
  if((TIMx != TIM6) && (TIMx != TIM7))
 80019ce:	687b      	ldr	r3, [r7, #4]
 80019d0:	4a22      	ldr	r2, [pc, #136]	; (8001a5c <TIM_TimeBaseInit+0xe4>)
 80019d2:	4293      	cmp	r3, r2
 80019d4:	d00c      	beq.n	80019f0 <TIM_TimeBaseInit+0x78>
 80019d6:	687b      	ldr	r3, [r7, #4]
 80019d8:	4a21      	ldr	r2, [pc, #132]	; (8001a60 <TIM_TimeBaseInit+0xe8>)
 80019da:	4293      	cmp	r3, r2
 80019dc:	d008      	beq.n	80019f0 <TIM_TimeBaseInit+0x78>
  {
    /* Set the clock division */
    tmpcr1 &= (uint16_t)(~((uint16_t)TIM_CR1_CKD));
 80019de:	89fb      	ldrh	r3, [r7, #14]
 80019e0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80019e4:	81fb      	strh	r3, [r7, #14]
    tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_ClockDivision;
 80019e6:	683b      	ldr	r3, [r7, #0]
 80019e8:	88da      	ldrh	r2, [r3, #6]
 80019ea:	89fb      	ldrh	r3, [r7, #14]
 80019ec:	4313      	orrs	r3, r2
 80019ee:	81fb      	strh	r3, [r7, #14]
  }

  TIMx->CR1 = tmpcr1;
 80019f0:	687b      	ldr	r3, [r7, #4]
 80019f2:	89fa      	ldrh	r2, [r7, #14]
 80019f4:	801a      	strh	r2, [r3, #0]

  /* Set the Autoreload value */
  TIMx->ARR = TIM_TimeBaseInitStruct->TIM_Period ;
 80019f6:	683b      	ldr	r3, [r7, #0]
 80019f8:	889a      	ldrh	r2, [r3, #4]
 80019fa:	687b      	ldr	r3, [r7, #4]
 80019fc:	859a      	strh	r2, [r3, #44]	; 0x2c
 
  /* Set the Prescaler value */
  TIMx->PSC = TIM_TimeBaseInitStruct->TIM_Prescaler;
 80019fe:	683b      	ldr	r3, [r7, #0]
 8001a00:	881a      	ldrh	r2, [r3, #0]
 8001a02:	687b      	ldr	r3, [r7, #4]
 8001a04:	851a      	strh	r2, [r3, #40]	; 0x28
    
  if ((TIMx == TIM1) || (TIMx == TIM8)|| (TIMx == TIM15)|| (TIMx == TIM16) || (TIMx == TIM17))  
 8001a06:	687b      	ldr	r3, [r7, #4]
 8001a08:	4a0f      	ldr	r2, [pc, #60]	; (8001a48 <TIM_TimeBaseInit+0xd0>)
 8001a0a:	4293      	cmp	r3, r2
 8001a0c:	d00f      	beq.n	8001a2e <TIM_TimeBaseInit+0xb6>
 8001a0e:	687b      	ldr	r3, [r7, #4]
 8001a10:	4a0e      	ldr	r2, [pc, #56]	; (8001a4c <TIM_TimeBaseInit+0xd4>)
 8001a12:	4293      	cmp	r3, r2
 8001a14:	d00b      	beq.n	8001a2e <TIM_TimeBaseInit+0xb6>
 8001a16:	687b      	ldr	r3, [r7, #4]
 8001a18:	4a12      	ldr	r2, [pc, #72]	; (8001a64 <TIM_TimeBaseInit+0xec>)
 8001a1a:	4293      	cmp	r3, r2
 8001a1c:	d007      	beq.n	8001a2e <TIM_TimeBaseInit+0xb6>
 8001a1e:	687b      	ldr	r3, [r7, #4]
 8001a20:	4a11      	ldr	r2, [pc, #68]	; (8001a68 <TIM_TimeBaseInit+0xf0>)
 8001a22:	4293      	cmp	r3, r2
 8001a24:	d003      	beq.n	8001a2e <TIM_TimeBaseInit+0xb6>
 8001a26:	687b      	ldr	r3, [r7, #4]
 8001a28:	4a10      	ldr	r2, [pc, #64]	; (8001a6c <TIM_TimeBaseInit+0xf4>)
 8001a2a:	4293      	cmp	r3, r2
 8001a2c:	d104      	bne.n	8001a38 <TIM_TimeBaseInit+0xc0>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = TIM_TimeBaseInitStruct->TIM_RepetitionCounter;
 8001a2e:	683b      	ldr	r3, [r7, #0]
 8001a30:	7a1b      	ldrb	r3, [r3, #8]
 8001a32:	b29a      	uxth	r2, r3
 8001a34:	687b      	ldr	r3, [r7, #4]
 8001a36:	861a      	strh	r2, [r3, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler and the Repetition counter
     values immediately */
  TIMx->EGR = TIM_PSCReloadMode_Immediate;           
 8001a38:	687b      	ldr	r3, [r7, #4]
 8001a3a:	2201      	movs	r2, #1
 8001a3c:	829a      	strh	r2, [r3, #20]
}
 8001a3e:	bf00      	nop
 8001a40:	3714      	adds	r7, #20
 8001a42:	46bd      	mov	sp, r7
 8001a44:	bc80      	pop	{r7}
 8001a46:	4770      	bx	lr
 8001a48:	40012c00 	.word	0x40012c00
 8001a4c:	40013400 	.word	0x40013400
 8001a50:	40000400 	.word	0x40000400
 8001a54:	40000800 	.word	0x40000800
 8001a58:	40000c00 	.word	0x40000c00
 8001a5c:	40001000 	.word	0x40001000
 8001a60:	40001400 	.word	0x40001400
 8001a64:	40014000 	.word	0x40014000
 8001a68:	40014400 	.word	0x40014400
 8001a6c:	40014800 	.word	0x40014800

08001a70 <TIM_Cmd>:
  * @param  NewState: new state of the TIMx peripheral.
  *   This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void TIM_Cmd(TIM_TypeDef* TIMx, FunctionalState NewState)
{
 8001a70:	b480      	push	{r7}
 8001a72:	b083      	sub	sp, #12
 8001a74:	af00      	add	r7, sp, #0
 8001a76:	6078      	str	r0, [r7, #4]
 8001a78:	460b      	mov	r3, r1
 8001a7a:	70fb      	strb	r3, [r7, #3]
  /* Check the parameters */
  assert_param(IS_TIM_ALL_PERIPH(TIMx));
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  
  if (NewState != DISABLE)
 8001a7c:	78fb      	ldrb	r3, [r7, #3]
 8001a7e:	2b00      	cmp	r3, #0
 8001a80:	d008      	beq.n	8001a94 <TIM_Cmd+0x24>
  {
    /* Enable the TIM Counter */
    TIMx->CR1 |= TIM_CR1_CEN;
 8001a82:	687b      	ldr	r3, [r7, #4]
 8001a84:	881b      	ldrh	r3, [r3, #0]
 8001a86:	b29b      	uxth	r3, r3
 8001a88:	f043 0301 	orr.w	r3, r3, #1
 8001a8c:	b29a      	uxth	r2, r3
 8001a8e:	687b      	ldr	r3, [r7, #4]
 8001a90:	801a      	strh	r2, [r3, #0]
  else
  {
    /* Disable the TIM Counter */
    TIMx->CR1 &= (uint16_t)(~((uint16_t)TIM_CR1_CEN));
  }
}
 8001a92:	e007      	b.n	8001aa4 <TIM_Cmd+0x34>
    TIMx->CR1 &= (uint16_t)(~((uint16_t)TIM_CR1_CEN));
 8001a94:	687b      	ldr	r3, [r7, #4]
 8001a96:	881b      	ldrh	r3, [r3, #0]
 8001a98:	b29b      	uxth	r3, r3
 8001a9a:	f023 0301 	bic.w	r3, r3, #1
 8001a9e:	b29a      	uxth	r2, r3
 8001aa0:	687b      	ldr	r3, [r7, #4]
 8001aa2:	801a      	strh	r2, [r3, #0]
}
 8001aa4:	bf00      	nop
 8001aa6:	370c      	adds	r7, #12
 8001aa8:	46bd      	mov	sp, r7
 8001aaa:	bc80      	pop	{r7}
 8001aac:	4770      	bx	lr

08001aae <TIM_ITConfig>:
  * @param  NewState: new state of the TIM interrupts.
  *   This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void TIM_ITConfig(TIM_TypeDef* TIMx, uint16_t TIM_IT, FunctionalState NewState)
{  
 8001aae:	b480      	push	{r7}
 8001ab0:	b083      	sub	sp, #12
 8001ab2:	af00      	add	r7, sp, #0
 8001ab4:	6078      	str	r0, [r7, #4]
 8001ab6:	460b      	mov	r3, r1
 8001ab8:	807b      	strh	r3, [r7, #2]
 8001aba:	4613      	mov	r3, r2
 8001abc:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_TIM_ALL_PERIPH(TIMx));
  assert_param(IS_TIM_IT(TIM_IT));
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  
  if (NewState != DISABLE)
 8001abe:	787b      	ldrb	r3, [r7, #1]
 8001ac0:	2b00      	cmp	r3, #0
 8001ac2:	d008      	beq.n	8001ad6 <TIM_ITConfig+0x28>
  {
    /* Enable the Interrupt sources */
    TIMx->DIER |= TIM_IT;
 8001ac4:	687b      	ldr	r3, [r7, #4]
 8001ac6:	899b      	ldrh	r3, [r3, #12]
 8001ac8:	b29a      	uxth	r2, r3
 8001aca:	887b      	ldrh	r3, [r7, #2]
 8001acc:	4313      	orrs	r3, r2
 8001ace:	b29a      	uxth	r2, r3
 8001ad0:	687b      	ldr	r3, [r7, #4]
 8001ad2:	819a      	strh	r2, [r3, #12]
  else
  {
    /* Disable the Interrupt sources */
    TIMx->DIER &= (uint16_t)~TIM_IT;
  }
}
 8001ad4:	e009      	b.n	8001aea <TIM_ITConfig+0x3c>
    TIMx->DIER &= (uint16_t)~TIM_IT;
 8001ad6:	687b      	ldr	r3, [r7, #4]
 8001ad8:	899b      	ldrh	r3, [r3, #12]
 8001ada:	b29a      	uxth	r2, r3
 8001adc:	887b      	ldrh	r3, [r7, #2]
 8001ade:	43db      	mvns	r3, r3
 8001ae0:	b29b      	uxth	r3, r3
 8001ae2:	4013      	ands	r3, r2
 8001ae4:	b29a      	uxth	r2, r3
 8001ae6:	687b      	ldr	r3, [r7, #4]
 8001ae8:	819a      	strh	r2, [r3, #12]
}
 8001aea:	bf00      	nop
 8001aec:	370c      	adds	r7, #12
 8001aee:	46bd      	mov	sp, r7
 8001af0:	bc80      	pop	{r7}
 8001af2:	4770      	bx	lr

08001af4 <TIM_ClearITPendingBit>:
  *   - TIM_IT_Break is used only with TIM1, TIM8 and TIM15. 
  *   - TIM_IT_COM is used only with TIM1, TIM8, TIM15, TIM16 and TIM17.    
  * @retval None
  */
void TIM_ClearITPendingBit(TIM_TypeDef* TIMx, uint16_t TIM_IT)
{
 8001af4:	b480      	push	{r7}
 8001af6:	b083      	sub	sp, #12
 8001af8:	af00      	add	r7, sp, #0
 8001afa:	6078      	str	r0, [r7, #4]
 8001afc:	460b      	mov	r3, r1
 8001afe:	807b      	strh	r3, [r7, #2]
  /* Check the parameters */
  assert_param(IS_TIM_ALL_PERIPH(TIMx));
  assert_param(IS_TIM_IT(TIM_IT));
  /* Clear the IT pending Bit */
  TIMx->SR = (uint16_t)~TIM_IT;
 8001b00:	887b      	ldrh	r3, [r7, #2]
 8001b02:	43db      	mvns	r3, r3
 8001b04:	b29a      	uxth	r2, r3
 8001b06:	687b      	ldr	r3, [r7, #4]
 8001b08:	821a      	strh	r2, [r3, #16]
}
 8001b0a:	bf00      	nop
 8001b0c:	370c      	adds	r7, #12
 8001b0e:	46bd      	mov	sp, r7
 8001b10:	bc80      	pop	{r7}
 8001b12:	4770      	bx	lr

08001b14 <USART_Init>:
  *         that contains the configuration information for the specified USART 
  *         peripheral.
  * @retval None
  */
void USART_Init(USART_TypeDef* USARTx, USART_InitTypeDef* USART_InitStruct)
{
 8001b14:	b580      	push	{r7, lr}
 8001b16:	b08c      	sub	sp, #48	; 0x30
 8001b18:	af00      	add	r7, sp, #0
 8001b1a:	6078      	str	r0, [r7, #4]
 8001b1c:	6039      	str	r1, [r7, #0]
  uint32_t tmpreg = 0x00, apbclock = 0x00;
 8001b1e:	2300      	movs	r3, #0
 8001b20:	62fb      	str	r3, [r7, #44]	; 0x2c
 8001b22:	2300      	movs	r3, #0
 8001b24:	62bb      	str	r3, [r7, #40]	; 0x28
  uint32_t integerdivider = 0x00;
 8001b26:	2300      	movs	r3, #0
 8001b28:	627b      	str	r3, [r7, #36]	; 0x24
  uint32_t fractionaldivider = 0x00;
 8001b2a:	2300      	movs	r3, #0
 8001b2c:	623b      	str	r3, [r7, #32]
  uint32_t usartxbase = 0;
 8001b2e:	2300      	movs	r3, #0
 8001b30:	61fb      	str	r3, [r7, #28]
  if (USART_InitStruct->USART_HardwareFlowControl != USART_HardwareFlowControl_None)
  {
    assert_param(IS_USART_123_PERIPH(USARTx));
  }

  usartxbase = (uint32_t)USARTx;
 8001b32:	687b      	ldr	r3, [r7, #4]
 8001b34:	61fb      	str	r3, [r7, #28]

/*---------------------------- USART CR2 Configuration -----------------------*/
  tmpreg = USARTx->CR2;
 8001b36:	687b      	ldr	r3, [r7, #4]
 8001b38:	8a1b      	ldrh	r3, [r3, #16]
 8001b3a:	b29b      	uxth	r3, r3
 8001b3c:	62fb      	str	r3, [r7, #44]	; 0x2c
  /* Clear STOP[13:12] bits */
  tmpreg &= CR2_STOP_CLEAR_Mask;
 8001b3e:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8001b40:	f64c 73ff 	movw	r3, #53247	; 0xcfff
 8001b44:	4013      	ands	r3, r2
 8001b46:	62fb      	str	r3, [r7, #44]	; 0x2c
  /* Configure the USART Stop Bits, Clock, CPOL, CPHA and LastBit ------------*/
  /* Set STOP[13:12] bits according to USART_StopBits value */
  tmpreg |= (uint32_t)USART_InitStruct->USART_StopBits;
 8001b48:	683b      	ldr	r3, [r7, #0]
 8001b4a:	88db      	ldrh	r3, [r3, #6]
 8001b4c:	461a      	mov	r2, r3
 8001b4e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001b50:	4313      	orrs	r3, r2
 8001b52:	62fb      	str	r3, [r7, #44]	; 0x2c
  
  /* Write to USART CR2 */
  USARTx->CR2 = (uint16_t)tmpreg;
 8001b54:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001b56:	b29a      	uxth	r2, r3
 8001b58:	687b      	ldr	r3, [r7, #4]
 8001b5a:	821a      	strh	r2, [r3, #16]

/*---------------------------- USART CR1 Configuration -----------------------*/
  tmpreg = USARTx->CR1;
 8001b5c:	687b      	ldr	r3, [r7, #4]
 8001b5e:	899b      	ldrh	r3, [r3, #12]
 8001b60:	b29b      	uxth	r3, r3
 8001b62:	62fb      	str	r3, [r7, #44]	; 0x2c
  /* Clear M, PCE, PS, TE and RE bits */
  tmpreg &= CR1_CLEAR_Mask;
 8001b64:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8001b66:	f64e 13f3 	movw	r3, #59891	; 0xe9f3
 8001b6a:	4013      	ands	r3, r2
 8001b6c:	62fb      	str	r3, [r7, #44]	; 0x2c
  /* Configure the USART Word Length, Parity and mode ----------------------- */
  /* Set the M bits according to USART_WordLength value */
  /* Set PCE and PS bits according to USART_Parity value */
  /* Set TE and RE bits according to USART_Mode value */
  tmpreg |= (uint32_t)USART_InitStruct->USART_WordLength | USART_InitStruct->USART_Parity |
 8001b6e:	683b      	ldr	r3, [r7, #0]
 8001b70:	889a      	ldrh	r2, [r3, #4]
 8001b72:	683b      	ldr	r3, [r7, #0]
 8001b74:	891b      	ldrh	r3, [r3, #8]
 8001b76:	4313      	orrs	r3, r2
 8001b78:	b29a      	uxth	r2, r3
            USART_InitStruct->USART_Mode;
 8001b7a:	683b      	ldr	r3, [r7, #0]
 8001b7c:	895b      	ldrh	r3, [r3, #10]
  tmpreg |= (uint32_t)USART_InitStruct->USART_WordLength | USART_InitStruct->USART_Parity |
 8001b7e:	4313      	orrs	r3, r2
 8001b80:	b29b      	uxth	r3, r3
 8001b82:	461a      	mov	r2, r3
 8001b84:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001b86:	4313      	orrs	r3, r2
 8001b88:	62fb      	str	r3, [r7, #44]	; 0x2c
  /* Write to USART CR1 */
  USARTx->CR1 = (uint16_t)tmpreg;
 8001b8a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001b8c:	b29a      	uxth	r2, r3
 8001b8e:	687b      	ldr	r3, [r7, #4]
 8001b90:	819a      	strh	r2, [r3, #12]

/*---------------------------- USART CR3 Configuration -----------------------*/  
  tmpreg = USARTx->CR3;
 8001b92:	687b      	ldr	r3, [r7, #4]
 8001b94:	8a9b      	ldrh	r3, [r3, #20]
 8001b96:	b29b      	uxth	r3, r3
 8001b98:	62fb      	str	r3, [r7, #44]	; 0x2c
  /* Clear CTSE and RTSE bits */
  tmpreg &= CR3_CLEAR_Mask;
 8001b9a:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8001b9c:	f64f 43ff 	movw	r3, #64767	; 0xfcff
 8001ba0:	4013      	ands	r3, r2
 8001ba2:	62fb      	str	r3, [r7, #44]	; 0x2c
  /* Configure the USART HFC -------------------------------------------------*/
  /* Set CTSE and RTSE bits according to USART_HardwareFlowControl value */
  tmpreg |= USART_InitStruct->USART_HardwareFlowControl;
 8001ba4:	683b      	ldr	r3, [r7, #0]
 8001ba6:	899b      	ldrh	r3, [r3, #12]
 8001ba8:	461a      	mov	r2, r3
 8001baa:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001bac:	4313      	orrs	r3, r2
 8001bae:	62fb      	str	r3, [r7, #44]	; 0x2c
  /* Write to USART CR3 */
  USARTx->CR3 = (uint16_t)tmpreg;
 8001bb0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001bb2:	b29a      	uxth	r2, r3
 8001bb4:	687b      	ldr	r3, [r7, #4]
 8001bb6:	829a      	strh	r2, [r3, #20]

/*---------------------------- USART BRR Configuration -----------------------*/
  /* Configure the USART Baud Rate -------------------------------------------*/
  RCC_GetClocksFreq(&RCC_ClocksStatus);
 8001bb8:	f107 0308 	add.w	r3, r7, #8
 8001bbc:	4618      	mov	r0, r3
 8001bbe:	f7ff fd57 	bl	8001670 <RCC_GetClocksFreq>
  if (usartxbase == USART1_BASE)
 8001bc2:	69fb      	ldr	r3, [r7, #28]
 8001bc4:	4a2e      	ldr	r2, [pc, #184]	; (8001c80 <USART_Init+0x16c>)
 8001bc6:	4293      	cmp	r3, r2
 8001bc8:	d102      	bne.n	8001bd0 <USART_Init+0xbc>
  {
    apbclock = RCC_ClocksStatus.PCLK2_Frequency;
 8001bca:	697b      	ldr	r3, [r7, #20]
 8001bcc:	62bb      	str	r3, [r7, #40]	; 0x28
 8001bce:	e001      	b.n	8001bd4 <USART_Init+0xc0>
  }
  else
  {
    apbclock = RCC_ClocksStatus.PCLK1_Frequency;
 8001bd0:	693b      	ldr	r3, [r7, #16]
 8001bd2:	62bb      	str	r3, [r7, #40]	; 0x28
  }
  
  /* Determine the integer part */
  if ((USARTx->CR1 & CR1_OVER8_Set) != 0)
 8001bd4:	687b      	ldr	r3, [r7, #4]
 8001bd6:	899b      	ldrh	r3, [r3, #12]
 8001bd8:	b29b      	uxth	r3, r3
 8001bda:	b21b      	sxth	r3, r3
 8001bdc:	2b00      	cmp	r3, #0
 8001bde:	da0c      	bge.n	8001bfa <USART_Init+0xe6>
  {
    /* Integer part computing in case Oversampling mode is 8 Samples */
    integerdivider = ((25 * apbclock) / (2 * (USART_InitStruct->USART_BaudRate)));    
 8001be0:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8001be2:	4613      	mov	r3, r2
 8001be4:	009b      	lsls	r3, r3, #2
 8001be6:	4413      	add	r3, r2
 8001be8:	009a      	lsls	r2, r3, #2
 8001bea:	441a      	add	r2, r3
 8001bec:	683b      	ldr	r3, [r7, #0]
 8001bee:	681b      	ldr	r3, [r3, #0]
 8001bf0:	005b      	lsls	r3, r3, #1
 8001bf2:	fbb2 f3f3 	udiv	r3, r2, r3
 8001bf6:	627b      	str	r3, [r7, #36]	; 0x24
 8001bf8:	e00b      	b.n	8001c12 <USART_Init+0xfe>
  }
  else /* if ((USARTx->CR1 & CR1_OVER8_Set) == 0) */
  {
    /* Integer part computing in case Oversampling mode is 16 Samples */
    integerdivider = ((25 * apbclock) / (4 * (USART_InitStruct->USART_BaudRate)));    
 8001bfa:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8001bfc:	4613      	mov	r3, r2
 8001bfe:	009b      	lsls	r3, r3, #2
 8001c00:	4413      	add	r3, r2
 8001c02:	009a      	lsls	r2, r3, #2
 8001c04:	441a      	add	r2, r3
 8001c06:	683b      	ldr	r3, [r7, #0]
 8001c08:	681b      	ldr	r3, [r3, #0]
 8001c0a:	009b      	lsls	r3, r3, #2
 8001c0c:	fbb2 f3f3 	udiv	r3, r2, r3
 8001c10:	627b      	str	r3, [r7, #36]	; 0x24
  }
  tmpreg = (integerdivider / 100) << 4;
 8001c12:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001c14:	4a1b      	ldr	r2, [pc, #108]	; (8001c84 <USART_Init+0x170>)
 8001c16:	fba2 2303 	umull	r2, r3, r2, r3
 8001c1a:	095b      	lsrs	r3, r3, #5
 8001c1c:	011b      	lsls	r3, r3, #4
 8001c1e:	62fb      	str	r3, [r7, #44]	; 0x2c

  /* Determine the fractional part */
  fractionaldivider = integerdivider - (100 * (tmpreg >> 4));
 8001c20:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001c22:	091b      	lsrs	r3, r3, #4
 8001c24:	2264      	movs	r2, #100	; 0x64
 8001c26:	fb02 f303 	mul.w	r3, r2, r3
 8001c2a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001c2c:	1ad3      	subs	r3, r2, r3
 8001c2e:	623b      	str	r3, [r7, #32]

  /* Implement the fractional part in the register */
  if ((USARTx->CR1 & CR1_OVER8_Set) != 0)
 8001c30:	687b      	ldr	r3, [r7, #4]
 8001c32:	899b      	ldrh	r3, [r3, #12]
 8001c34:	b29b      	uxth	r3, r3
 8001c36:	b21b      	sxth	r3, r3
 8001c38:	2b00      	cmp	r3, #0
 8001c3a:	da0c      	bge.n	8001c56 <USART_Init+0x142>
  {
    tmpreg |= ((((fractionaldivider * 8) + 50) / 100)) & ((uint8_t)0x07);
 8001c3c:	6a3b      	ldr	r3, [r7, #32]
 8001c3e:	00db      	lsls	r3, r3, #3
 8001c40:	3332      	adds	r3, #50	; 0x32
 8001c42:	4a10      	ldr	r2, [pc, #64]	; (8001c84 <USART_Init+0x170>)
 8001c44:	fba2 2303 	umull	r2, r3, r2, r3
 8001c48:	095b      	lsrs	r3, r3, #5
 8001c4a:	f003 0307 	and.w	r3, r3, #7
 8001c4e:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8001c50:	4313      	orrs	r3, r2
 8001c52:	62fb      	str	r3, [r7, #44]	; 0x2c
 8001c54:	e00b      	b.n	8001c6e <USART_Init+0x15a>
  }
  else /* if ((USARTx->CR1 & CR1_OVER8_Set) == 0) */
  {
    tmpreg |= ((((fractionaldivider * 16) + 50) / 100)) & ((uint8_t)0x0F);
 8001c56:	6a3b      	ldr	r3, [r7, #32]
 8001c58:	011b      	lsls	r3, r3, #4
 8001c5a:	3332      	adds	r3, #50	; 0x32
 8001c5c:	4a09      	ldr	r2, [pc, #36]	; (8001c84 <USART_Init+0x170>)
 8001c5e:	fba2 2303 	umull	r2, r3, r2, r3
 8001c62:	095b      	lsrs	r3, r3, #5
 8001c64:	f003 030f 	and.w	r3, r3, #15
 8001c68:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8001c6a:	4313      	orrs	r3, r2
 8001c6c:	62fb      	str	r3, [r7, #44]	; 0x2c
  }
  
  /* Write to USART BRR */
  USARTx->BRR = (uint16_t)tmpreg;
 8001c6e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001c70:	b29a      	uxth	r2, r3
 8001c72:	687b      	ldr	r3, [r7, #4]
 8001c74:	811a      	strh	r2, [r3, #8]
}
 8001c76:	bf00      	nop
 8001c78:	3730      	adds	r7, #48	; 0x30
 8001c7a:	46bd      	mov	sp, r7
 8001c7c:	bd80      	pop	{r7, pc}
 8001c7e:	bf00      	nop
 8001c80:	40013800 	.word	0x40013800
 8001c84:	51eb851f 	.word	0x51eb851f

08001c88 <USART_Cmd>:
  * @param  NewState: new state of the USARTx peripheral.
  *         This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void USART_Cmd(USART_TypeDef* USARTx, FunctionalState NewState)
{
 8001c88:	b480      	push	{r7}
 8001c8a:	b083      	sub	sp, #12
 8001c8c:	af00      	add	r7, sp, #0
 8001c8e:	6078      	str	r0, [r7, #4]
 8001c90:	460b      	mov	r3, r1
 8001c92:	70fb      	strb	r3, [r7, #3]
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  
  if (NewState != DISABLE)
 8001c94:	78fb      	ldrb	r3, [r7, #3]
 8001c96:	2b00      	cmp	r3, #0
 8001c98:	d008      	beq.n	8001cac <USART_Cmd+0x24>
  {
    /* Enable the selected USART by setting the UE bit in the CR1 register */
    USARTx->CR1 |= CR1_UE_Set;
 8001c9a:	687b      	ldr	r3, [r7, #4]
 8001c9c:	899b      	ldrh	r3, [r3, #12]
 8001c9e:	b29b      	uxth	r3, r3
 8001ca0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8001ca4:	b29a      	uxth	r2, r3
 8001ca6:	687b      	ldr	r3, [r7, #4]
 8001ca8:	819a      	strh	r2, [r3, #12]
  else
  {
    /* Disable the selected USART by clearing the UE bit in the CR1 register */
    USARTx->CR1 &= CR1_UE_Reset;
  }
}
 8001caa:	e007      	b.n	8001cbc <USART_Cmd+0x34>
    USARTx->CR1 &= CR1_UE_Reset;
 8001cac:	687b      	ldr	r3, [r7, #4]
 8001cae:	899b      	ldrh	r3, [r3, #12]
 8001cb0:	b29b      	uxth	r3, r3
 8001cb2:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8001cb6:	b29a      	uxth	r2, r3
 8001cb8:	687b      	ldr	r3, [r7, #4]
 8001cba:	819a      	strh	r2, [r3, #12]
}
 8001cbc:	bf00      	nop
 8001cbe:	370c      	adds	r7, #12
 8001cc0:	46bd      	mov	sp, r7
 8001cc2:	bc80      	pop	{r7}
 8001cc4:	4770      	bx	lr

08001cc6 <USART_SendData>:
  *   USART1, USART2, USART3, UART4 or UART5.
  * @param  Data: the data to transmit.
  * @retval None
  */
void USART_SendData(USART_TypeDef* USARTx, uint16_t Data)
{
 8001cc6:	b480      	push	{r7}
 8001cc8:	b083      	sub	sp, #12
 8001cca:	af00      	add	r7, sp, #0
 8001ccc:	6078      	str	r0, [r7, #4]
 8001cce:	460b      	mov	r3, r1
 8001cd0:	807b      	strh	r3, [r7, #2]
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
  assert_param(IS_USART_DATA(Data)); 
    
  /* Transmit Data */
  USARTx->DR = (Data & (uint16_t)0x01FF);
 8001cd2:	887b      	ldrh	r3, [r7, #2]
 8001cd4:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8001cd8:	b29a      	uxth	r2, r3
 8001cda:	687b      	ldr	r3, [r7, #4]
 8001cdc:	809a      	strh	r2, [r3, #4]
}
 8001cde:	bf00      	nop
 8001ce0:	370c      	adds	r7, #12
 8001ce2:	46bd      	mov	sp, r7
 8001ce4:	bc80      	pop	{r7}
 8001ce6:	4770      	bx	lr

08001ce8 <USART_GetFlagStatus>:
  *     @arg USART_FLAG_FE:   Framing Error flag
  *     @arg USART_FLAG_PE:   Parity Error flag
  * @retval The new state of USART_FLAG (SET or RESET).
  */
FlagStatus USART_GetFlagStatus(USART_TypeDef* USARTx, uint16_t USART_FLAG)
{
 8001ce8:	b480      	push	{r7}
 8001cea:	b085      	sub	sp, #20
 8001cec:	af00      	add	r7, sp, #0
 8001cee:	6078      	str	r0, [r7, #4]
 8001cf0:	460b      	mov	r3, r1
 8001cf2:	807b      	strh	r3, [r7, #2]
  FlagStatus bitstatus = RESET;
 8001cf4:	2300      	movs	r3, #0
 8001cf6:	73fb      	strb	r3, [r7, #15]
  if (USART_FLAG == USART_FLAG_CTS)
  {
    assert_param(IS_USART_123_PERIPH(USARTx));
  }  
  
  if ((USARTx->SR & USART_FLAG) != (uint16_t)RESET)
 8001cf8:	687b      	ldr	r3, [r7, #4]
 8001cfa:	881b      	ldrh	r3, [r3, #0]
 8001cfc:	b29a      	uxth	r2, r3
 8001cfe:	887b      	ldrh	r3, [r7, #2]
 8001d00:	4013      	ands	r3, r2
 8001d02:	b29b      	uxth	r3, r3
 8001d04:	2b00      	cmp	r3, #0
 8001d06:	d002      	beq.n	8001d0e <USART_GetFlagStatus+0x26>
  {
    bitstatus = SET;
 8001d08:	2301      	movs	r3, #1
 8001d0a:	73fb      	strb	r3, [r7, #15]
 8001d0c:	e001      	b.n	8001d12 <USART_GetFlagStatus+0x2a>
  }
  else
  {
    bitstatus = RESET;
 8001d0e:	2300      	movs	r3, #0
 8001d10:	73fb      	strb	r3, [r7, #15]
  }
  return bitstatus;
 8001d12:	7bfb      	ldrb	r3, [r7, #15]
}
 8001d14:	4618      	mov	r0, r3
 8001d16:	3714      	adds	r7, #20
 8001d18:	46bd      	mov	sp, r7
 8001d1a:	bc80      	pop	{r7}
 8001d1c:	4770      	bx	lr
	...

08001d20 <Conf_GPIO>:
#include <conf_gpio.h>

void Conf_GPIO(void)
{
 8001d20:	b580      	push	{r7, lr}
 8001d22:	b082      	sub	sp, #8
 8001d24:	af00      	add	r7, sp, #0
  RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);
 8001d26:	2101      	movs	r1, #1
 8001d28:	2004      	movs	r0, #4
 8001d2a:	f7ff fd51 	bl	80017d0 <RCC_APB2PeriphClockCmd>
  RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);
 8001d2e:	2101      	movs	r1, #1
 8001d30:	2008      	movs	r0, #8
 8001d32:	f7ff fd4d 	bl	80017d0 <RCC_APB2PeriphClockCmd>
  RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO, ENABLE);
 8001d36:	2101      	movs	r1, #1
 8001d38:	2001      	movs	r0, #1
 8001d3a:	f7ff fd49 	bl	80017d0 <RCC_APB2PeriphClockCmd>

  GPIO_InitTypeDef gpio_structA;
  gpio_structA.GPIO_Mode = GPIO_Mode_Out_PP;
 8001d3e:	2310      	movs	r3, #16
 8001d40:	71fb      	strb	r3, [r7, #7]
  gpio_structA.GPIO_Pin = GPIO_Pin_3;
 8001d42:	2308      	movs	r3, #8
 8001d44:	80bb      	strh	r3, [r7, #4]
  gpio_structA.GPIO_Speed = GPIO_Speed_2MHz;
 8001d46:	2302      	movs	r3, #2
 8001d48:	71bb      	strb	r3, [r7, #6]
  GPIO_Init(GPIOA, &gpio_structA);
 8001d4a:	1d3b      	adds	r3, r7, #4
 8001d4c:	4619      	mov	r1, r3
 8001d4e:	4817      	ldr	r0, [pc, #92]	; (8001dac <Conf_GPIO+0x8c>)
 8001d50:	f7ff fbba 	bl	80014c8 <GPIO_Init>

  gpio_structA.GPIO_Pin = GPIO_Pin_5 | GPIO_Pin_7;
 8001d54:	23a0      	movs	r3, #160	; 0xa0
 8001d56:	80bb      	strh	r3, [r7, #4]
  gpio_structA.GPIO_Mode = GPIO_Mode_AF_PP;
 8001d58:	2318      	movs	r3, #24
 8001d5a:	71fb      	strb	r3, [r7, #7]
  GPIO_Init(GPIOA, &gpio_structA);
 8001d5c:	1d3b      	adds	r3, r7, #4
 8001d5e:	4619      	mov	r1, r3
 8001d60:	4812      	ldr	r0, [pc, #72]	; (8001dac <Conf_GPIO+0x8c>)
 8001d62:	f7ff fbb1 	bl	80014c8 <GPIO_Init>

  gpio_structA.GPIO_Pin = GPIO_Pin_6;
 8001d66:	2340      	movs	r3, #64	; 0x40
 8001d68:	80bb      	strh	r3, [r7, #4]
  gpio_structA.GPIO_Mode = GPIO_Mode_IPU;
 8001d6a:	2348      	movs	r3, #72	; 0x48
 8001d6c:	71fb      	strb	r3, [r7, #7]
  GPIO_Init(GPIOA, &gpio_structA);
 8001d6e:	1d3b      	adds	r3, r7, #4
 8001d70:	4619      	mov	r1, r3
 8001d72:	480e      	ldr	r0, [pc, #56]	; (8001dac <Conf_GPIO+0x8c>)
 8001d74:	f7ff fba8 	bl	80014c8 <GPIO_Init>

  GPIO_InitTypeDef gpio_structB;
  gpio_structB.GPIO_Mode = GPIO_Mode_AF_PP;
 8001d78:	2318      	movs	r3, #24
 8001d7a:	70fb      	strb	r3, [r7, #3]
  gpio_structB.GPIO_Pin = GPIO_Pin_10;
 8001d7c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001d80:	803b      	strh	r3, [r7, #0]
  gpio_structB.GPIO_Speed = GPIO_Speed_2MHz;
 8001d82:	2302      	movs	r3, #2
 8001d84:	70bb      	strb	r3, [r7, #2]
  GPIO_Init(GPIOB, &gpio_structB);
 8001d86:	463b      	mov	r3, r7
 8001d88:	4619      	mov	r1, r3
 8001d8a:	4809      	ldr	r0, [pc, #36]	; (8001db0 <Conf_GPIO+0x90>)
 8001d8c:	f7ff fb9c 	bl	80014c8 <GPIO_Init>

  gpio_structB.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 8001d90:	2304      	movs	r3, #4
 8001d92:	70fb      	strb	r3, [r7, #3]
  gpio_structB.GPIO_Pin = GPIO_Pin_11;
 8001d94:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8001d98:	803b      	strh	r3, [r7, #0]
  GPIO_Init(GPIOB, &gpio_structB);
 8001d9a:	463b      	mov	r3, r7
 8001d9c:	4619      	mov	r1, r3
 8001d9e:	4804      	ldr	r0, [pc, #16]	; (8001db0 <Conf_GPIO+0x90>)
 8001da0:	f7ff fb92 	bl	80014c8 <GPIO_Init>
}
 8001da4:	bf00      	nop
 8001da6:	3708      	adds	r7, #8
 8001da8:	46bd      	mov	sp, r7
 8001daa:	bd80      	pop	{r7, pc}
 8001dac:	40010800 	.word	0x40010800
 8001db0:	40010c00 	.word	0x40010c00

08001db4 <TIM3_Delay>:
#include "delay.h"

volatile uint32_t contador_ms = 0;

void TIM3_Delay(uint32_t tempo)
{
 8001db4:	b580      	push	{r7, lr}
 8001db6:	b082      	sub	sp, #8
 8001db8:	af00      	add	r7, sp, #0
 8001dba:	6078      	str	r0, [r7, #4]
  TIM_Cmd(TIM3, ENABLE);
 8001dbc:	2101      	movs	r1, #1
 8001dbe:	480a      	ldr	r0, [pc, #40]	; (8001de8 <TIM3_Delay+0x34>)
 8001dc0:	f7ff fe56 	bl	8001a70 <TIM_Cmd>

  while(tempo != contador_ms);
 8001dc4:	bf00      	nop
 8001dc6:	4b09      	ldr	r3, [pc, #36]	; (8001dec <TIM3_Delay+0x38>)
 8001dc8:	681b      	ldr	r3, [r3, #0]
 8001dca:	687a      	ldr	r2, [r7, #4]
 8001dcc:	429a      	cmp	r2, r3
 8001dce:	d1fa      	bne.n	8001dc6 <TIM3_Delay+0x12>

  contador_ms = 0;
 8001dd0:	4b06      	ldr	r3, [pc, #24]	; (8001dec <TIM3_Delay+0x38>)
 8001dd2:	2200      	movs	r2, #0
 8001dd4:	601a      	str	r2, [r3, #0]

  TIM_Cmd(TIM3, DISABLE);
 8001dd6:	2100      	movs	r1, #0
 8001dd8:	4803      	ldr	r0, [pc, #12]	; (8001de8 <TIM3_Delay+0x34>)
 8001dda:	f7ff fe49 	bl	8001a70 <TIM_Cmd>
}
 8001dde:	bf00      	nop
 8001de0:	3708      	adds	r7, #8
 8001de2:	46bd      	mov	sp, r7
 8001de4:	bd80      	pop	{r7, pc}
 8001de6:	bf00      	nop
 8001de8:	40000400 	.word	0x40000400
 8001dec:	200006a4 	.word	0x200006a4

08001df0 <Conf_TIM3>:

void Conf_TIM3(void)
{
 8001df0:	b580      	push	{r7, lr}
 8001df2:	b084      	sub	sp, #16
 8001df4:	af00      	add	r7, sp, #0
  RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3, ENABLE);
 8001df6:	2101      	movs	r1, #1
 8001df8:	2002      	movs	r0, #2
 8001dfa:	f7ff fd07 	bl	800180c <RCC_APB1PeriphClockCmd>

  TIM_TimeBaseInitTypeDef tim_struct;
  tim_struct.TIM_Prescaler = 72-1;
 8001dfe:	2347      	movs	r3, #71	; 0x47
 8001e00:	80bb      	strh	r3, [r7, #4]
  tim_struct.TIM_Period = 1000-1;
 8001e02:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001e06:	813b      	strh	r3, [r7, #8]
  tim_struct.TIM_CounterMode =  TIM_CounterMode_Up;
 8001e08:	2300      	movs	r3, #0
 8001e0a:	80fb      	strh	r3, [r7, #6]
  tim_struct.TIM_ClockDivision = 0;
 8001e0c:	2300      	movs	r3, #0
 8001e0e:	817b      	strh	r3, [r7, #10]
  tim_struct.TIM_RepetitionCounter = 0;
 8001e10:	2300      	movs	r3, #0
 8001e12:	733b      	strb	r3, [r7, #12]
  TIM_TimeBaseInit(TIM3, &tim_struct);
 8001e14:	1d3b      	adds	r3, r7, #4
 8001e16:	4619      	mov	r1, r3
 8001e18:	480b      	ldr	r0, [pc, #44]	; (8001e48 <Conf_TIM3+0x58>)
 8001e1a:	f7ff fdad 	bl	8001978 <TIM_TimeBaseInit>

  TIM_ITConfig(TIM3, TIM_IT_Update, ENABLE);
 8001e1e:	2201      	movs	r2, #1
 8001e20:	2101      	movs	r1, #1
 8001e22:	4809      	ldr	r0, [pc, #36]	; (8001e48 <Conf_TIM3+0x58>)
 8001e24:	f7ff fe43 	bl	8001aae <TIM_ITConfig>

  NVIC_InitTypeDef nvic_struct;
  nvic_struct.NVIC_IRQChannel = TIM3_IRQn;
 8001e28:	231d      	movs	r3, #29
 8001e2a:	703b      	strb	r3, [r7, #0]
  nvic_struct.NVIC_IRQChannelCmd = ENABLE;
 8001e2c:	2301      	movs	r3, #1
 8001e2e:	70fb      	strb	r3, [r7, #3]
  nvic_struct.NVIC_IRQChannelPreemptionPriority = 0;
 8001e30:	2300      	movs	r3, #0
 8001e32:	707b      	strb	r3, [r7, #1]
  nvic_struct.NVIC_IRQChannelSubPriority = 0;
 8001e34:	2300      	movs	r3, #0
 8001e36:	70bb      	strb	r3, [r7, #2]
  NVIC_Init(&nvic_struct);
 8001e38:	463b      	mov	r3, r7
 8001e3a:	4618      	mov	r0, r3
 8001e3c:	f7ff fae2 	bl	8001404 <NVIC_Init>
}
 8001e40:	bf00      	nop
 8001e42:	3710      	adds	r7, #16
 8001e44:	46bd      	mov	sp, r7
 8001e46:	bd80      	pop	{r7, pc}
 8001e48:	40000400 	.word	0x40000400

08001e4c <main>:
void BMP280_Write(uint8_t endereco, uint8_t dado);
void BMP280_Read(uint8_t endereco, uint8_t *buffer, uint8_t tam);
uint8_t BMP280_Transfer(uint8_t outByte);

int main()
{
 8001e4c:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8001e50:	b094      	sub	sp, #80	; 0x50
 8001e52:	af06      	add	r7, sp, #24
  char msg[50];

  Conf_GPIO();
 8001e54:	f7ff ff64 	bl	8001d20 <Conf_GPIO>
  Conf_USART3();
 8001e58:	f000 fcd8 	bl	800280c <Conf_USART3>
  Conf_TIM3();
 8001e5c:	f7ff ffc8 	bl	8001df0 <Conf_TIM3>
  Conf_SPI1_Master();
 8001e60:	f000 fc88 	bl	8002774 <Conf_SPI1_Master>

  GPIO_WriteBit(GPIOA, GPIO_Pin_3, 1);
 8001e64:	2201      	movs	r2, #1
 8001e66:	2108      	movs	r1, #8
 8001e68:	481d      	ldr	r0, [pc, #116]	; (8001ee0 <main+0x94>)
 8001e6a:	f7ff fbe9 	bl	8001640 <GPIO_WriteBit>

//  BMP280_Write(0x60, 0xB6);

  BMP280_Init();
 8001e6e:	f000 f8bf 	bl	8001ff0 <BMP280_Init>

  while(1)
  {
    BMP280_Read(0xD0, &ID, 1);
 8001e72:	2201      	movs	r2, #1
 8001e74:	491b      	ldr	r1, [pc, #108]	; (8001ee4 <main+0x98>)
 8001e76:	20d0      	movs	r0, #208	; 0xd0
 8001e78:	f000 f886 	bl	8001f88 <BMP280_Read>
    BMP280_calc_values();
 8001e7c:	f000 f970 	bl	8002160 <BMP280_calc_values>
    sprintf(msg, "P: %.2f\t T: %.2f\t A: %.2f\r\nID: %d\r\n", pressure/100, temperature, altitude, ID);
 8001e80:	4b19      	ldr	r3, [pc, #100]	; (8001ee8 <main+0x9c>)
 8001e82:	681b      	ldr	r3, [r3, #0]
 8001e84:	4919      	ldr	r1, [pc, #100]	; (8001eec <main+0xa0>)
 8001e86:	4618      	mov	r0, r3
 8001e88:	f7ff f80c 	bl	8000ea4 <__aeabi_fdiv>
 8001e8c:	4603      	mov	r3, r0
 8001e8e:	4618      	mov	r0, r3
 8001e90:	f7fe faca 	bl	8000428 <__aeabi_f2d>
 8001e94:	4680      	mov	r8, r0
 8001e96:	4689      	mov	r9, r1
 8001e98:	4b15      	ldr	r3, [pc, #84]	; (8001ef0 <main+0xa4>)
 8001e9a:	681b      	ldr	r3, [r3, #0]
 8001e9c:	4618      	mov	r0, r3
 8001e9e:	f7fe fac3 	bl	8000428 <__aeabi_f2d>
 8001ea2:	4604      	mov	r4, r0
 8001ea4:	460d      	mov	r5, r1
 8001ea6:	4b13      	ldr	r3, [pc, #76]	; (8001ef4 <main+0xa8>)
 8001ea8:	681b      	ldr	r3, [r3, #0]
 8001eaa:	4618      	mov	r0, r3
 8001eac:	f7fe fabc 	bl	8000428 <__aeabi_f2d>
 8001eb0:	4602      	mov	r2, r0
 8001eb2:	460b      	mov	r3, r1
 8001eb4:	490b      	ldr	r1, [pc, #44]	; (8001ee4 <main+0x98>)
 8001eb6:	7809      	ldrb	r1, [r1, #0]
 8001eb8:	1d38      	adds	r0, r7, #4
 8001eba:	9104      	str	r1, [sp, #16]
 8001ebc:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8001ec0:	e9cd 4500 	strd	r4, r5, [sp]
 8001ec4:	4642      	mov	r2, r8
 8001ec6:	464b      	mov	r3, r9
 8001ec8:	490b      	ldr	r1, [pc, #44]	; (8001ef8 <main+0xac>)
 8001eca:	f000 fdfb 	bl	8002ac4 <sprintf>
    Print_USART3(msg);
 8001ece:	1d3b      	adds	r3, r7, #4
 8001ed0:	4618      	mov	r0, r3
 8001ed2:	f000 fc7b 	bl	80027cc <Print_USART3>
    TIM3_Delay(500);
 8001ed6:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8001eda:	f7ff ff6b 	bl	8001db4 <TIM3_Delay>
    BMP280_Read(0xD0, &ID, 1);
 8001ede:	e7c8      	b.n	8001e72 <main+0x26>
 8001ee0:	40010800 	.word	0x40010800
 8001ee4:	200006a8 	.word	0x200006a8
 8001ee8:	200006fc 	.word	0x200006fc
 8001eec:	42c80000 	.word	0x42c80000
 8001ef0:	200006ec 	.word	0x200006ec
 8001ef4:	20000704 	.word	0x20000704
 8001ef8:	080064f0 	.word	0x080064f0

08001efc <BMP280_Transfer>:

   return 0;
}

uint8_t BMP280_Transfer(uint8_t comando)
{
 8001efc:	b580      	push	{r7, lr}
 8001efe:	b082      	sub	sp, #8
 8001f00:	af00      	add	r7, sp, #0
 8001f02:	4603      	mov	r3, r0
 8001f04:	71fb      	strb	r3, [r7, #7]
  while(!SPI_I2S_GetFlagStatus(SPI1, SPI_I2S_FLAG_TXE));
 8001f06:	bf00      	nop
 8001f08:	2102      	movs	r1, #2
 8001f0a:	480e      	ldr	r0, [pc, #56]	; (8001f44 <BMP280_Transfer+0x48>)
 8001f0c:	f7ff fd18 	bl	8001940 <SPI_I2S_GetFlagStatus>
 8001f10:	4603      	mov	r3, r0
 8001f12:	2b00      	cmp	r3, #0
 8001f14:	d0f8      	beq.n	8001f08 <BMP280_Transfer+0xc>
  SPI_I2S_SendData(SPI1, comando);
 8001f16:	79fb      	ldrb	r3, [r7, #7]
 8001f18:	b29b      	uxth	r3, r3
 8001f1a:	4619      	mov	r1, r3
 8001f1c:	4809      	ldr	r0, [pc, #36]	; (8001f44 <BMP280_Transfer+0x48>)
 8001f1e:	f7ff fcf5 	bl	800190c <SPI_I2S_SendData>
  while(!SPI_I2S_GetFlagStatus(SPI1, SPI_I2S_FLAG_RXNE));
 8001f22:	bf00      	nop
 8001f24:	2101      	movs	r1, #1
 8001f26:	4807      	ldr	r0, [pc, #28]	; (8001f44 <BMP280_Transfer+0x48>)
 8001f28:	f7ff fd0a 	bl	8001940 <SPI_I2S_GetFlagStatus>
 8001f2c:	4603      	mov	r3, r0
 8001f2e:	2b00      	cmp	r3, #0
 8001f30:	d0f8      	beq.n	8001f24 <BMP280_Transfer+0x28>
  return SPI_I2S_ReceiveData(SPI1);
 8001f32:	4804      	ldr	r0, [pc, #16]	; (8001f44 <BMP280_Transfer+0x48>)
 8001f34:	f7ff fcf8 	bl	8001928 <SPI_I2S_ReceiveData>
 8001f38:	4603      	mov	r3, r0
 8001f3a:	b2db      	uxtb	r3, r3
}
 8001f3c:	4618      	mov	r0, r3
 8001f3e:	3708      	adds	r7, #8
 8001f40:	46bd      	mov	sp, r7
 8001f42:	bd80      	pop	{r7, pc}
 8001f44:	40013000 	.word	0x40013000

08001f48 <BMP280_Write>:

void BMP280_Write(uint8_t endereco, uint8_t dado)
{
 8001f48:	b580      	push	{r7, lr}
 8001f4a:	b082      	sub	sp, #8
 8001f4c:	af00      	add	r7, sp, #0
 8001f4e:	4603      	mov	r3, r0
 8001f50:	460a      	mov	r2, r1
 8001f52:	71fb      	strb	r3, [r7, #7]
 8001f54:	4613      	mov	r3, r2
 8001f56:	71bb      	strb	r3, [r7, #6]
  GPIO_WriteBit(GPIOA, GPIO_Pin_3, 0);
 8001f58:	2200      	movs	r2, #0
 8001f5a:	2108      	movs	r1, #8
 8001f5c:	4809      	ldr	r0, [pc, #36]	; (8001f84 <BMP280_Write+0x3c>)
 8001f5e:	f7ff fb6f 	bl	8001640 <GPIO_WriteBit>

  BMP280_Transfer(endereco);
 8001f62:	79fb      	ldrb	r3, [r7, #7]
 8001f64:	4618      	mov	r0, r3
 8001f66:	f7ff ffc9 	bl	8001efc <BMP280_Transfer>

  BMP280_Transfer(dado);
 8001f6a:	79bb      	ldrb	r3, [r7, #6]
 8001f6c:	4618      	mov	r0, r3
 8001f6e:	f7ff ffc5 	bl	8001efc <BMP280_Transfer>

  GPIO_WriteBit(GPIOA, GPIO_Pin_3, 1);
 8001f72:	2201      	movs	r2, #1
 8001f74:	2108      	movs	r1, #8
 8001f76:	4803      	ldr	r0, [pc, #12]	; (8001f84 <BMP280_Write+0x3c>)
 8001f78:	f7ff fb62 	bl	8001640 <GPIO_WriteBit>
}
 8001f7c:	bf00      	nop
 8001f7e:	3708      	adds	r7, #8
 8001f80:	46bd      	mov	sp, r7
 8001f82:	bd80      	pop	{r7, pc}
 8001f84:	40010800 	.word	0x40010800

08001f88 <BMP280_Read>:

void BMP280_Read(uint8_t endereco, uint8_t *buffer, uint8_t tam)
{
 8001f88:	b580      	push	{r7, lr}
 8001f8a:	b084      	sub	sp, #16
 8001f8c:	af00      	add	r7, sp, #0
 8001f8e:	4603      	mov	r3, r0
 8001f90:	6039      	str	r1, [r7, #0]
 8001f92:	71fb      	strb	r3, [r7, #7]
 8001f94:	4613      	mov	r3, r2
 8001f96:	71bb      	strb	r3, [r7, #6]
  GPIO_WriteBit(GPIOA, GPIO_Pin_3, 0);
 8001f98:	2200      	movs	r2, #0
 8001f9a:	2108      	movs	r1, #8
 8001f9c:	4813      	ldr	r0, [pc, #76]	; (8001fec <BMP280_Read+0x64>)
 8001f9e:	f7ff fb4f 	bl	8001640 <GPIO_WriteBit>

  BMP280_Transfer(endereco);
 8001fa2:	79fb      	ldrb	r3, [r7, #7]
 8001fa4:	4618      	mov	r0, r3
 8001fa6:	f7ff ffa9 	bl	8001efc <BMP280_Transfer>

  for (int i = 0; i < tam; i++)
 8001faa:	2300      	movs	r3, #0
 8001fac:	60fb      	str	r3, [r7, #12]
 8001fae:	e00f      	b.n	8001fd0 <BMP280_Read+0x48>
  {
    *buffer = BMP280_Transfer(0x00);
 8001fb0:	2000      	movs	r0, #0
 8001fb2:	f7ff ffa3 	bl	8001efc <BMP280_Transfer>
 8001fb6:	4603      	mov	r3, r0
 8001fb8:	461a      	mov	r2, r3
 8001fba:	683b      	ldr	r3, [r7, #0]
 8001fbc:	701a      	strb	r2, [r3, #0]
    buffer++;
 8001fbe:	683b      	ldr	r3, [r7, #0]
 8001fc0:	3301      	adds	r3, #1
 8001fc2:	603b      	str	r3, [r7, #0]
    TIM3_Delay(1);
 8001fc4:	2001      	movs	r0, #1
 8001fc6:	f7ff fef5 	bl	8001db4 <TIM3_Delay>
  for (int i = 0; i < tam; i++)
 8001fca:	68fb      	ldr	r3, [r7, #12]
 8001fcc:	3301      	adds	r3, #1
 8001fce:	60fb      	str	r3, [r7, #12]
 8001fd0:	79ba      	ldrb	r2, [r7, #6]
 8001fd2:	68fb      	ldr	r3, [r7, #12]
 8001fd4:	429a      	cmp	r2, r3
 8001fd6:	dceb      	bgt.n	8001fb0 <BMP280_Read+0x28>
  }

  GPIO_WriteBit(GPIOA, GPIO_Pin_3, 1);
 8001fd8:	2201      	movs	r2, #1
 8001fda:	2108      	movs	r1, #8
 8001fdc:	4803      	ldr	r0, [pc, #12]	; (8001fec <BMP280_Read+0x64>)
 8001fde:	f7ff fb2f 	bl	8001640 <GPIO_WriteBit>
}
 8001fe2:	bf00      	nop
 8001fe4:	3710      	adds	r7, #16
 8001fe6:	46bd      	mov	sp, r7
 8001fe8:	bd80      	pop	{r7, pc}
 8001fea:	bf00      	nop
 8001fec:	40010800 	.word	0x40010800

08001ff0 <BMP280_Init>:

void BMP280_Init(void)
{
 8001ff0:	b580      	push	{r7, lr}
 8001ff2:	af00      	add	r7, sp, #0
  BMP280_Write(0x75, 0x90);
 8001ff4:	2190      	movs	r1, #144	; 0x90
 8001ff6:	2075      	movs	r0, #117	; 0x75
 8001ff8:	f7ff ffa6 	bl	8001f48 <BMP280_Write>
  BMP280_Write(0x74, 0x57);
 8001ffc:	2157      	movs	r1, #87	; 0x57
 8001ffe:	2074      	movs	r0, #116	; 0x74
 8002000:	f7ff ffa2 	bl	8001f48 <BMP280_Write>

  BMP280_get_calib_values();
 8002004:	f000 f802 	bl	800200c <BMP280_get_calib_values>
}
 8002008:	bf00      	nop
 800200a:	bd80      	pop	{r7, pc}

0800200c <BMP280_get_calib_values>:

void BMP280_get_calib_values(void)
{
 800200c:	b580      	push	{r7, lr}
 800200e:	b088      	sub	sp, #32
 8002010:	af00      	add	r7, sp, #0
  uint8_t rx_buff[24], starting_address=0x88;
 8002012:	2388      	movs	r3, #136	; 0x88
 8002014:	77fb      	strb	r3, [r7, #31]

  BMP280_Read(starting_address, rx_buff, 24);
 8002016:	1d39      	adds	r1, r7, #4
 8002018:	7ffb      	ldrb	r3, [r7, #31]
 800201a:	2218      	movs	r2, #24
 800201c:	4618      	mov	r0, r3
 800201e:	f7ff ffb3 	bl	8001f88 <BMP280_Read>

  dig_T1=(rx_buff[0])+(rx_buff[1]<<8);
 8002022:	793b      	ldrb	r3, [r7, #4]
 8002024:	b29a      	uxth	r2, r3
 8002026:	797b      	ldrb	r3, [r7, #5]
 8002028:	b29b      	uxth	r3, r3
 800202a:	021b      	lsls	r3, r3, #8
 800202c:	b29b      	uxth	r3, r3
 800202e:	4413      	add	r3, r2
 8002030:	b29a      	uxth	r2, r3
 8002032:	4b3f      	ldr	r3, [pc, #252]	; (8002130 <BMP280_get_calib_values+0x124>)
 8002034:	801a      	strh	r2, [r3, #0]
  dig_T2=(rx_buff[2])+(rx_buff[3]<<8);
 8002036:	79bb      	ldrb	r3, [r7, #6]
 8002038:	b29a      	uxth	r2, r3
 800203a:	79fb      	ldrb	r3, [r7, #7]
 800203c:	b29b      	uxth	r3, r3
 800203e:	021b      	lsls	r3, r3, #8
 8002040:	b29b      	uxth	r3, r3
 8002042:	4413      	add	r3, r2
 8002044:	b29b      	uxth	r3, r3
 8002046:	b21a      	sxth	r2, r3
 8002048:	4b3a      	ldr	r3, [pc, #232]	; (8002134 <BMP280_get_calib_values+0x128>)
 800204a:	801a      	strh	r2, [r3, #0]
  dig_T3=(rx_buff[4])+(rx_buff[5]<<8);
 800204c:	7a3b      	ldrb	r3, [r7, #8]
 800204e:	b29a      	uxth	r2, r3
 8002050:	7a7b      	ldrb	r3, [r7, #9]
 8002052:	b29b      	uxth	r3, r3
 8002054:	021b      	lsls	r3, r3, #8
 8002056:	b29b      	uxth	r3, r3
 8002058:	4413      	add	r3, r2
 800205a:	b29b      	uxth	r3, r3
 800205c:	b21a      	sxth	r2, r3
 800205e:	4b36      	ldr	r3, [pc, #216]	; (8002138 <BMP280_get_calib_values+0x12c>)
 8002060:	801a      	strh	r2, [r3, #0]
  dig_P1=(rx_buff[6])+(rx_buff[7]<<8);
 8002062:	7abb      	ldrb	r3, [r7, #10]
 8002064:	b29a      	uxth	r2, r3
 8002066:	7afb      	ldrb	r3, [r7, #11]
 8002068:	b29b      	uxth	r3, r3
 800206a:	021b      	lsls	r3, r3, #8
 800206c:	b29b      	uxth	r3, r3
 800206e:	4413      	add	r3, r2
 8002070:	b29a      	uxth	r2, r3
 8002072:	4b32      	ldr	r3, [pc, #200]	; (800213c <BMP280_get_calib_values+0x130>)
 8002074:	801a      	strh	r2, [r3, #0]
  dig_P2=(rx_buff[8])+(rx_buff[9]<<8);
 8002076:	7b3b      	ldrb	r3, [r7, #12]
 8002078:	b29a      	uxth	r2, r3
 800207a:	7b7b      	ldrb	r3, [r7, #13]
 800207c:	b29b      	uxth	r3, r3
 800207e:	021b      	lsls	r3, r3, #8
 8002080:	b29b      	uxth	r3, r3
 8002082:	4413      	add	r3, r2
 8002084:	b29b      	uxth	r3, r3
 8002086:	b21a      	sxth	r2, r3
 8002088:	4b2d      	ldr	r3, [pc, #180]	; (8002140 <BMP280_get_calib_values+0x134>)
 800208a:	801a      	strh	r2, [r3, #0]
  dig_P3=(rx_buff[10])+(rx_buff[11]<<8);
 800208c:	7bbb      	ldrb	r3, [r7, #14]
 800208e:	b29a      	uxth	r2, r3
 8002090:	7bfb      	ldrb	r3, [r7, #15]
 8002092:	b29b      	uxth	r3, r3
 8002094:	021b      	lsls	r3, r3, #8
 8002096:	b29b      	uxth	r3, r3
 8002098:	4413      	add	r3, r2
 800209a:	b29b      	uxth	r3, r3
 800209c:	b21a      	sxth	r2, r3
 800209e:	4b29      	ldr	r3, [pc, #164]	; (8002144 <BMP280_get_calib_values+0x138>)
 80020a0:	801a      	strh	r2, [r3, #0]
  dig_P4=(rx_buff[12])+(rx_buff[13]<<8);
 80020a2:	7c3b      	ldrb	r3, [r7, #16]
 80020a4:	b29a      	uxth	r2, r3
 80020a6:	7c7b      	ldrb	r3, [r7, #17]
 80020a8:	b29b      	uxth	r3, r3
 80020aa:	021b      	lsls	r3, r3, #8
 80020ac:	b29b      	uxth	r3, r3
 80020ae:	4413      	add	r3, r2
 80020b0:	b29b      	uxth	r3, r3
 80020b2:	b21a      	sxth	r2, r3
 80020b4:	4b24      	ldr	r3, [pc, #144]	; (8002148 <BMP280_get_calib_values+0x13c>)
 80020b6:	801a      	strh	r2, [r3, #0]
  dig_P5=(rx_buff[14])+(rx_buff[15]<<8);
 80020b8:	7cbb      	ldrb	r3, [r7, #18]
 80020ba:	b29a      	uxth	r2, r3
 80020bc:	7cfb      	ldrb	r3, [r7, #19]
 80020be:	b29b      	uxth	r3, r3
 80020c0:	021b      	lsls	r3, r3, #8
 80020c2:	b29b      	uxth	r3, r3
 80020c4:	4413      	add	r3, r2
 80020c6:	b29b      	uxth	r3, r3
 80020c8:	b21a      	sxth	r2, r3
 80020ca:	4b20      	ldr	r3, [pc, #128]	; (800214c <BMP280_get_calib_values+0x140>)
 80020cc:	801a      	strh	r2, [r3, #0]
  dig_P6=(rx_buff[16])+(rx_buff[17]<<8);
 80020ce:	7d3b      	ldrb	r3, [r7, #20]
 80020d0:	b29a      	uxth	r2, r3
 80020d2:	7d7b      	ldrb	r3, [r7, #21]
 80020d4:	b29b      	uxth	r3, r3
 80020d6:	021b      	lsls	r3, r3, #8
 80020d8:	b29b      	uxth	r3, r3
 80020da:	4413      	add	r3, r2
 80020dc:	b29b      	uxth	r3, r3
 80020de:	b21a      	sxth	r2, r3
 80020e0:	4b1b      	ldr	r3, [pc, #108]	; (8002150 <BMP280_get_calib_values+0x144>)
 80020e2:	801a      	strh	r2, [r3, #0]
  dig_P7=(rx_buff[18])+(rx_buff[19]<<8);
 80020e4:	7dbb      	ldrb	r3, [r7, #22]
 80020e6:	b29a      	uxth	r2, r3
 80020e8:	7dfb      	ldrb	r3, [r7, #23]
 80020ea:	b29b      	uxth	r3, r3
 80020ec:	021b      	lsls	r3, r3, #8
 80020ee:	b29b      	uxth	r3, r3
 80020f0:	4413      	add	r3, r2
 80020f2:	b29b      	uxth	r3, r3
 80020f4:	b21a      	sxth	r2, r3
 80020f6:	4b17      	ldr	r3, [pc, #92]	; (8002154 <BMP280_get_calib_values+0x148>)
 80020f8:	801a      	strh	r2, [r3, #0]
  dig_P8=(rx_buff[20])+(rx_buff[21]<<8);
 80020fa:	7e3b      	ldrb	r3, [r7, #24]
 80020fc:	b29a      	uxth	r2, r3
 80020fe:	7e7b      	ldrb	r3, [r7, #25]
 8002100:	b29b      	uxth	r3, r3
 8002102:	021b      	lsls	r3, r3, #8
 8002104:	b29b      	uxth	r3, r3
 8002106:	4413      	add	r3, r2
 8002108:	b29b      	uxth	r3, r3
 800210a:	b21a      	sxth	r2, r3
 800210c:	4b12      	ldr	r3, [pc, #72]	; (8002158 <BMP280_get_calib_values+0x14c>)
 800210e:	801a      	strh	r2, [r3, #0]
  dig_P9=(rx_buff[22])+(rx_buff[23]<<8);
 8002110:	7ebb      	ldrb	r3, [r7, #26]
 8002112:	b29a      	uxth	r2, r3
 8002114:	7efb      	ldrb	r3, [r7, #27]
 8002116:	b29b      	uxth	r3, r3
 8002118:	021b      	lsls	r3, r3, #8
 800211a:	b29b      	uxth	r3, r3
 800211c:	4413      	add	r3, r2
 800211e:	b29b      	uxth	r3, r3
 8002120:	b21a      	sxth	r2, r3
 8002122:	4b0e      	ldr	r3, [pc, #56]	; (800215c <BMP280_get_calib_values+0x150>)
 8002124:	801a      	strh	r2, [r3, #0]
}
 8002126:	bf00      	nop
 8002128:	3720      	adds	r7, #32
 800212a:	46bd      	mov	sp, r7
 800212c:	bd80      	pop	{r7, pc}
 800212e:	bf00      	nop
 8002130:	200006e6 	.word	0x200006e6
 8002134:	200006e8 	.word	0x200006e8
 8002138:	20000710 	.word	0x20000710
 800213c:	20000708 	.word	0x20000708
 8002140:	200006f8 	.word	0x200006f8
 8002144:	2000070a 	.word	0x2000070a
 8002148:	200006fa 	.word	0x200006fa
 800214c:	20000700 	.word	0x20000700
 8002150:	20000712 	.word	0x20000712
 8002154:	200006e4 	.word	0x200006e4
 8002158:	2000070c 	.word	0x2000070c
 800215c:	2000070e 	.word	0x2000070e

08002160 <BMP280_calc_values>:

void BMP280_calc_values(void)
{
 8002160:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8002164:	b090      	sub	sp, #64	; 0x40
 8002166:	af00      	add	r7, sp, #0
  uint8_t status, rx_buff[6], starting_address=0xF7;
 8002168:	23f7      	movs	r3, #247	; 0xf7
 800216a:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b

  do
  {
    BMP280_Read(0xF3, &status, 1);
 800216e:	f107 031f 	add.w	r3, r7, #31
 8002172:	2201      	movs	r2, #1
 8002174:	4619      	mov	r1, r3
 8002176:	20f3      	movs	r0, #243	; 0xf3
 8002178:	f7ff ff06 	bl	8001f88 <BMP280_Read>
  } while(((status&0b00001000)==8)||((status&0b00000001)==1));
 800217c:	7ffb      	ldrb	r3, [r7, #31]
 800217e:	f003 0308 	and.w	r3, r3, #8
 8002182:	2b00      	cmp	r3, #0
 8002184:	d1f3      	bne.n	800216e <BMP280_calc_values+0xe>
 8002186:	7ffb      	ldrb	r3, [r7, #31]
 8002188:	f003 0301 	and.w	r3, r3, #1
 800218c:	2b00      	cmp	r3, #0
 800218e:	d1ee      	bne.n	800216e <BMP280_calc_values+0xe>

  GPIO_WriteBit(GPIOA, GPIO_Pin_3, 0);
 8002190:	2200      	movs	r2, #0
 8002192:	2108      	movs	r1, #8
 8002194:	4805      	ldr	r0, [pc, #20]	; (80021ac <BMP280_calc_values+0x4c>)
 8002196:	f7ff fa53 	bl	8001640 <GPIO_WriteBit>

  BMP280_Transfer(starting_address);
 800219a:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 800219e:	4618      	mov	r0, r3
 80021a0:	f7ff feac 	bl	8001efc <BMP280_Transfer>

  for(int i = 0; i < 6; i++)
 80021a4:	2300      	movs	r3, #0
 80021a6:	63fb      	str	r3, [r7, #60]	; 0x3c
 80021a8:	e010      	b.n	80021cc <BMP280_calc_values+0x6c>
 80021aa:	bf00      	nop
 80021ac:	40010800 	.word	0x40010800
  {
    rx_buff[i] = BMP280_Transfer(0x00);
 80021b0:	2000      	movs	r0, #0
 80021b2:	f7ff fea3 	bl	8001efc <BMP280_Transfer>
 80021b6:	4603      	mov	r3, r0
 80021b8:	4619      	mov	r1, r3
 80021ba:	f107 0218 	add.w	r2, r7, #24
 80021be:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80021c0:	4413      	add	r3, r2
 80021c2:	460a      	mov	r2, r1
 80021c4:	701a      	strb	r2, [r3, #0]
  for(int i = 0; i < 6; i++)
 80021c6:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80021c8:	3301      	adds	r3, #1
 80021ca:	63fb      	str	r3, [r7, #60]	; 0x3c
 80021cc:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80021ce:	2b05      	cmp	r3, #5
 80021d0:	ddee      	ble.n	80021b0 <BMP280_calc_values+0x50>
  }

  GPIO_WriteBit(GPIOA, GPIO_Pin_3, 1);
 80021d2:	2201      	movs	r2, #1
 80021d4:	2108      	movs	r1, #8
 80021d6:	48cb      	ldr	r0, [pc, #812]	; (8002504 <BMP280_calc_values+0x3a4>)
 80021d8:	f7ff fa32 	bl	8001640 <GPIO_WriteBit>

  volatile uint32_t temp[3];
  temp[2]=rx_buff[3];
 80021dc:	7efb      	ldrb	r3, [r7, #27]
 80021de:	617b      	str	r3, [r7, #20]
  temp[1]=rx_buff[4];
 80021e0:	7f3b      	ldrb	r3, [r7, #28]
 80021e2:	613b      	str	r3, [r7, #16]
  temp[0]=rx_buff[5];
 80021e4:	7f7b      	ldrb	r3, [r7, #29]
 80021e6:	60fb      	str	r3, [r7, #12]
  temperature_raw=(temp[2]<<12)+(temp[1]<<4)+(temp[0]>>4);
 80021e8:	697b      	ldr	r3, [r7, #20]
 80021ea:	031a      	lsls	r2, r3, #12
 80021ec:	693b      	ldr	r3, [r7, #16]
 80021ee:	011b      	lsls	r3, r3, #4
 80021f0:	441a      	add	r2, r3
 80021f2:	68fb      	ldr	r3, [r7, #12]
 80021f4:	091b      	lsrs	r3, r3, #4
 80021f6:	4413      	add	r3, r2
 80021f8:	461a      	mov	r2, r3
 80021fa:	4bc3      	ldr	r3, [pc, #780]	; (8002508 <BMP280_calc_values+0x3a8>)
 80021fc:	601a      	str	r2, [r3, #0]

  temp[2]=rx_buff[0];
 80021fe:	7e3b      	ldrb	r3, [r7, #24]
 8002200:	617b      	str	r3, [r7, #20]
  temp[1]=rx_buff[1];
 8002202:	7e7b      	ldrb	r3, [r7, #25]
 8002204:	613b      	str	r3, [r7, #16]
  temp[0]=rx_buff[2];
 8002206:	7ebb      	ldrb	r3, [r7, #26]
 8002208:	60fb      	str	r3, [r7, #12]
  pressure_raw=(temp[2]<<12)+(temp[1]<<4)+(temp[0]>>4);
 800220a:	697b      	ldr	r3, [r7, #20]
 800220c:	031a      	lsls	r2, r3, #12
 800220e:	693b      	ldr	r3, [r7, #16]
 8002210:	011b      	lsls	r3, r3, #4
 8002212:	441a      	add	r2, r3
 8002214:	68fb      	ldr	r3, [r7, #12]
 8002216:	091b      	lsrs	r3, r3, #4
 8002218:	4413      	add	r3, r2
 800221a:	461a      	mov	r2, r3
 800221c:	4bbb      	ldr	r3, [pc, #748]	; (800250c <BMP280_calc_values+0x3ac>)
 800221e:	601a      	str	r2, [r3, #0]

  double var1, var2;
  var1=(((double)temperature_raw)/16384.0-((double)dig_T1)/1024.0)*((double)dig_T2);
 8002220:	4bb9      	ldr	r3, [pc, #740]	; (8002508 <BMP280_calc_values+0x3a8>)
 8002222:	681b      	ldr	r3, [r3, #0]
 8002224:	4618      	mov	r0, r3
 8002226:	f7fe f8ed 	bl	8000404 <__aeabi_i2d>
 800222a:	f04f 0200 	mov.w	r2, #0
 800222e:	4bb8      	ldr	r3, [pc, #736]	; (8002510 <BMP280_calc_values+0x3b0>)
 8002230:	f7fe fa78 	bl	8000724 <__aeabi_ddiv>
 8002234:	4603      	mov	r3, r0
 8002236:	460c      	mov	r4, r1
 8002238:	4625      	mov	r5, r4
 800223a:	461c      	mov	r4, r3
 800223c:	4bb5      	ldr	r3, [pc, #724]	; (8002514 <BMP280_calc_values+0x3b4>)
 800223e:	881b      	ldrh	r3, [r3, #0]
 8002240:	4618      	mov	r0, r3
 8002242:	f7fe f8cf 	bl	80003e4 <__aeabi_ui2d>
 8002246:	f04f 0200 	mov.w	r2, #0
 800224a:	4bb3      	ldr	r3, [pc, #716]	; (8002518 <BMP280_calc_values+0x3b8>)
 800224c:	f7fe fa6a 	bl	8000724 <__aeabi_ddiv>
 8002250:	4602      	mov	r2, r0
 8002252:	460b      	mov	r3, r1
 8002254:	4620      	mov	r0, r4
 8002256:	4629      	mov	r1, r5
 8002258:	f7fd ff86 	bl	8000168 <__aeabi_dsub>
 800225c:	4603      	mov	r3, r0
 800225e:	460c      	mov	r4, r1
 8002260:	4625      	mov	r5, r4
 8002262:	461c      	mov	r4, r3
 8002264:	4bad      	ldr	r3, [pc, #692]	; (800251c <BMP280_calc_values+0x3bc>)
 8002266:	f9b3 3000 	ldrsh.w	r3, [r3]
 800226a:	4618      	mov	r0, r3
 800226c:	f7fe f8ca 	bl	8000404 <__aeabi_i2d>
 8002270:	4602      	mov	r2, r0
 8002272:	460b      	mov	r3, r1
 8002274:	4620      	mov	r0, r4
 8002276:	4629      	mov	r1, r5
 8002278:	f7fe f92a 	bl	80004d0 <__aeabi_dmul>
 800227c:	4603      	mov	r3, r0
 800227e:	460c      	mov	r4, r1
 8002280:	e9c7 340c 	strd	r3, r4, [r7, #48]	; 0x30
  var2=((((double)temperature_raw)/131072.0-((double)dig_T1)/8192.0)*(((double)temperature_raw)/131072.0-((double)dig_T1)/8192.0))*((double)dig_T3);
 8002284:	4ba0      	ldr	r3, [pc, #640]	; (8002508 <BMP280_calc_values+0x3a8>)
 8002286:	681b      	ldr	r3, [r3, #0]
 8002288:	4618      	mov	r0, r3
 800228a:	f7fe f8bb 	bl	8000404 <__aeabi_i2d>
 800228e:	f04f 0200 	mov.w	r2, #0
 8002292:	f04f 4382 	mov.w	r3, #1090519040	; 0x41000000
 8002296:	f7fe fa45 	bl	8000724 <__aeabi_ddiv>
 800229a:	4603      	mov	r3, r0
 800229c:	460c      	mov	r4, r1
 800229e:	4625      	mov	r5, r4
 80022a0:	461c      	mov	r4, r3
 80022a2:	4b9c      	ldr	r3, [pc, #624]	; (8002514 <BMP280_calc_values+0x3b4>)
 80022a4:	881b      	ldrh	r3, [r3, #0]
 80022a6:	4618      	mov	r0, r3
 80022a8:	f7fe f89c 	bl	80003e4 <__aeabi_ui2d>
 80022ac:	f04f 0200 	mov.w	r2, #0
 80022b0:	4b9b      	ldr	r3, [pc, #620]	; (8002520 <BMP280_calc_values+0x3c0>)
 80022b2:	f7fe fa37 	bl	8000724 <__aeabi_ddiv>
 80022b6:	4602      	mov	r2, r0
 80022b8:	460b      	mov	r3, r1
 80022ba:	4620      	mov	r0, r4
 80022bc:	4629      	mov	r1, r5
 80022be:	f7fd ff53 	bl	8000168 <__aeabi_dsub>
 80022c2:	4603      	mov	r3, r0
 80022c4:	460c      	mov	r4, r1
 80022c6:	4625      	mov	r5, r4
 80022c8:	461c      	mov	r4, r3
 80022ca:	4b8f      	ldr	r3, [pc, #572]	; (8002508 <BMP280_calc_values+0x3a8>)
 80022cc:	681b      	ldr	r3, [r3, #0]
 80022ce:	4618      	mov	r0, r3
 80022d0:	f7fe f898 	bl	8000404 <__aeabi_i2d>
 80022d4:	f04f 0200 	mov.w	r2, #0
 80022d8:	f04f 4382 	mov.w	r3, #1090519040	; 0x41000000
 80022dc:	f7fe fa22 	bl	8000724 <__aeabi_ddiv>
 80022e0:	4602      	mov	r2, r0
 80022e2:	460b      	mov	r3, r1
 80022e4:	4690      	mov	r8, r2
 80022e6:	4699      	mov	r9, r3
 80022e8:	4b8a      	ldr	r3, [pc, #552]	; (8002514 <BMP280_calc_values+0x3b4>)
 80022ea:	881b      	ldrh	r3, [r3, #0]
 80022ec:	4618      	mov	r0, r3
 80022ee:	f7fe f879 	bl	80003e4 <__aeabi_ui2d>
 80022f2:	f04f 0200 	mov.w	r2, #0
 80022f6:	4b8a      	ldr	r3, [pc, #552]	; (8002520 <BMP280_calc_values+0x3c0>)
 80022f8:	f7fe fa14 	bl	8000724 <__aeabi_ddiv>
 80022fc:	4602      	mov	r2, r0
 80022fe:	460b      	mov	r3, r1
 8002300:	4640      	mov	r0, r8
 8002302:	4649      	mov	r1, r9
 8002304:	f7fd ff30 	bl	8000168 <__aeabi_dsub>
 8002308:	4602      	mov	r2, r0
 800230a:	460b      	mov	r3, r1
 800230c:	4620      	mov	r0, r4
 800230e:	4629      	mov	r1, r5
 8002310:	f7fe f8de 	bl	80004d0 <__aeabi_dmul>
 8002314:	4603      	mov	r3, r0
 8002316:	460c      	mov	r4, r1
 8002318:	4625      	mov	r5, r4
 800231a:	461c      	mov	r4, r3
 800231c:	4b81      	ldr	r3, [pc, #516]	; (8002524 <BMP280_calc_values+0x3c4>)
 800231e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8002322:	4618      	mov	r0, r3
 8002324:	f7fe f86e 	bl	8000404 <__aeabi_i2d>
 8002328:	4602      	mov	r2, r0
 800232a:	460b      	mov	r3, r1
 800232c:	4620      	mov	r0, r4
 800232e:	4629      	mov	r1, r5
 8002330:	f7fe f8ce 	bl	80004d0 <__aeabi_dmul>
 8002334:	4603      	mov	r3, r0
 8002336:	460c      	mov	r4, r1
 8002338:	e9c7 340a 	strd	r3, r4, [r7, #40]	; 0x28
  double t_fine = (int32_t)(var1+var2);
 800233c:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8002340:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	; 0x30
 8002344:	f7fd ff12 	bl	800016c <__adddf3>
 8002348:	4603      	mov	r3, r0
 800234a:	460c      	mov	r4, r1
 800234c:	4618      	mov	r0, r3
 800234e:	4621      	mov	r1, r4
 8002350:	f7fe fb6e 	bl	8000a30 <__aeabi_d2iz>
 8002354:	4603      	mov	r3, r0
 8002356:	4618      	mov	r0, r3
 8002358:	f7fe f854 	bl	8000404 <__aeabi_i2d>
 800235c:	4603      	mov	r3, r0
 800235e:	460c      	mov	r4, r1
 8002360:	e9c7 3408 	strd	r3, r4, [r7, #32]
  volatile float T = (var1+var2)/5120.0;
 8002364:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8002368:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	; 0x30
 800236c:	f7fd fefe 	bl	800016c <__adddf3>
 8002370:	4603      	mov	r3, r0
 8002372:	460c      	mov	r4, r1
 8002374:	4618      	mov	r0, r3
 8002376:	4621      	mov	r1, r4
 8002378:	f04f 0200 	mov.w	r2, #0
 800237c:	4b6a      	ldr	r3, [pc, #424]	; (8002528 <BMP280_calc_values+0x3c8>)
 800237e:	f7fe f9d1 	bl	8000724 <__aeabi_ddiv>
 8002382:	4603      	mov	r3, r0
 8002384:	460c      	mov	r4, r1
 8002386:	4618      	mov	r0, r3
 8002388:	4621      	mov	r1, r4
 800238a:	f7fe fb79 	bl	8000a80 <__aeabi_d2f>
 800238e:	4603      	mov	r3, r0
 8002390:	60bb      	str	r3, [r7, #8]

  var1=((double)t_fine/2.0)-64000.0;
 8002392:	f04f 0200 	mov.w	r2, #0
 8002396:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800239a:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 800239e:	f7fe f9c1 	bl	8000724 <__aeabi_ddiv>
 80023a2:	4603      	mov	r3, r0
 80023a4:	460c      	mov	r4, r1
 80023a6:	4618      	mov	r0, r3
 80023a8:	4621      	mov	r1, r4
 80023aa:	f04f 0200 	mov.w	r2, #0
 80023ae:	4b5f      	ldr	r3, [pc, #380]	; (800252c <BMP280_calc_values+0x3cc>)
 80023b0:	f7fd feda 	bl	8000168 <__aeabi_dsub>
 80023b4:	4603      	mov	r3, r0
 80023b6:	460c      	mov	r4, r1
 80023b8:	e9c7 340c 	strd	r3, r4, [r7, #48]	; 0x30
  var2=var1*var1*((double)dig_P6)/32768.0;
 80023bc:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	; 0x30
 80023c0:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	; 0x30
 80023c4:	f7fe f884 	bl	80004d0 <__aeabi_dmul>
 80023c8:	4603      	mov	r3, r0
 80023ca:	460c      	mov	r4, r1
 80023cc:	4625      	mov	r5, r4
 80023ce:	461c      	mov	r4, r3
 80023d0:	4b57      	ldr	r3, [pc, #348]	; (8002530 <BMP280_calc_values+0x3d0>)
 80023d2:	f9b3 3000 	ldrsh.w	r3, [r3]
 80023d6:	4618      	mov	r0, r3
 80023d8:	f7fe f814 	bl	8000404 <__aeabi_i2d>
 80023dc:	4602      	mov	r2, r0
 80023de:	460b      	mov	r3, r1
 80023e0:	4620      	mov	r0, r4
 80023e2:	4629      	mov	r1, r5
 80023e4:	f7fe f874 	bl	80004d0 <__aeabi_dmul>
 80023e8:	4603      	mov	r3, r0
 80023ea:	460c      	mov	r4, r1
 80023ec:	4618      	mov	r0, r3
 80023ee:	4621      	mov	r1, r4
 80023f0:	f04f 0200 	mov.w	r2, #0
 80023f4:	4b4f      	ldr	r3, [pc, #316]	; (8002534 <BMP280_calc_values+0x3d4>)
 80023f6:	f7fe f995 	bl	8000724 <__aeabi_ddiv>
 80023fa:	4603      	mov	r3, r0
 80023fc:	460c      	mov	r4, r1
 80023fe:	e9c7 340a 	strd	r3, r4, [r7, #40]	; 0x28
  var2=var2+var1*((double)dig_P5)*2.0;
 8002402:	4b4d      	ldr	r3, [pc, #308]	; (8002538 <BMP280_calc_values+0x3d8>)
 8002404:	f9b3 3000 	ldrsh.w	r3, [r3]
 8002408:	4618      	mov	r0, r3
 800240a:	f7fd fffb 	bl	8000404 <__aeabi_i2d>
 800240e:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	; 0x30
 8002412:	f7fe f85d 	bl	80004d0 <__aeabi_dmul>
 8002416:	4603      	mov	r3, r0
 8002418:	460c      	mov	r4, r1
 800241a:	4618      	mov	r0, r3
 800241c:	4621      	mov	r1, r4
 800241e:	4602      	mov	r2, r0
 8002420:	460b      	mov	r3, r1
 8002422:	f7fd fea3 	bl	800016c <__adddf3>
 8002426:	4603      	mov	r3, r0
 8002428:	460c      	mov	r4, r1
 800242a:	461a      	mov	r2, r3
 800242c:	4623      	mov	r3, r4
 800242e:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 8002432:	f7fd fe9b 	bl	800016c <__adddf3>
 8002436:	4603      	mov	r3, r0
 8002438:	460c      	mov	r4, r1
 800243a:	e9c7 340a 	strd	r3, r4, [r7, #40]	; 0x28
  var2=(var2/4.0)+(((double)dig_P4)*65536.0);
 800243e:	f04f 0200 	mov.w	r2, #0
 8002442:	4b3e      	ldr	r3, [pc, #248]	; (800253c <BMP280_calc_values+0x3dc>)
 8002444:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 8002448:	f7fe f96c 	bl	8000724 <__aeabi_ddiv>
 800244c:	4603      	mov	r3, r0
 800244e:	460c      	mov	r4, r1
 8002450:	4625      	mov	r5, r4
 8002452:	461c      	mov	r4, r3
 8002454:	4b3a      	ldr	r3, [pc, #232]	; (8002540 <BMP280_calc_values+0x3e0>)
 8002456:	f9b3 3000 	ldrsh.w	r3, [r3]
 800245a:	4618      	mov	r0, r3
 800245c:	f7fd ffd2 	bl	8000404 <__aeabi_i2d>
 8002460:	f04f 0200 	mov.w	r2, #0
 8002464:	4b37      	ldr	r3, [pc, #220]	; (8002544 <BMP280_calc_values+0x3e4>)
 8002466:	f7fe f833 	bl	80004d0 <__aeabi_dmul>
 800246a:	4602      	mov	r2, r0
 800246c:	460b      	mov	r3, r1
 800246e:	4620      	mov	r0, r4
 8002470:	4629      	mov	r1, r5
 8002472:	f7fd fe7b 	bl	800016c <__adddf3>
 8002476:	4603      	mov	r3, r0
 8002478:	460c      	mov	r4, r1
 800247a:	e9c7 340a 	strd	r3, r4, [r7, #40]	; 0x28
  var1=(((double)dig_P3)*var1*var1/524288.0+((double)dig_P2)*var1)/524288.0;
 800247e:	4b32      	ldr	r3, [pc, #200]	; (8002548 <BMP280_calc_values+0x3e8>)
 8002480:	f9b3 3000 	ldrsh.w	r3, [r3]
 8002484:	4618      	mov	r0, r3
 8002486:	f7fd ffbd 	bl	8000404 <__aeabi_i2d>
 800248a:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	; 0x30
 800248e:	f7fe f81f 	bl	80004d0 <__aeabi_dmul>
 8002492:	4603      	mov	r3, r0
 8002494:	460c      	mov	r4, r1
 8002496:	4618      	mov	r0, r3
 8002498:	4621      	mov	r1, r4
 800249a:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	; 0x30
 800249e:	f7fe f817 	bl	80004d0 <__aeabi_dmul>
 80024a2:	4603      	mov	r3, r0
 80024a4:	460c      	mov	r4, r1
 80024a6:	4618      	mov	r0, r3
 80024a8:	4621      	mov	r1, r4
 80024aa:	f04f 0200 	mov.w	r2, #0
 80024ae:	4b27      	ldr	r3, [pc, #156]	; (800254c <BMP280_calc_values+0x3ec>)
 80024b0:	f7fe f938 	bl	8000724 <__aeabi_ddiv>
 80024b4:	4603      	mov	r3, r0
 80024b6:	460c      	mov	r4, r1
 80024b8:	4625      	mov	r5, r4
 80024ba:	461c      	mov	r4, r3
 80024bc:	4b24      	ldr	r3, [pc, #144]	; (8002550 <BMP280_calc_values+0x3f0>)
 80024be:	f9b3 3000 	ldrsh.w	r3, [r3]
 80024c2:	4618      	mov	r0, r3
 80024c4:	f7fd ff9e 	bl	8000404 <__aeabi_i2d>
 80024c8:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	; 0x30
 80024cc:	f7fe f800 	bl	80004d0 <__aeabi_dmul>
 80024d0:	4602      	mov	r2, r0
 80024d2:	460b      	mov	r3, r1
 80024d4:	4620      	mov	r0, r4
 80024d6:	4629      	mov	r1, r5
 80024d8:	f7fd fe48 	bl	800016c <__adddf3>
 80024dc:	4603      	mov	r3, r0
 80024de:	460c      	mov	r4, r1
 80024e0:	4618      	mov	r0, r3
 80024e2:	4621      	mov	r1, r4
 80024e4:	f04f 0200 	mov.w	r2, #0
 80024e8:	4b18      	ldr	r3, [pc, #96]	; (800254c <BMP280_calc_values+0x3ec>)
 80024ea:	f7fe f91b 	bl	8000724 <__aeabi_ddiv>
 80024ee:	4603      	mov	r3, r0
 80024f0:	460c      	mov	r4, r1
 80024f2:	e9c7 340c 	strd	r3, r4, [r7, #48]	; 0x30
  var1=(1.0+var1/32768.0)*((double)dig_P1);
 80024f6:	f04f 0200 	mov.w	r2, #0
 80024fa:	4b0e      	ldr	r3, [pc, #56]	; (8002534 <BMP280_calc_values+0x3d4>)
 80024fc:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	; 0x30
 8002500:	e028      	b.n	8002554 <BMP280_calc_values+0x3f4>
 8002502:	bf00      	nop
 8002504:	40010800 	.word	0x40010800
 8002508:	200006f0 	.word	0x200006f0
 800250c:	200006f4 	.word	0x200006f4
 8002510:	40d00000 	.word	0x40d00000
 8002514:	200006e6 	.word	0x200006e6
 8002518:	40900000 	.word	0x40900000
 800251c:	200006e8 	.word	0x200006e8
 8002520:	40c00000 	.word	0x40c00000
 8002524:	20000710 	.word	0x20000710
 8002528:	40b40000 	.word	0x40b40000
 800252c:	40ef4000 	.word	0x40ef4000
 8002530:	20000712 	.word	0x20000712
 8002534:	40e00000 	.word	0x40e00000
 8002538:	20000700 	.word	0x20000700
 800253c:	40100000 	.word	0x40100000
 8002540:	200006fa 	.word	0x200006fa
 8002544:	40f00000 	.word	0x40f00000
 8002548:	2000070a 	.word	0x2000070a
 800254c:	41200000 	.word	0x41200000
 8002550:	200006f8 	.word	0x200006f8
 8002554:	f7fe f8e6 	bl	8000724 <__aeabi_ddiv>
 8002558:	4603      	mov	r3, r0
 800255a:	460c      	mov	r4, r1
 800255c:	4618      	mov	r0, r3
 800255e:	4621      	mov	r1, r4
 8002560:	f04f 0200 	mov.w	r2, #0
 8002564:	4b72      	ldr	r3, [pc, #456]	; (8002730 <BMP280_calc_values+0x5d0>)
 8002566:	f7fd fe01 	bl	800016c <__adddf3>
 800256a:	4603      	mov	r3, r0
 800256c:	460c      	mov	r4, r1
 800256e:	4625      	mov	r5, r4
 8002570:	461c      	mov	r4, r3
 8002572:	4b70      	ldr	r3, [pc, #448]	; (8002734 <BMP280_calc_values+0x5d4>)
 8002574:	881b      	ldrh	r3, [r3, #0]
 8002576:	4618      	mov	r0, r3
 8002578:	f7fd ff34 	bl	80003e4 <__aeabi_ui2d>
 800257c:	4602      	mov	r2, r0
 800257e:	460b      	mov	r3, r1
 8002580:	4620      	mov	r0, r4
 8002582:	4629      	mov	r1, r5
 8002584:	f7fd ffa4 	bl	80004d0 <__aeabi_dmul>
 8002588:	4603      	mov	r3, r0
 800258a:	460c      	mov	r4, r1
 800258c:	e9c7 340c 	strd	r3, r4, [r7, #48]	; 0x30

  volatile double p=1048576.0-(double)pressure_raw;
 8002590:	4b69      	ldr	r3, [pc, #420]	; (8002738 <BMP280_calc_values+0x5d8>)
 8002592:	681b      	ldr	r3, [r3, #0]
 8002594:	4618      	mov	r0, r3
 8002596:	f7fd ff35 	bl	8000404 <__aeabi_i2d>
 800259a:	4603      	mov	r3, r0
 800259c:	460c      	mov	r4, r1
 800259e:	461a      	mov	r2, r3
 80025a0:	4623      	mov	r3, r4
 80025a2:	f04f 0000 	mov.w	r0, #0
 80025a6:	4965      	ldr	r1, [pc, #404]	; (800273c <BMP280_calc_values+0x5dc>)
 80025a8:	f7fd fdde 	bl	8000168 <__aeabi_dsub>
 80025ac:	4603      	mov	r3, r0
 80025ae:	460c      	mov	r4, r1
 80025b0:	e887 0018 	stmia.w	r7, {r3, r4}
  p=(p-(var2/4096.0))*6250.0/var1;
 80025b4:	e9d7 4500 	ldrd	r4, r5, [r7]
 80025b8:	f04f 0200 	mov.w	r2, #0
 80025bc:	4b60      	ldr	r3, [pc, #384]	; (8002740 <BMP280_calc_values+0x5e0>)
 80025be:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 80025c2:	f7fe f8af 	bl	8000724 <__aeabi_ddiv>
 80025c6:	4602      	mov	r2, r0
 80025c8:	460b      	mov	r3, r1
 80025ca:	4620      	mov	r0, r4
 80025cc:	4629      	mov	r1, r5
 80025ce:	f7fd fdcb 	bl	8000168 <__aeabi_dsub>
 80025d2:	4603      	mov	r3, r0
 80025d4:	460c      	mov	r4, r1
 80025d6:	4618      	mov	r0, r3
 80025d8:	4621      	mov	r1, r4
 80025da:	a353      	add	r3, pc, #332	; (adr r3, 8002728 <BMP280_calc_values+0x5c8>)
 80025dc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80025e0:	f7fd ff76 	bl	80004d0 <__aeabi_dmul>
 80025e4:	4603      	mov	r3, r0
 80025e6:	460c      	mov	r4, r1
 80025e8:	4618      	mov	r0, r3
 80025ea:	4621      	mov	r1, r4
 80025ec:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	; 0x30
 80025f0:	f7fe f898 	bl	8000724 <__aeabi_ddiv>
 80025f4:	4603      	mov	r3, r0
 80025f6:	460c      	mov	r4, r1
 80025f8:	e887 0018 	stmia.w	r7, {r3, r4}
  var1=((double)dig_P9)*p*p/2147483648.0;
 80025fc:	4b51      	ldr	r3, [pc, #324]	; (8002744 <BMP280_calc_values+0x5e4>)
 80025fe:	f9b3 3000 	ldrsh.w	r3, [r3]
 8002602:	4618      	mov	r0, r3
 8002604:	f7fd fefe 	bl	8000404 <__aeabi_i2d>
 8002608:	e897 0018 	ldmia.w	r7, {r3, r4}
 800260c:	461a      	mov	r2, r3
 800260e:	4623      	mov	r3, r4
 8002610:	f7fd ff5e 	bl	80004d0 <__aeabi_dmul>
 8002614:	4603      	mov	r3, r0
 8002616:	460c      	mov	r4, r1
 8002618:	4618      	mov	r0, r3
 800261a:	4621      	mov	r1, r4
 800261c:	e897 0018 	ldmia.w	r7, {r3, r4}
 8002620:	461a      	mov	r2, r3
 8002622:	4623      	mov	r3, r4
 8002624:	f7fd ff54 	bl	80004d0 <__aeabi_dmul>
 8002628:	4603      	mov	r3, r0
 800262a:	460c      	mov	r4, r1
 800262c:	4618      	mov	r0, r3
 800262e:	4621      	mov	r1, r4
 8002630:	f04f 0200 	mov.w	r2, #0
 8002634:	4b44      	ldr	r3, [pc, #272]	; (8002748 <BMP280_calc_values+0x5e8>)
 8002636:	f7fe f875 	bl	8000724 <__aeabi_ddiv>
 800263a:	4603      	mov	r3, r0
 800263c:	460c      	mov	r4, r1
 800263e:	e9c7 340c 	strd	r3, r4, [r7, #48]	; 0x30
  var2=p*((double)dig_P8)/32768.0;
 8002642:	4b42      	ldr	r3, [pc, #264]	; (800274c <BMP280_calc_values+0x5ec>)
 8002644:	f9b3 3000 	ldrsh.w	r3, [r3]
 8002648:	4618      	mov	r0, r3
 800264a:	f7fd fedb 	bl	8000404 <__aeabi_i2d>
 800264e:	e897 0018 	ldmia.w	r7, {r3, r4}
 8002652:	461a      	mov	r2, r3
 8002654:	4623      	mov	r3, r4
 8002656:	f7fd ff3b 	bl	80004d0 <__aeabi_dmul>
 800265a:	4603      	mov	r3, r0
 800265c:	460c      	mov	r4, r1
 800265e:	4618      	mov	r0, r3
 8002660:	4621      	mov	r1, r4
 8002662:	f04f 0200 	mov.w	r2, #0
 8002666:	4b3a      	ldr	r3, [pc, #232]	; (8002750 <BMP280_calc_values+0x5f0>)
 8002668:	f7fe f85c 	bl	8000724 <__aeabi_ddiv>
 800266c:	4603      	mov	r3, r0
 800266e:	460c      	mov	r4, r1
 8002670:	e9c7 340a 	strd	r3, r4, [r7, #40]	; 0x28
  p=p+(var1+var2+((double)dig_P7))/16.0;
 8002674:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8002678:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	; 0x30
 800267c:	f7fd fd76 	bl	800016c <__adddf3>
 8002680:	4603      	mov	r3, r0
 8002682:	460c      	mov	r4, r1
 8002684:	4625      	mov	r5, r4
 8002686:	461c      	mov	r4, r3
 8002688:	4b32      	ldr	r3, [pc, #200]	; (8002754 <BMP280_calc_values+0x5f4>)
 800268a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800268e:	4618      	mov	r0, r3
 8002690:	f7fd feb8 	bl	8000404 <__aeabi_i2d>
 8002694:	4602      	mov	r2, r0
 8002696:	460b      	mov	r3, r1
 8002698:	4620      	mov	r0, r4
 800269a:	4629      	mov	r1, r5
 800269c:	f7fd fd66 	bl	800016c <__adddf3>
 80026a0:	4603      	mov	r3, r0
 80026a2:	460c      	mov	r4, r1
 80026a4:	4618      	mov	r0, r3
 80026a6:	4621      	mov	r1, r4
 80026a8:	f04f 0200 	mov.w	r2, #0
 80026ac:	4b2a      	ldr	r3, [pc, #168]	; (8002758 <BMP280_calc_values+0x5f8>)
 80026ae:	f7fe f839 	bl	8000724 <__aeabi_ddiv>
 80026b2:	4603      	mov	r3, r0
 80026b4:	460c      	mov	r4, r1
 80026b6:	4618      	mov	r0, r3
 80026b8:	4621      	mov	r1, r4
 80026ba:	e897 0018 	ldmia.w	r7, {r3, r4}
 80026be:	461a      	mov	r2, r3
 80026c0:	4623      	mov	r3, r4
 80026c2:	f7fd fd53 	bl	800016c <__adddf3>
 80026c6:	4603      	mov	r3, r0
 80026c8:	460c      	mov	r4, r1
 80026ca:	e887 0018 	stmia.w	r7, {r3, r4}

  temperature=T;
 80026ce:	68bb      	ldr	r3, [r7, #8]
 80026d0:	4a22      	ldr	r2, [pc, #136]	; (800275c <BMP280_calc_values+0x5fc>)
 80026d2:	6013      	str	r3, [r2, #0]
  pressure=p;
 80026d4:	e897 0018 	ldmia.w	r7, {r3, r4}
 80026d8:	4618      	mov	r0, r3
 80026da:	4621      	mov	r1, r4
 80026dc:	f7fe f9d0 	bl	8000a80 <__aeabi_d2f>
 80026e0:	4602      	mov	r2, r0
 80026e2:	4b1f      	ldr	r3, [pc, #124]	; (8002760 <BMP280_calc_values+0x600>)
 80026e4:	601a      	str	r2, [r3, #0]
  altitude=44330.0f*(1-powf(pressure/101325.0f,1.0f/5.255f));
 80026e6:	4b1e      	ldr	r3, [pc, #120]	; (8002760 <BMP280_calc_values+0x600>)
 80026e8:	681b      	ldr	r3, [r3, #0]
 80026ea:	491e      	ldr	r1, [pc, #120]	; (8002764 <BMP280_calc_values+0x604>)
 80026ec:	4618      	mov	r0, r3
 80026ee:	f7fe fbd9 	bl	8000ea4 <__aeabi_fdiv>
 80026f2:	4603      	mov	r3, r0
 80026f4:	491c      	ldr	r1, [pc, #112]	; (8002768 <BMP280_calc_values+0x608>)
 80026f6:	4618      	mov	r0, r3
 80026f8:	f003 f8e4 	bl	80058c4 <powf>
 80026fc:	4603      	mov	r3, r0
 80026fe:	4619      	mov	r1, r3
 8002700:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
 8002704:	f7fe fa10 	bl	8000b28 <__aeabi_fsub>
 8002708:	4603      	mov	r3, r0
 800270a:	4918      	ldr	r1, [pc, #96]	; (800276c <BMP280_calc_values+0x60c>)
 800270c:	4618      	mov	r0, r3
 800270e:	f7fe fb15 	bl	8000d3c <__aeabi_fmul>
 8002712:	4603      	mov	r3, r0
 8002714:	461a      	mov	r2, r3
 8002716:	4b16      	ldr	r3, [pc, #88]	; (8002770 <BMP280_calc_values+0x610>)
 8002718:	601a      	str	r2, [r3, #0]
  //altitude=((powf(101325.0/pressure, 1/5.257f)-1)*(temperature+273.15f))/0.0065f;
}
 800271a:	bf00      	nop
 800271c:	3740      	adds	r7, #64	; 0x40
 800271e:	46bd      	mov	sp, r7
 8002720:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 8002724:	f3af 8000 	nop.w
 8002728:	00000000 	.word	0x00000000
 800272c:	40b86a00 	.word	0x40b86a00
 8002730:	3ff00000 	.word	0x3ff00000
 8002734:	20000708 	.word	0x20000708
 8002738:	200006f4 	.word	0x200006f4
 800273c:	41300000 	.word	0x41300000
 8002740:	40b00000 	.word	0x40b00000
 8002744:	2000070e 	.word	0x2000070e
 8002748:	41e00000 	.word	0x41e00000
 800274c:	2000070c 	.word	0x2000070c
 8002750:	40e00000 	.word	0x40e00000
 8002754:	200006e4 	.word	0x200006e4
 8002758:	40300000 	.word	0x40300000
 800275c:	200006ec 	.word	0x200006ec
 8002760:	200006fc 	.word	0x200006fc
 8002764:	47c5e680 	.word	0x47c5e680
 8002768:	3e42dcae 	.word	0x3e42dcae
 800276c:	472d2a00 	.word	0x472d2a00
 8002770:	20000704 	.word	0x20000704

08002774 <Conf_SPI1_Master>:

void Conf_SPI1_Master(void)
{
 8002774:	b580      	push	{r7, lr}
 8002776:	b086      	sub	sp, #24
 8002778:	af00      	add	r7, sp, #0
  RCC_APB2PeriphClockCmd(RCC_APB2Periph_SPI1, ENABLE);
 800277a:	2101      	movs	r1, #1
 800277c:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 8002780:	f7ff f826 	bl	80017d0 <RCC_APB2PeriphClockCmd>

  SPI_InitTypeDef SPI_InitDef;
  SPI_InitDef.SPI_Direction = SPI_Direction_2Lines_FullDuplex;
 8002784:	2300      	movs	r3, #0
 8002786:	80bb      	strh	r3, [r7, #4]
  SPI_InitDef.SPI_Mode = SPI_Mode_Master;
 8002788:	f44f 7382 	mov.w	r3, #260	; 0x104
 800278c:	80fb      	strh	r3, [r7, #6]
  SPI_InitDef.SPI_DataSize = SPI_DataSize_8b;
 800278e:	2300      	movs	r3, #0
 8002790:	813b      	strh	r3, [r7, #8]
  SPI_InitDef.SPI_FirstBit = SPI_FirstBit_MSB;
 8002792:	2300      	movs	r3, #0
 8002794:	827b      	strh	r3, [r7, #18]
  SPI_InitDef.SPI_CPOL = SPI_CPOL_High;
 8002796:	2302      	movs	r3, #2
 8002798:	817b      	strh	r3, [r7, #10]
  SPI_InitDef.SPI_CPHA = SPI_CPHA_2Edge;
 800279a:	2301      	movs	r3, #1
 800279c:	81bb      	strh	r3, [r7, #12]
  SPI_InitDef.SPI_NSS = SPI_NSS_Soft;
 800279e:	f44f 7300 	mov.w	r3, #512	; 0x200
 80027a2:	81fb      	strh	r3, [r7, #14]
  SPI_InitDef.SPI_BaudRatePrescaler = SPI_BaudRatePrescaler_64;
 80027a4:	2328      	movs	r3, #40	; 0x28
 80027a6:	823b      	strh	r3, [r7, #16]
  SPI_InitDef.SPI_CRCPolynomial = 7;
 80027a8:	2307      	movs	r3, #7
 80027aa:	82bb      	strh	r3, [r7, #20]
  SPI_Init(SPI1, &SPI_InitDef);
 80027ac:	1d3b      	adds	r3, r7, #4
 80027ae:	4619      	mov	r1, r3
 80027b0:	4805      	ldr	r0, [pc, #20]	; (80027c8 <Conf_SPI1_Master+0x54>)
 80027b2:	f7ff f849 	bl	8001848 <SPI_Init>

  SPI_Cmd(SPI1, ENABLE);
 80027b6:	2101      	movs	r1, #1
 80027b8:	4803      	ldr	r0, [pc, #12]	; (80027c8 <Conf_SPI1_Master+0x54>)
 80027ba:	f7ff f888 	bl	80018ce <SPI_Cmd>
}
 80027be:	bf00      	nop
 80027c0:	3718      	adds	r7, #24
 80027c2:	46bd      	mov	sp, r7
 80027c4:	bd80      	pop	{r7, pc}
 80027c6:	bf00      	nop
 80027c8:	40013000 	.word	0x40013000

080027cc <Print_USART3>:
#include "print_usart.h"

void Print_USART3(char *string)
{
 80027cc:	b580      	push	{r7, lr}
 80027ce:	b082      	sub	sp, #8
 80027d0:	af00      	add	r7, sp, #0
 80027d2:	6078      	str	r0, [r7, #4]
  while(*string != 0)
 80027d4:	e010      	b.n	80027f8 <Print_USART3+0x2c>
  {
    while(!USART_GetFlagStatus(USART3, USART_FLAG_TXE));
 80027d6:	bf00      	nop
 80027d8:	2180      	movs	r1, #128	; 0x80
 80027da:	480b      	ldr	r0, [pc, #44]	; (8002808 <Print_USART3+0x3c>)
 80027dc:	f7ff fa84 	bl	8001ce8 <USART_GetFlagStatus>
 80027e0:	4603      	mov	r3, r0
 80027e2:	2b00      	cmp	r3, #0
 80027e4:	d0f8      	beq.n	80027d8 <Print_USART3+0xc>
    USART_SendData(USART3, *string++);
 80027e6:	687b      	ldr	r3, [r7, #4]
 80027e8:	1c5a      	adds	r2, r3, #1
 80027ea:	607a      	str	r2, [r7, #4]
 80027ec:	781b      	ldrb	r3, [r3, #0]
 80027ee:	b29b      	uxth	r3, r3
 80027f0:	4619      	mov	r1, r3
 80027f2:	4805      	ldr	r0, [pc, #20]	; (8002808 <Print_USART3+0x3c>)
 80027f4:	f7ff fa67 	bl	8001cc6 <USART_SendData>
  while(*string != 0)
 80027f8:	687b      	ldr	r3, [r7, #4]
 80027fa:	781b      	ldrb	r3, [r3, #0]
 80027fc:	2b00      	cmp	r3, #0
 80027fe:	d1ea      	bne.n	80027d6 <Print_USART3+0xa>
  }
}
 8002800:	bf00      	nop
 8002802:	3708      	adds	r7, #8
 8002804:	46bd      	mov	sp, r7
 8002806:	bd80      	pop	{r7, pc}
 8002808:	40004800 	.word	0x40004800

0800280c <Conf_USART3>:

void Conf_USART3(void)
{
 800280c:	b580      	push	{r7, lr}
 800280e:	b086      	sub	sp, #24
 8002810:	af00      	add	r7, sp, #0
  RCC_APB1PeriphClockCmd(RCC_APB1Periph_USART3, ENABLE);
 8002812:	2101      	movs	r1, #1
 8002814:	f44f 2080 	mov.w	r0, #262144	; 0x40000
 8002818:	f7fe fff8 	bl	800180c <RCC_APB1PeriphClockCmd>
  RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);
 800281c:	2101      	movs	r1, #1
 800281e:	2008      	movs	r0, #8
 8002820:	f7fe ffd6 	bl	80017d0 <RCC_APB2PeriphClockCmd>

  USART_InitTypeDef usart_struct;
  usart_struct.USART_BaudRate = 9600;
 8002824:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 8002828:	60bb      	str	r3, [r7, #8]
  usart_struct.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 800282a:	2300      	movs	r3, #0
 800282c:	82bb      	strh	r3, [r7, #20]
  usart_struct.USART_Mode = USART_Mode_Tx | USART_Mode_Rx;
 800282e:	230c      	movs	r3, #12
 8002830:	827b      	strh	r3, [r7, #18]
  usart_struct.USART_Parity = USART_Parity_No;
 8002832:	2300      	movs	r3, #0
 8002834:	823b      	strh	r3, [r7, #16]
  usart_struct.USART_StopBits = USART_StopBits_1;
 8002836:	2300      	movs	r3, #0
 8002838:	81fb      	strh	r3, [r7, #14]
  usart_struct.USART_WordLength = USART_WordLength_8b;
 800283a:	2300      	movs	r3, #0
 800283c:	81bb      	strh	r3, [r7, #12]
  USART_Init(USART3, &usart_struct);
 800283e:	f107 0308 	add.w	r3, r7, #8
 8002842:	4619      	mov	r1, r3
 8002844:	4810      	ldr	r0, [pc, #64]	; (8002888 <Conf_USART3+0x7c>)
 8002846:	f7ff f965 	bl	8001b14 <USART_Init>

  USART_Cmd(USART3, ENABLE);
 800284a:	2101      	movs	r1, #1
 800284c:	480e      	ldr	r0, [pc, #56]	; (8002888 <Conf_USART3+0x7c>)
 800284e:	f7ff fa1b 	bl	8001c88 <USART_Cmd>

  GPIO_InitTypeDef gpio_structB;
  gpio_structB.GPIO_Mode = GPIO_Mode_AF_PP;
 8002852:	2318      	movs	r3, #24
 8002854:	71fb      	strb	r3, [r7, #7]
  gpio_structB.GPIO_Pin = GPIO_Pin_10;
 8002856:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800285a:	80bb      	strh	r3, [r7, #4]
  gpio_structB.GPIO_Speed = GPIO_Speed_2MHz;
 800285c:	2302      	movs	r3, #2
 800285e:	71bb      	strb	r3, [r7, #6]
  GPIO_Init(GPIOB, &gpio_structB);
 8002860:	1d3b      	adds	r3, r7, #4
 8002862:	4619      	mov	r1, r3
 8002864:	4809      	ldr	r0, [pc, #36]	; (800288c <Conf_USART3+0x80>)
 8002866:	f7fe fe2f 	bl	80014c8 <GPIO_Init>

  gpio_structB.GPIO_Mode = GPIO_Mode_IPU;
 800286a:	2348      	movs	r3, #72	; 0x48
 800286c:	71fb      	strb	r3, [r7, #7]
  gpio_structB.GPIO_Pin = GPIO_Pin_11;
 800286e:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8002872:	80bb      	strh	r3, [r7, #4]
  GPIO_Init(GPIOB, &gpio_structB);
 8002874:	1d3b      	adds	r3, r7, #4
 8002876:	4619      	mov	r1, r3
 8002878:	4804      	ldr	r0, [pc, #16]	; (800288c <Conf_USART3+0x80>)
 800287a:	f7fe fe25 	bl	80014c8 <GPIO_Init>
}
 800287e:	bf00      	nop
 8002880:	3718      	adds	r7, #24
 8002882:	46bd      	mov	sp, r7
 8002884:	bd80      	pop	{r7, pc}
 8002886:	bf00      	nop
 8002888:	40004800 	.word	0x40004800
 800288c:	40010c00 	.word	0x40010c00

08002890 <Reset_Handler>:

    .section	.text.Reset_Handler
	.weak	Reset_Handler
	.type	Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack    /* Atollic update: set stack pointer */
 8002890:	f8df d034 	ldr.w	sp, [pc, #52]	; 80028c8 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */
  movs	r1, #0
 8002894:	2100      	movs	r1, #0
  b	LoopCopyDataInit
 8002896:	e003      	b.n	80028a0 <LoopCopyDataInit>

08002898 <CopyDataInit>:

CopyDataInit:
	ldr	r3, =_sidata
 8002898:	4b0c      	ldr	r3, [pc, #48]	; (80028cc <LoopFillZerobss+0x18>)
	ldr	r3, [r3, r1]
 800289a:	585b      	ldr	r3, [r3, r1]
	str	r3, [r0, r1]
 800289c:	5043      	str	r3, [r0, r1]
	adds	r1, r1, #4
 800289e:	3104      	adds	r1, #4

080028a0 <LoopCopyDataInit>:

LoopCopyDataInit:
	ldr	r0, =_sdata
 80028a0:	480b      	ldr	r0, [pc, #44]	; (80028d0 <LoopFillZerobss+0x1c>)
	ldr	r3, =_edata
 80028a2:	4b0c      	ldr	r3, [pc, #48]	; (80028d4 <LoopFillZerobss+0x20>)
	adds	r2, r0, r1
 80028a4:	1842      	adds	r2, r0, r1
	cmp	r2, r3
 80028a6:	429a      	cmp	r2, r3
	bcc	CopyDataInit
 80028a8:	d3f6      	bcc.n	8002898 <CopyDataInit>
	ldr	r2, =_sbss
 80028aa:	4a0b      	ldr	r2, [pc, #44]	; (80028d8 <LoopFillZerobss+0x24>)
	b	LoopFillZerobss
 80028ac:	e002      	b.n	80028b4 <LoopFillZerobss>

080028ae <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
	movs	r3, #0
 80028ae:	2300      	movs	r3, #0
	str	r3, [r2], #4
 80028b0:	f842 3b04 	str.w	r3, [r2], #4

080028b4 <LoopFillZerobss>:

LoopFillZerobss:
	ldr	r3, = _ebss
 80028b4:	4b09      	ldr	r3, [pc, #36]	; (80028dc <LoopFillZerobss+0x28>)
	cmp	r2, r3
 80028b6:	429a      	cmp	r2, r3
	bcc	FillZerobss
 80028b8:	d3f9      	bcc.n	80028ae <FillZerobss>

/* Call the clock system intitialization function.*/
    bl  SystemInit
 80028ba:	f000 f825 	bl	8002908 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80028be:	f000 f8dd 	bl	8002a7c <__libc_init_array>
/* Call the application's entry point.*/
	bl	main
 80028c2:	f7ff fac3 	bl	8001e4c <main>
	bx	lr
 80028c6:	4770      	bx	lr
  ldr   sp, =_estack    /* Atollic update: set stack pointer */
 80028c8:	20005000 	.word	0x20005000
	ldr	r3, =_sidata
 80028cc:	080067c0 	.word	0x080067c0
	ldr	r0, =_sdata
 80028d0:	20000000 	.word	0x20000000
	ldr	r3, =_edata
 80028d4:	20000688 	.word	0x20000688
	ldr	r2, =_sbss
 80028d8:	20000688 	.word	0x20000688
	ldr	r3, = _ebss
 80028dc:	20000724 	.word	0x20000724

080028e0 <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section	.text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
	b	Infinite_Loop
 80028e0:	e7fe      	b.n	80028e0 <ADC1_2_IRQHandler>
	...

080028e4 <TIM3_IRQHandler>:
#include "stm32f1xx_it.h"

void TIM3_IRQHandler(void)
{
 80028e4:	b580      	push	{r7, lr}
 80028e6:	af00      	add	r7, sp, #0
  contador_ms++;
 80028e8:	4b05      	ldr	r3, [pc, #20]	; (8002900 <TIM3_IRQHandler+0x1c>)
 80028ea:	681b      	ldr	r3, [r3, #0]
 80028ec:	3301      	adds	r3, #1
 80028ee:	4a04      	ldr	r2, [pc, #16]	; (8002900 <TIM3_IRQHandler+0x1c>)
 80028f0:	6013      	str	r3, [r2, #0]

  TIM_ClearITPendingBit(TIM3, TIM_IT_Update);
 80028f2:	2101      	movs	r1, #1
 80028f4:	4803      	ldr	r0, [pc, #12]	; (8002904 <TIM3_IRQHandler+0x20>)
 80028f6:	f7ff f8fd 	bl	8001af4 <TIM_ClearITPendingBit>
}
 80028fa:	bf00      	nop
 80028fc:	bd80      	pop	{r7, pc}
 80028fe:	bf00      	nop
 8002900:	200006a4 	.word	0x200006a4
 8002904:	40000400 	.word	0x40000400

08002908 <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8002908:	b580      	push	{r7, lr}
 800290a:	af00      	add	r7, sp, #0
  /* Reset the RCC clock configuration to the default reset state(for debug purpose) */
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;
 800290c:	4a15      	ldr	r2, [pc, #84]	; (8002964 <SystemInit+0x5c>)
 800290e:	4b15      	ldr	r3, [pc, #84]	; (8002964 <SystemInit+0x5c>)
 8002910:	681b      	ldr	r3, [r3, #0]
 8002912:	f043 0301 	orr.w	r3, r3, #1
 8002916:	6013      	str	r3, [r2, #0]

  /* Reset SW, HPRE, PPRE1, PPRE2, ADCPRE and MCO bits */
#ifndef STM32F10X_CL
  RCC->CFGR &= (uint32_t)0xF8FF0000;
 8002918:	4912      	ldr	r1, [pc, #72]	; (8002964 <SystemInit+0x5c>)
 800291a:	4b12      	ldr	r3, [pc, #72]	; (8002964 <SystemInit+0x5c>)
 800291c:	685a      	ldr	r2, [r3, #4]
 800291e:	4b12      	ldr	r3, [pc, #72]	; (8002968 <SystemInit+0x60>)
 8002920:	4013      	ands	r3, r2
 8002922:	604b      	str	r3, [r1, #4]
#else
  RCC->CFGR &= (uint32_t)0xF0FF0000;
#endif /* STM32F10X_CL */   
  
  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFFF;
 8002924:	4a0f      	ldr	r2, [pc, #60]	; (8002964 <SystemInit+0x5c>)
 8002926:	4b0f      	ldr	r3, [pc, #60]	; (8002964 <SystemInit+0x5c>)
 8002928:	681b      	ldr	r3, [r3, #0]
 800292a:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 800292e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8002932:	6013      	str	r3, [r2, #0]

  /* Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
 8002934:	4a0b      	ldr	r2, [pc, #44]	; (8002964 <SystemInit+0x5c>)
 8002936:	4b0b      	ldr	r3, [pc, #44]	; (8002964 <SystemInit+0x5c>)
 8002938:	681b      	ldr	r3, [r3, #0]
 800293a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800293e:	6013      	str	r3, [r2, #0]

  /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE/OTGFSPRE bits */
  RCC->CFGR &= (uint32_t)0xFF80FFFF;
 8002940:	4a08      	ldr	r2, [pc, #32]	; (8002964 <SystemInit+0x5c>)
 8002942:	4b08      	ldr	r3, [pc, #32]	; (8002964 <SystemInit+0x5c>)
 8002944:	685b      	ldr	r3, [r3, #4]
 8002946:	f423 03fe 	bic.w	r3, r3, #8323072	; 0x7f0000
 800294a:	6053      	str	r3, [r2, #4]

  /* Reset CFGR2 register */
  RCC->CFGR2 = 0x00000000;      
#else
  /* Disable all interrupts and clear pending bits  */
  RCC->CIR = 0x009F0000;
 800294c:	4b05      	ldr	r3, [pc, #20]	; (8002964 <SystemInit+0x5c>)
 800294e:	f44f 021f 	mov.w	r2, #10420224	; 0x9f0000
 8002952:	609a      	str	r2, [r3, #8]
  #endif /* DATA_IN_ExtSRAM */
#endif 

  /* Configure the System clock frequency, HCLK, PCLK2 and PCLK1 prescalers */
  /* Configure the Flash Latency cycles and enable prefetch buffer */
  SetSysClock();
 8002954:	f000 f80c 	bl	8002970 <SetSysClock>

#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH. */
 8002958:	4b04      	ldr	r3, [pc, #16]	; (800296c <SystemInit+0x64>)
 800295a:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800295e:	609a      	str	r2, [r3, #8]
#endif 
}
 8002960:	bf00      	nop
 8002962:	bd80      	pop	{r7, pc}
 8002964:	40021000 	.word	0x40021000
 8002968:	f8ff0000 	.word	0xf8ff0000
 800296c:	e000ed00 	.word	0xe000ed00

08002970 <SetSysClock>:
  * @brief  Configures the System clock frequency, HCLK, PCLK2 and PCLK1 prescalers.
  * @param  None
  * @retval None
  */
static void SetSysClock(void)
{
 8002970:	b580      	push	{r7, lr}
 8002972:	af00      	add	r7, sp, #0
#elif defined SYSCLK_FREQ_48MHz
  SetSysClockTo48();
#elif defined SYSCLK_FREQ_56MHz
  SetSysClockTo56();  
#elif defined SYSCLK_FREQ_72MHz
  SetSysClockTo72();
 8002974:	f000 f802 	bl	800297c <SetSysClockTo72>
#endif
 
 /* If none of the define above is enabled, the HSI is used as System clock
    source (default after reset) */ 
}
 8002978:	bf00      	nop
 800297a:	bd80      	pop	{r7, pc}

0800297c <SetSysClockTo72>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
static void SetSysClockTo72(void)
{
 800297c:	b480      	push	{r7}
 800297e:	b083      	sub	sp, #12
 8002980:	af00      	add	r7, sp, #0
  __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 8002982:	2300      	movs	r3, #0
 8002984:	607b      	str	r3, [r7, #4]
 8002986:	2300      	movs	r3, #0
 8002988:	603b      	str	r3, [r7, #0]
  
  /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
  /* Enable HSE */    
  RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 800298a:	4a3a      	ldr	r2, [pc, #232]	; (8002a74 <SetSysClockTo72+0xf8>)
 800298c:	4b39      	ldr	r3, [pc, #228]	; (8002a74 <SetSysClockTo72+0xf8>)
 800298e:	681b      	ldr	r3, [r3, #0]
 8002990:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002994:	6013      	str	r3, [r2, #0]
 
  /* Wait till HSE is ready and if Time out is reached exit */
  do
  {
    HSEStatus = RCC->CR & RCC_CR_HSERDY;
 8002996:	4b37      	ldr	r3, [pc, #220]	; (8002a74 <SetSysClockTo72+0xf8>)
 8002998:	681b      	ldr	r3, [r3, #0]
 800299a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800299e:	603b      	str	r3, [r7, #0]
    StartUpCounter++;  
 80029a0:	687b      	ldr	r3, [r7, #4]
 80029a2:	3301      	adds	r3, #1
 80029a4:	607b      	str	r3, [r7, #4]
  } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 80029a6:	683b      	ldr	r3, [r7, #0]
 80029a8:	2b00      	cmp	r3, #0
 80029aa:	d103      	bne.n	80029b4 <SetSysClockTo72+0x38>
 80029ac:	687b      	ldr	r3, [r7, #4]
 80029ae:	f5b3 6fa0 	cmp.w	r3, #1280	; 0x500
 80029b2:	d1f0      	bne.n	8002996 <SetSysClockTo72+0x1a>

  if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 80029b4:	4b2f      	ldr	r3, [pc, #188]	; (8002a74 <SetSysClockTo72+0xf8>)
 80029b6:	681b      	ldr	r3, [r3, #0]
 80029b8:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80029bc:	2b00      	cmp	r3, #0
 80029be:	d002      	beq.n	80029c6 <SetSysClockTo72+0x4a>
  {
    HSEStatus = (uint32_t)0x01;
 80029c0:	2301      	movs	r3, #1
 80029c2:	603b      	str	r3, [r7, #0]
 80029c4:	e001      	b.n	80029ca <SetSysClockTo72+0x4e>
  }
  else
  {
    HSEStatus = (uint32_t)0x00;
 80029c6:	2300      	movs	r3, #0
 80029c8:	603b      	str	r3, [r7, #0]
  }  

  if (HSEStatus == (uint32_t)0x01)
 80029ca:	683b      	ldr	r3, [r7, #0]
 80029cc:	2b01      	cmp	r3, #1
 80029ce:	d14b      	bne.n	8002a68 <SetSysClockTo72+0xec>
  {
    /* Enable Prefetch Buffer */
    FLASH->ACR |= FLASH_ACR_PRFTBE;
 80029d0:	4a29      	ldr	r2, [pc, #164]	; (8002a78 <SetSysClockTo72+0xfc>)
 80029d2:	4b29      	ldr	r3, [pc, #164]	; (8002a78 <SetSysClockTo72+0xfc>)
 80029d4:	681b      	ldr	r3, [r3, #0]
 80029d6:	f043 0310 	orr.w	r3, r3, #16
 80029da:	6013      	str	r3, [r2, #0]

    /* Flash 2 wait state */
    FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 80029dc:	4a26      	ldr	r2, [pc, #152]	; (8002a78 <SetSysClockTo72+0xfc>)
 80029de:	4b26      	ldr	r3, [pc, #152]	; (8002a78 <SetSysClockTo72+0xfc>)
 80029e0:	681b      	ldr	r3, [r3, #0]
 80029e2:	f023 0303 	bic.w	r3, r3, #3
 80029e6:	6013      	str	r3, [r2, #0]
    FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_2;    
 80029e8:	4a23      	ldr	r2, [pc, #140]	; (8002a78 <SetSysClockTo72+0xfc>)
 80029ea:	4b23      	ldr	r3, [pc, #140]	; (8002a78 <SetSysClockTo72+0xfc>)
 80029ec:	681b      	ldr	r3, [r3, #0]
 80029ee:	f043 0302 	orr.w	r3, r3, #2
 80029f2:	6013      	str	r3, [r2, #0]

 
    /* HCLK = SYSCLK */
    RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 80029f4:	4a1f      	ldr	r2, [pc, #124]	; (8002a74 <SetSysClockTo72+0xf8>)
 80029f6:	4b1f      	ldr	r3, [pc, #124]	; (8002a74 <SetSysClockTo72+0xf8>)
 80029f8:	685b      	ldr	r3, [r3, #4]
 80029fa:	6053      	str	r3, [r2, #4]
      
    /* PCLK2 = HCLK */
    RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 80029fc:	4a1d      	ldr	r2, [pc, #116]	; (8002a74 <SetSysClockTo72+0xf8>)
 80029fe:	4b1d      	ldr	r3, [pc, #116]	; (8002a74 <SetSysClockTo72+0xf8>)
 8002a00:	685b      	ldr	r3, [r3, #4]
 8002a02:	6053      	str	r3, [r2, #4]
    
    /* PCLK1 = HCLK */
    RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV2;
 8002a04:	4a1b      	ldr	r2, [pc, #108]	; (8002a74 <SetSysClockTo72+0xf8>)
 8002a06:	4b1b      	ldr	r3, [pc, #108]	; (8002a74 <SetSysClockTo72+0xf8>)
 8002a08:	685b      	ldr	r3, [r3, #4]
 8002a0a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8002a0e:	6053      	str	r3, [r2, #4]
    RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
    RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
                            RCC_CFGR_PLLMULL9); 
#else    
    /*  PLL configuration: PLLCLK = HSE * 9 = 72 MHz */
    RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE |
 8002a10:	4a18      	ldr	r2, [pc, #96]	; (8002a74 <SetSysClockTo72+0xf8>)
 8002a12:	4b18      	ldr	r3, [pc, #96]	; (8002a74 <SetSysClockTo72+0xf8>)
 8002a14:	685b      	ldr	r3, [r3, #4]
 8002a16:	f423 137c 	bic.w	r3, r3, #4128768	; 0x3f0000
 8002a1a:	6053      	str	r3, [r2, #4]
                                        RCC_CFGR_PLLMULL));
    RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMULL9);
 8002a1c:	4a15      	ldr	r2, [pc, #84]	; (8002a74 <SetSysClockTo72+0xf8>)
 8002a1e:	4b15      	ldr	r3, [pc, #84]	; (8002a74 <SetSysClockTo72+0xf8>)
 8002a20:	685b      	ldr	r3, [r3, #4]
 8002a22:	f443 13e8 	orr.w	r3, r3, #1900544	; 0x1d0000
 8002a26:	6053      	str	r3, [r2, #4]
#endif /* STM32F10X_CL */

    /* Enable PLL */
    RCC->CR |= RCC_CR_PLLON;
 8002a28:	4a12      	ldr	r2, [pc, #72]	; (8002a74 <SetSysClockTo72+0xf8>)
 8002a2a:	4b12      	ldr	r3, [pc, #72]	; (8002a74 <SetSysClockTo72+0xf8>)
 8002a2c:	681b      	ldr	r3, [r3, #0]
 8002a2e:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8002a32:	6013      	str	r3, [r2, #0]

    /* Wait till PLL is ready */
    while((RCC->CR & RCC_CR_PLLRDY) == 0)
 8002a34:	bf00      	nop
 8002a36:	4b0f      	ldr	r3, [pc, #60]	; (8002a74 <SetSysClockTo72+0xf8>)
 8002a38:	681b      	ldr	r3, [r3, #0]
 8002a3a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002a3e:	2b00      	cmp	r3, #0
 8002a40:	d0f9      	beq.n	8002a36 <SetSysClockTo72+0xba>
    {
    }
    
    /* Select PLL as system clock source */
    RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 8002a42:	4a0c      	ldr	r2, [pc, #48]	; (8002a74 <SetSysClockTo72+0xf8>)
 8002a44:	4b0b      	ldr	r3, [pc, #44]	; (8002a74 <SetSysClockTo72+0xf8>)
 8002a46:	685b      	ldr	r3, [r3, #4]
 8002a48:	f023 0303 	bic.w	r3, r3, #3
 8002a4c:	6053      	str	r3, [r2, #4]
    RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 8002a4e:	4a09      	ldr	r2, [pc, #36]	; (8002a74 <SetSysClockTo72+0xf8>)
 8002a50:	4b08      	ldr	r3, [pc, #32]	; (8002a74 <SetSysClockTo72+0xf8>)
 8002a52:	685b      	ldr	r3, [r3, #4]
 8002a54:	f043 0302 	orr.w	r3, r3, #2
 8002a58:	6053      	str	r3, [r2, #4]

    /* Wait till PLL is used as system clock source */
    while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 8002a5a:	bf00      	nop
 8002a5c:	4b05      	ldr	r3, [pc, #20]	; (8002a74 <SetSysClockTo72+0xf8>)
 8002a5e:	685b      	ldr	r3, [r3, #4]
 8002a60:	f003 030c 	and.w	r3, r3, #12
 8002a64:	2b08      	cmp	r3, #8
 8002a66:	d1f9      	bne.n	8002a5c <SetSysClockTo72+0xe0>
  }
  else
  { /* If HSE fails to start-up, the application will have wrong clock 
         configuration. User can add here some code to deal with this error */
  }
}
 8002a68:	bf00      	nop
 8002a6a:	370c      	adds	r7, #12
 8002a6c:	46bd      	mov	sp, r7
 8002a6e:	bc80      	pop	{r7}
 8002a70:	4770      	bx	lr
 8002a72:	bf00      	nop
 8002a74:	40021000 	.word	0x40021000
 8002a78:	40022000 	.word	0x40022000

08002a7c <__libc_init_array>:
 8002a7c:	b570      	push	{r4, r5, r6, lr}
 8002a7e:	2500      	movs	r5, #0
 8002a80:	4e0c      	ldr	r6, [pc, #48]	; (8002ab4 <__libc_init_array+0x38>)
 8002a82:	4c0d      	ldr	r4, [pc, #52]	; (8002ab8 <__libc_init_array+0x3c>)
 8002a84:	1ba4      	subs	r4, r4, r6
 8002a86:	10a4      	asrs	r4, r4, #2
 8002a88:	42a5      	cmp	r5, r4
 8002a8a:	d109      	bne.n	8002aa0 <__libc_init_array+0x24>
 8002a8c:	f003 fd24 	bl	80064d8 <_init>
 8002a90:	2500      	movs	r5, #0
 8002a92:	4e0a      	ldr	r6, [pc, #40]	; (8002abc <__libc_init_array+0x40>)
 8002a94:	4c0a      	ldr	r4, [pc, #40]	; (8002ac0 <__libc_init_array+0x44>)
 8002a96:	1ba4      	subs	r4, r4, r6
 8002a98:	10a4      	asrs	r4, r4, #2
 8002a9a:	42a5      	cmp	r5, r4
 8002a9c:	d105      	bne.n	8002aaa <__libc_init_array+0x2e>
 8002a9e:	bd70      	pop	{r4, r5, r6, pc}
 8002aa0:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8002aa4:	4798      	blx	r3
 8002aa6:	3501      	adds	r5, #1
 8002aa8:	e7ee      	b.n	8002a88 <__libc_init_array+0xc>
 8002aaa:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8002aae:	4798      	blx	r3
 8002ab0:	3501      	adds	r5, #1
 8002ab2:	e7f2      	b.n	8002a9a <__libc_init_array+0x1e>
 8002ab4:	080067b8 	.word	0x080067b8
 8002ab8:	080067b8 	.word	0x080067b8
 8002abc:	080067b8 	.word	0x080067b8
 8002ac0:	080067bc 	.word	0x080067bc

08002ac4 <sprintf>:
 8002ac4:	b40e      	push	{r1, r2, r3}
 8002ac6:	f44f 7102 	mov.w	r1, #520	; 0x208
 8002aca:	b500      	push	{lr}
 8002acc:	b09c      	sub	sp, #112	; 0x70
 8002ace:	f8ad 1014 	strh.w	r1, [sp, #20]
 8002ad2:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8002ad6:	9104      	str	r1, [sp, #16]
 8002ad8:	9107      	str	r1, [sp, #28]
 8002ada:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002ade:	ab1d      	add	r3, sp, #116	; 0x74
 8002ae0:	9002      	str	r0, [sp, #8]
 8002ae2:	9006      	str	r0, [sp, #24]
 8002ae4:	4808      	ldr	r0, [pc, #32]	; (8002b08 <sprintf+0x44>)
 8002ae6:	f853 2b04 	ldr.w	r2, [r3], #4
 8002aea:	f8ad 1016 	strh.w	r1, [sp, #22]
 8002aee:	6800      	ldr	r0, [r0, #0]
 8002af0:	a902      	add	r1, sp, #8
 8002af2:	9301      	str	r3, [sp, #4]
 8002af4:	f000 f80a 	bl	8002b0c <_svfprintf_r>
 8002af8:	2200      	movs	r2, #0
 8002afa:	9b02      	ldr	r3, [sp, #8]
 8002afc:	701a      	strb	r2, [r3, #0]
 8002afe:	b01c      	add	sp, #112	; 0x70
 8002b00:	f85d eb04 	ldr.w	lr, [sp], #4
 8002b04:	b003      	add	sp, #12
 8002b06:	4770      	bx	lr
 8002b08:	20000014 	.word	0x20000014

08002b0c <_svfprintf_r>:
 8002b0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002b10:	b0bf      	sub	sp, #252	; 0xfc
 8002b12:	4689      	mov	r9, r1
 8002b14:	4615      	mov	r5, r2
 8002b16:	461f      	mov	r7, r3
 8002b18:	4682      	mov	sl, r0
 8002b1a:	f001 fe29 	bl	8004770 <_localeconv_r>
 8002b1e:	6803      	ldr	r3, [r0, #0]
 8002b20:	4618      	mov	r0, r3
 8002b22:	9311      	str	r3, [sp, #68]	; 0x44
 8002b24:	f7fd fb14 	bl	8000150 <strlen>
 8002b28:	f8b9 300c 	ldrh.w	r3, [r9, #12]
 8002b2c:	900a      	str	r0, [sp, #40]	; 0x28
 8002b2e:	061b      	lsls	r3, r3, #24
 8002b30:	d518      	bpl.n	8002b64 <_svfprintf_r+0x58>
 8002b32:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8002b36:	b9ab      	cbnz	r3, 8002b64 <_svfprintf_r+0x58>
 8002b38:	2140      	movs	r1, #64	; 0x40
 8002b3a:	4650      	mov	r0, sl
 8002b3c:	f001 fe2e 	bl	800479c <_malloc_r>
 8002b40:	f8c9 0000 	str.w	r0, [r9]
 8002b44:	f8c9 0010 	str.w	r0, [r9, #16]
 8002b48:	b948      	cbnz	r0, 8002b5e <_svfprintf_r+0x52>
 8002b4a:	230c      	movs	r3, #12
 8002b4c:	f8ca 3000 	str.w	r3, [sl]
 8002b50:	f04f 33ff 	mov.w	r3, #4294967295
 8002b54:	930b      	str	r3, [sp, #44]	; 0x2c
 8002b56:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8002b58:	b03f      	add	sp, #252	; 0xfc
 8002b5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002b5e:	2340      	movs	r3, #64	; 0x40
 8002b60:	f8c9 3014 	str.w	r3, [r9, #20]
 8002b64:	2300      	movs	r3, #0
 8002b66:	ac2e      	add	r4, sp, #184	; 0xb8
 8002b68:	9421      	str	r4, [sp, #132]	; 0x84
 8002b6a:	9323      	str	r3, [sp, #140]	; 0x8c
 8002b6c:	9322      	str	r3, [sp, #136]	; 0x88
 8002b6e:	9509      	str	r5, [sp, #36]	; 0x24
 8002b70:	9307      	str	r3, [sp, #28]
 8002b72:	930d      	str	r3, [sp, #52]	; 0x34
 8002b74:	930e      	str	r3, [sp, #56]	; 0x38
 8002b76:	9315      	str	r3, [sp, #84]	; 0x54
 8002b78:	9314      	str	r3, [sp, #80]	; 0x50
 8002b7a:	930b      	str	r3, [sp, #44]	; 0x2c
 8002b7c:	9312      	str	r3, [sp, #72]	; 0x48
 8002b7e:	9313      	str	r3, [sp, #76]	; 0x4c
 8002b80:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8002b82:	462b      	mov	r3, r5
 8002b84:	f813 2b01 	ldrb.w	r2, [r3], #1
 8002b88:	b112      	cbz	r2, 8002b90 <_svfprintf_r+0x84>
 8002b8a:	2a25      	cmp	r2, #37	; 0x25
 8002b8c:	f040 8083 	bne.w	8002c96 <_svfprintf_r+0x18a>
 8002b90:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002b92:	1aee      	subs	r6, r5, r3
 8002b94:	d00d      	beq.n	8002bb2 <_svfprintf_r+0xa6>
 8002b96:	e884 0048 	stmia.w	r4, {r3, r6}
 8002b9a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8002b9c:	4433      	add	r3, r6
 8002b9e:	9323      	str	r3, [sp, #140]	; 0x8c
 8002ba0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002ba2:	3301      	adds	r3, #1
 8002ba4:	2b07      	cmp	r3, #7
 8002ba6:	9322      	str	r3, [sp, #136]	; 0x88
 8002ba8:	dc77      	bgt.n	8002c9a <_svfprintf_r+0x18e>
 8002baa:	3408      	adds	r4, #8
 8002bac:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8002bae:	4433      	add	r3, r6
 8002bb0:	930b      	str	r3, [sp, #44]	; 0x2c
 8002bb2:	782b      	ldrb	r3, [r5, #0]
 8002bb4:	2b00      	cmp	r3, #0
 8002bb6:	f000 8725 	beq.w	8003a04 <_svfprintf_r+0xef8>
 8002bba:	2300      	movs	r3, #0
 8002bbc:	1c69      	adds	r1, r5, #1
 8002bbe:	461a      	mov	r2, r3
 8002bc0:	f04f 3bff 	mov.w	fp, #4294967295
 8002bc4:	461d      	mov	r5, r3
 8002bc6:	200a      	movs	r0, #10
 8002bc8:	f88d 3067 	strb.w	r3, [sp, #103]	; 0x67
 8002bcc:	930c      	str	r3, [sp, #48]	; 0x30
 8002bce:	1c4e      	adds	r6, r1, #1
 8002bd0:	7809      	ldrb	r1, [r1, #0]
 8002bd2:	9609      	str	r6, [sp, #36]	; 0x24
 8002bd4:	9106      	str	r1, [sp, #24]
 8002bd6:	9906      	ldr	r1, [sp, #24]
 8002bd8:	3920      	subs	r1, #32
 8002bda:	2958      	cmp	r1, #88	; 0x58
 8002bdc:	f200 8414 	bhi.w	8003408 <_svfprintf_r+0x8fc>
 8002be0:	e8df f011 	tbh	[pc, r1, lsl #1]
 8002be4:	041200a5 	.word	0x041200a5
 8002be8:	00aa0412 	.word	0x00aa0412
 8002bec:	04120412 	.word	0x04120412
 8002bf0:	04120412 	.word	0x04120412
 8002bf4:	04120412 	.word	0x04120412
 8002bf8:	006500ad 	.word	0x006500ad
 8002bfc:	00b50412 	.word	0x00b50412
 8002c00:	041200b8 	.word	0x041200b8
 8002c04:	00d800d5 	.word	0x00d800d5
 8002c08:	00d800d8 	.word	0x00d800d8
 8002c0c:	00d800d8 	.word	0x00d800d8
 8002c10:	00d800d8 	.word	0x00d800d8
 8002c14:	00d800d8 	.word	0x00d800d8
 8002c18:	04120412 	.word	0x04120412
 8002c1c:	04120412 	.word	0x04120412
 8002c20:	04120412 	.word	0x04120412
 8002c24:	04120412 	.word	0x04120412
 8002c28:	04120412 	.word	0x04120412
 8002c2c:	0122010c 	.word	0x0122010c
 8002c30:	01220412 	.word	0x01220412
 8002c34:	04120412 	.word	0x04120412
 8002c38:	04120412 	.word	0x04120412
 8002c3c:	041200eb 	.word	0x041200eb
 8002c40:	033c0412 	.word	0x033c0412
 8002c44:	04120412 	.word	0x04120412
 8002c48:	04120412 	.word	0x04120412
 8002c4c:	03a40412 	.word	0x03a40412
 8002c50:	04120412 	.word	0x04120412
 8002c54:	04120085 	.word	0x04120085
 8002c58:	04120412 	.word	0x04120412
 8002c5c:	04120412 	.word	0x04120412
 8002c60:	04120412 	.word	0x04120412
 8002c64:	04120412 	.word	0x04120412
 8002c68:	00fe0412 	.word	0x00fe0412
 8002c6c:	0122006b 	.word	0x0122006b
 8002c70:	01220122 	.word	0x01220122
 8002c74:	006b00ee 	.word	0x006b00ee
 8002c78:	04120412 	.word	0x04120412
 8002c7c:	041200f1 	.word	0x041200f1
 8002c80:	033e031e 	.word	0x033e031e
 8002c84:	00f80372 	.word	0x00f80372
 8002c88:	03830412 	.word	0x03830412
 8002c8c:	03a60412 	.word	0x03a60412
 8002c90:	04120412 	.word	0x04120412
 8002c94:	03be      	.short	0x03be
 8002c96:	461d      	mov	r5, r3
 8002c98:	e773      	b.n	8002b82 <_svfprintf_r+0x76>
 8002c9a:	aa21      	add	r2, sp, #132	; 0x84
 8002c9c:	4649      	mov	r1, r9
 8002c9e:	4650      	mov	r0, sl
 8002ca0:	f002 fa90 	bl	80051c4 <__ssprint_r>
 8002ca4:	2800      	cmp	r0, #0
 8002ca6:	f040 868e 	bne.w	80039c6 <_svfprintf_r+0xeba>
 8002caa:	ac2e      	add	r4, sp, #184	; 0xb8
 8002cac:	e77e      	b.n	8002bac <_svfprintf_r+0xa0>
 8002cae:	2301      	movs	r3, #1
 8002cb0:	222b      	movs	r2, #43	; 0x2b
 8002cb2:	9909      	ldr	r1, [sp, #36]	; 0x24
 8002cb4:	e78b      	b.n	8002bce <_svfprintf_r+0xc2>
 8002cb6:	460f      	mov	r7, r1
 8002cb8:	e7fb      	b.n	8002cb2 <_svfprintf_r+0x1a6>
 8002cba:	b10b      	cbz	r3, 8002cc0 <_svfprintf_r+0x1b4>
 8002cbc:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
 8002cc0:	06ae      	lsls	r6, r5, #26
 8002cc2:	f140 80a1 	bpl.w	8002e08 <_svfprintf_r+0x2fc>
 8002cc6:	3707      	adds	r7, #7
 8002cc8:	f027 0707 	bic.w	r7, r7, #7
 8002ccc:	f107 0308 	add.w	r3, r7, #8
 8002cd0:	9308      	str	r3, [sp, #32]
 8002cd2:	e9d7 6700 	ldrd	r6, r7, [r7]
 8002cd6:	2e00      	cmp	r6, #0
 8002cd8:	f177 0300 	sbcs.w	r3, r7, #0
 8002cdc:	da05      	bge.n	8002cea <_svfprintf_r+0x1de>
 8002cde:	232d      	movs	r3, #45	; 0x2d
 8002ce0:	4276      	negs	r6, r6
 8002ce2:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
 8002ce6:	f88d 3067 	strb.w	r3, [sp, #103]	; 0x67
 8002cea:	2301      	movs	r3, #1
 8002cec:	e2c7      	b.n	800327e <_svfprintf_r+0x772>
 8002cee:	b10b      	cbz	r3, 8002cf4 <_svfprintf_r+0x1e8>
 8002cf0:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
 8002cf4:	4ba0      	ldr	r3, [pc, #640]	; (8002f78 <_svfprintf_r+0x46c>)
 8002cf6:	9315      	str	r3, [sp, #84]	; 0x54
 8002cf8:	06ab      	lsls	r3, r5, #26
 8002cfa:	f140 8336 	bpl.w	800336a <_svfprintf_r+0x85e>
 8002cfe:	3707      	adds	r7, #7
 8002d00:	f027 0707 	bic.w	r7, r7, #7
 8002d04:	f107 0308 	add.w	r3, r7, #8
 8002d08:	9308      	str	r3, [sp, #32]
 8002d0a:	e9d7 6700 	ldrd	r6, r7, [r7]
 8002d0e:	07e8      	lsls	r0, r5, #31
 8002d10:	d50b      	bpl.n	8002d2a <_svfprintf_r+0x21e>
 8002d12:	ea56 0307 	orrs.w	r3, r6, r7
 8002d16:	d008      	beq.n	8002d2a <_svfprintf_r+0x21e>
 8002d18:	2330      	movs	r3, #48	; 0x30
 8002d1a:	f88d 3068 	strb.w	r3, [sp, #104]	; 0x68
 8002d1e:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8002d22:	f045 0502 	orr.w	r5, r5, #2
 8002d26:	f88d 3069 	strb.w	r3, [sp, #105]	; 0x69
 8002d2a:	2302      	movs	r3, #2
 8002d2c:	e2a4      	b.n	8003278 <_svfprintf_r+0x76c>
 8002d2e:	2a00      	cmp	r2, #0
 8002d30:	d1bf      	bne.n	8002cb2 <_svfprintf_r+0x1a6>
 8002d32:	2301      	movs	r3, #1
 8002d34:	2220      	movs	r2, #32
 8002d36:	e7bc      	b.n	8002cb2 <_svfprintf_r+0x1a6>
 8002d38:	f045 0501 	orr.w	r5, r5, #1
 8002d3c:	e7b9      	b.n	8002cb2 <_svfprintf_r+0x1a6>
 8002d3e:	683e      	ldr	r6, [r7, #0]
 8002d40:	1d39      	adds	r1, r7, #4
 8002d42:	2e00      	cmp	r6, #0
 8002d44:	960c      	str	r6, [sp, #48]	; 0x30
 8002d46:	dab6      	bge.n	8002cb6 <_svfprintf_r+0x1aa>
 8002d48:	460f      	mov	r7, r1
 8002d4a:	4276      	negs	r6, r6
 8002d4c:	960c      	str	r6, [sp, #48]	; 0x30
 8002d4e:	f045 0504 	orr.w	r5, r5, #4
 8002d52:	e7ae      	b.n	8002cb2 <_svfprintf_r+0x1a6>
 8002d54:	9909      	ldr	r1, [sp, #36]	; 0x24
 8002d56:	1c4e      	adds	r6, r1, #1
 8002d58:	7809      	ldrb	r1, [r1, #0]
 8002d5a:	292a      	cmp	r1, #42	; 0x2a
 8002d5c:	9106      	str	r1, [sp, #24]
 8002d5e:	d010      	beq.n	8002d82 <_svfprintf_r+0x276>
 8002d60:	f04f 0b00 	mov.w	fp, #0
 8002d64:	9609      	str	r6, [sp, #36]	; 0x24
 8002d66:	9906      	ldr	r1, [sp, #24]
 8002d68:	3930      	subs	r1, #48	; 0x30
 8002d6a:	2909      	cmp	r1, #9
 8002d6c:	f63f af33 	bhi.w	8002bd6 <_svfprintf_r+0xca>
 8002d70:	fb00 1b0b 	mla	fp, r0, fp, r1
 8002d74:	9909      	ldr	r1, [sp, #36]	; 0x24
 8002d76:	460e      	mov	r6, r1
 8002d78:	f816 1b01 	ldrb.w	r1, [r6], #1
 8002d7c:	9106      	str	r1, [sp, #24]
 8002d7e:	9609      	str	r6, [sp, #36]	; 0x24
 8002d80:	e7f1      	b.n	8002d66 <_svfprintf_r+0x25a>
 8002d82:	6839      	ldr	r1, [r7, #0]
 8002d84:	9609      	str	r6, [sp, #36]	; 0x24
 8002d86:	ea41 7be1 	orr.w	fp, r1, r1, asr #31
 8002d8a:	3704      	adds	r7, #4
 8002d8c:	e791      	b.n	8002cb2 <_svfprintf_r+0x1a6>
 8002d8e:	f045 0580 	orr.w	r5, r5, #128	; 0x80
 8002d92:	e78e      	b.n	8002cb2 <_svfprintf_r+0x1a6>
 8002d94:	2100      	movs	r1, #0
 8002d96:	910c      	str	r1, [sp, #48]	; 0x30
 8002d98:	9906      	ldr	r1, [sp, #24]
 8002d9a:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8002d9c:	3930      	subs	r1, #48	; 0x30
 8002d9e:	fb00 1106 	mla	r1, r0, r6, r1
 8002da2:	910c      	str	r1, [sp, #48]	; 0x30
 8002da4:	9909      	ldr	r1, [sp, #36]	; 0x24
 8002da6:	460e      	mov	r6, r1
 8002da8:	f816 1b01 	ldrb.w	r1, [r6], #1
 8002dac:	9106      	str	r1, [sp, #24]
 8002dae:	9906      	ldr	r1, [sp, #24]
 8002db0:	9609      	str	r6, [sp, #36]	; 0x24
 8002db2:	3930      	subs	r1, #48	; 0x30
 8002db4:	2909      	cmp	r1, #9
 8002db6:	d9ef      	bls.n	8002d98 <_svfprintf_r+0x28c>
 8002db8:	e70d      	b.n	8002bd6 <_svfprintf_r+0xca>
 8002dba:	f045 0508 	orr.w	r5, r5, #8
 8002dbe:	e778      	b.n	8002cb2 <_svfprintf_r+0x1a6>
 8002dc0:	f045 0540 	orr.w	r5, r5, #64	; 0x40
 8002dc4:	e775      	b.n	8002cb2 <_svfprintf_r+0x1a6>
 8002dc6:	9909      	ldr	r1, [sp, #36]	; 0x24
 8002dc8:	7809      	ldrb	r1, [r1, #0]
 8002dca:	296c      	cmp	r1, #108	; 0x6c
 8002dcc:	d105      	bne.n	8002dda <_svfprintf_r+0x2ce>
 8002dce:	9909      	ldr	r1, [sp, #36]	; 0x24
 8002dd0:	3101      	adds	r1, #1
 8002dd2:	9109      	str	r1, [sp, #36]	; 0x24
 8002dd4:	f045 0520 	orr.w	r5, r5, #32
 8002dd8:	e76b      	b.n	8002cb2 <_svfprintf_r+0x1a6>
 8002dda:	f045 0510 	orr.w	r5, r5, #16
 8002dde:	e768      	b.n	8002cb2 <_svfprintf_r+0x1a6>
 8002de0:	2600      	movs	r6, #0
 8002de2:	1d3b      	adds	r3, r7, #4
 8002de4:	9308      	str	r3, [sp, #32]
 8002de6:	683b      	ldr	r3, [r7, #0]
 8002de8:	f88d 6067 	strb.w	r6, [sp, #103]	; 0x67
 8002dec:	f88d 3090 	strb.w	r3, [sp, #144]	; 0x90
 8002df0:	f04f 0b01 	mov.w	fp, #1
 8002df4:	4637      	mov	r7, r6
 8002df6:	f10d 0890 	add.w	r8, sp, #144	; 0x90
 8002dfa:	e11c      	b.n	8003036 <_svfprintf_r+0x52a>
 8002dfc:	b10b      	cbz	r3, 8002e02 <_svfprintf_r+0x2f6>
 8002dfe:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
 8002e02:	f045 0510 	orr.w	r5, r5, #16
 8002e06:	e75b      	b.n	8002cc0 <_svfprintf_r+0x1b4>
 8002e08:	f015 0f10 	tst.w	r5, #16
 8002e0c:	f107 0304 	add.w	r3, r7, #4
 8002e10:	d003      	beq.n	8002e1a <_svfprintf_r+0x30e>
 8002e12:	683e      	ldr	r6, [r7, #0]
 8002e14:	9308      	str	r3, [sp, #32]
 8002e16:	17f7      	asrs	r7, r6, #31
 8002e18:	e75d      	b.n	8002cd6 <_svfprintf_r+0x1ca>
 8002e1a:	683e      	ldr	r6, [r7, #0]
 8002e1c:	f015 0f40 	tst.w	r5, #64	; 0x40
 8002e20:	9308      	str	r3, [sp, #32]
 8002e22:	bf18      	it	ne
 8002e24:	b236      	sxthne	r6, r6
 8002e26:	e7f6      	b.n	8002e16 <_svfprintf_r+0x30a>
 8002e28:	b10b      	cbz	r3, 8002e2e <_svfprintf_r+0x322>
 8002e2a:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
 8002e2e:	3707      	adds	r7, #7
 8002e30:	f027 0707 	bic.w	r7, r7, #7
 8002e34:	f107 0308 	add.w	r3, r7, #8
 8002e38:	9308      	str	r3, [sp, #32]
 8002e3a:	683b      	ldr	r3, [r7, #0]
 8002e3c:	f04f 32ff 	mov.w	r2, #4294967295
 8002e40:	930d      	str	r3, [sp, #52]	; 0x34
 8002e42:	687b      	ldr	r3, [r7, #4]
 8002e44:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8002e46:	930e      	str	r3, [sp, #56]	; 0x38
 8002e48:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002e4a:	4638      	mov	r0, r7
 8002e4c:	f023 4600 	bic.w	r6, r3, #2147483648	; 0x80000000
 8002e50:	4631      	mov	r1, r6
 8002e52:	4b4a      	ldr	r3, [pc, #296]	; (8002f7c <_svfprintf_r+0x470>)
 8002e54:	f7fd fdd6 	bl	8000a04 <__aeabi_dcmpun>
 8002e58:	2800      	cmp	r0, #0
 8002e5a:	f040 85dc 	bne.w	8003a16 <_svfprintf_r+0xf0a>
 8002e5e:	f04f 32ff 	mov.w	r2, #4294967295
 8002e62:	4b46      	ldr	r3, [pc, #280]	; (8002f7c <_svfprintf_r+0x470>)
 8002e64:	4638      	mov	r0, r7
 8002e66:	4631      	mov	r1, r6
 8002e68:	f7fd fdae 	bl	80009c8 <__aeabi_dcmple>
 8002e6c:	2800      	cmp	r0, #0
 8002e6e:	f040 85d2 	bne.w	8003a16 <_svfprintf_r+0xf0a>
 8002e72:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8002e74:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8002e76:	980d      	ldr	r0, [sp, #52]	; 0x34
 8002e78:	990e      	ldr	r1, [sp, #56]	; 0x38
 8002e7a:	f7fd fd9b 	bl	80009b4 <__aeabi_dcmplt>
 8002e7e:	b110      	cbz	r0, 8002e86 <_svfprintf_r+0x37a>
 8002e80:	232d      	movs	r3, #45	; 0x2d
 8002e82:	f88d 3067 	strb.w	r3, [sp, #103]	; 0x67
 8002e86:	4b3e      	ldr	r3, [pc, #248]	; (8002f80 <_svfprintf_r+0x474>)
 8002e88:	4a3e      	ldr	r2, [pc, #248]	; (8002f84 <_svfprintf_r+0x478>)
 8002e8a:	9906      	ldr	r1, [sp, #24]
 8002e8c:	f04f 0b03 	mov.w	fp, #3
 8002e90:	2947      	cmp	r1, #71	; 0x47
 8002e92:	bfcc      	ite	gt
 8002e94:	4690      	movgt	r8, r2
 8002e96:	4698      	movle	r8, r3
 8002e98:	2600      	movs	r6, #0
 8002e9a:	f025 0580 	bic.w	r5, r5, #128	; 0x80
 8002e9e:	4637      	mov	r7, r6
 8002ea0:	e0c9      	b.n	8003036 <_svfprintf_r+0x52a>
 8002ea2:	f1bb 3fff 	cmp.w	fp, #4294967295
 8002ea6:	d026      	beq.n	8002ef6 <_svfprintf_r+0x3ea>
 8002ea8:	9b06      	ldr	r3, [sp, #24]
 8002eaa:	f023 0320 	bic.w	r3, r3, #32
 8002eae:	2b47      	cmp	r3, #71	; 0x47
 8002eb0:	d104      	bne.n	8002ebc <_svfprintf_r+0x3b0>
 8002eb2:	f1bb 0f00 	cmp.w	fp, #0
 8002eb6:	bf08      	it	eq
 8002eb8:	f04f 0b01 	moveq.w	fp, #1
 8002ebc:	f445 7380 	orr.w	r3, r5, #256	; 0x100
 8002ec0:	9317      	str	r3, [sp, #92]	; 0x5c
 8002ec2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002ec4:	1e1f      	subs	r7, r3, #0
 8002ec6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002ec8:	bfa8      	it	ge
 8002eca:	9710      	strge	r7, [sp, #64]	; 0x40
 8002ecc:	930f      	str	r3, [sp, #60]	; 0x3c
 8002ece:	bfbd      	ittte	lt
 8002ed0:	463b      	movlt	r3, r7
 8002ed2:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
 8002ed6:	9310      	strlt	r3, [sp, #64]	; 0x40
 8002ed8:	2300      	movge	r3, #0
 8002eda:	bfb8      	it	lt
 8002edc:	232d      	movlt	r3, #45	; 0x2d
 8002ede:	9316      	str	r3, [sp, #88]	; 0x58
 8002ee0:	9b06      	ldr	r3, [sp, #24]
 8002ee2:	f023 0720 	bic.w	r7, r3, #32
 8002ee6:	2f46      	cmp	r7, #70	; 0x46
 8002ee8:	d008      	beq.n	8002efc <_svfprintf_r+0x3f0>
 8002eea:	2f45      	cmp	r7, #69	; 0x45
 8002eec:	d142      	bne.n	8002f74 <_svfprintf_r+0x468>
 8002eee:	f10b 0601 	add.w	r6, fp, #1
 8002ef2:	2302      	movs	r3, #2
 8002ef4:	e004      	b.n	8002f00 <_svfprintf_r+0x3f4>
 8002ef6:	f04f 0b06 	mov.w	fp, #6
 8002efa:	e7df      	b.n	8002ebc <_svfprintf_r+0x3b0>
 8002efc:	465e      	mov	r6, fp
 8002efe:	2303      	movs	r3, #3
 8002f00:	aa1f      	add	r2, sp, #124	; 0x7c
 8002f02:	9204      	str	r2, [sp, #16]
 8002f04:	aa1c      	add	r2, sp, #112	; 0x70
 8002f06:	9203      	str	r2, [sp, #12]
 8002f08:	aa1b      	add	r2, sp, #108	; 0x6c
 8002f0a:	9202      	str	r2, [sp, #8]
 8002f0c:	e88d 0048 	stmia.w	sp, {r3, r6}
 8002f10:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8002f12:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8002f14:	4650      	mov	r0, sl
 8002f16:	f000 fe57 	bl	8003bc8 <_dtoa_r>
 8002f1a:	2f47      	cmp	r7, #71	; 0x47
 8002f1c:	4680      	mov	r8, r0
 8002f1e:	d102      	bne.n	8002f26 <_svfprintf_r+0x41a>
 8002f20:	07e8      	lsls	r0, r5, #31
 8002f22:	f140 8585 	bpl.w	8003a30 <_svfprintf_r+0xf24>
 8002f26:	eb08 0306 	add.w	r3, r8, r6
 8002f2a:	2f46      	cmp	r7, #70	; 0x46
 8002f2c:	9307      	str	r3, [sp, #28]
 8002f2e:	d111      	bne.n	8002f54 <_svfprintf_r+0x448>
 8002f30:	f898 3000 	ldrb.w	r3, [r8]
 8002f34:	2b30      	cmp	r3, #48	; 0x30
 8002f36:	d109      	bne.n	8002f4c <_svfprintf_r+0x440>
 8002f38:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8002f3a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8002f3c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8002f3e:	9910      	ldr	r1, [sp, #64]	; 0x40
 8002f40:	f7fd fd2e 	bl	80009a0 <__aeabi_dcmpeq>
 8002f44:	b910      	cbnz	r0, 8002f4c <_svfprintf_r+0x440>
 8002f46:	f1c6 0601 	rsb	r6, r6, #1
 8002f4a:	961b      	str	r6, [sp, #108]	; 0x6c
 8002f4c:	9a07      	ldr	r2, [sp, #28]
 8002f4e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8002f50:	441a      	add	r2, r3
 8002f52:	9207      	str	r2, [sp, #28]
 8002f54:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8002f56:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8002f58:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8002f5a:	9910      	ldr	r1, [sp, #64]	; 0x40
 8002f5c:	f7fd fd20 	bl	80009a0 <__aeabi_dcmpeq>
 8002f60:	b990      	cbnz	r0, 8002f88 <_svfprintf_r+0x47c>
 8002f62:	2230      	movs	r2, #48	; 0x30
 8002f64:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8002f66:	9907      	ldr	r1, [sp, #28]
 8002f68:	4299      	cmp	r1, r3
 8002f6a:	d90f      	bls.n	8002f8c <_svfprintf_r+0x480>
 8002f6c:	1c59      	adds	r1, r3, #1
 8002f6e:	911f      	str	r1, [sp, #124]	; 0x7c
 8002f70:	701a      	strb	r2, [r3, #0]
 8002f72:	e7f7      	b.n	8002f64 <_svfprintf_r+0x458>
 8002f74:	465e      	mov	r6, fp
 8002f76:	e7bc      	b.n	8002ef2 <_svfprintf_r+0x3e6>
 8002f78:	08006524 	.word	0x08006524
 8002f7c:	7fefffff 	.word	0x7fefffff
 8002f80:	08006514 	.word	0x08006514
 8002f84:	08006518 	.word	0x08006518
 8002f88:	9b07      	ldr	r3, [sp, #28]
 8002f8a:	931f      	str	r3, [sp, #124]	; 0x7c
 8002f8c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8002f8e:	2f47      	cmp	r7, #71	; 0x47
 8002f90:	eba3 0308 	sub.w	r3, r3, r8
 8002f94:	9307      	str	r3, [sp, #28]
 8002f96:	f040 8100 	bne.w	800319a <_svfprintf_r+0x68e>
 8002f9a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8002f9c:	1cd9      	adds	r1, r3, #3
 8002f9e:	db02      	blt.n	8002fa6 <_svfprintf_r+0x49a>
 8002fa0:	459b      	cmp	fp, r3
 8002fa2:	f280 8126 	bge.w	80031f2 <_svfprintf_r+0x6e6>
 8002fa6:	9b06      	ldr	r3, [sp, #24]
 8002fa8:	3b02      	subs	r3, #2
 8002faa:	9306      	str	r3, [sp, #24]
 8002fac:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8002fae:	f89d 1018 	ldrb.w	r1, [sp, #24]
 8002fb2:	1e53      	subs	r3, r2, #1
 8002fb4:	2b00      	cmp	r3, #0
 8002fb6:	bfa8      	it	ge
 8002fb8:	222b      	movge	r2, #43	; 0x2b
 8002fba:	931b      	str	r3, [sp, #108]	; 0x6c
 8002fbc:	bfbc      	itt	lt
 8002fbe:	f1c2 0301 	rsblt	r3, r2, #1
 8002fc2:	222d      	movlt	r2, #45	; 0x2d
 8002fc4:	2b09      	cmp	r3, #9
 8002fc6:	f88d 1074 	strb.w	r1, [sp, #116]	; 0x74
 8002fca:	f88d 2075 	strb.w	r2, [sp, #117]	; 0x75
 8002fce:	f340 8100 	ble.w	80031d2 <_svfprintf_r+0x6c6>
 8002fd2:	260a      	movs	r6, #10
 8002fd4:	f10d 0283 	add.w	r2, sp, #131	; 0x83
 8002fd8:	fb93 f0f6 	sdiv	r0, r3, r6
 8002fdc:	fb06 3310 	mls	r3, r6, r0, r3
 8002fe0:	2809      	cmp	r0, #9
 8002fe2:	f103 0330 	add.w	r3, r3, #48	; 0x30
 8002fe6:	f802 3c01 	strb.w	r3, [r2, #-1]
 8002fea:	f102 31ff 	add.w	r1, r2, #4294967295
 8002fee:	4603      	mov	r3, r0
 8002ff0:	f300 80e8 	bgt.w	80031c4 <_svfprintf_r+0x6b8>
 8002ff4:	3330      	adds	r3, #48	; 0x30
 8002ff6:	f801 3c01 	strb.w	r3, [r1, #-1]
 8002ffa:	3a02      	subs	r2, #2
 8002ffc:	f10d 0376 	add.w	r3, sp, #118	; 0x76
 8003000:	f10d 0083 	add.w	r0, sp, #131	; 0x83
 8003004:	4282      	cmp	r2, r0
 8003006:	4619      	mov	r1, r3
 8003008:	f0c0 80de 	bcc.w	80031c8 <_svfprintf_r+0x6bc>
 800300c:	9a07      	ldr	r2, [sp, #28]
 800300e:	ab1d      	add	r3, sp, #116	; 0x74
 8003010:	1acb      	subs	r3, r1, r3
 8003012:	2a01      	cmp	r2, #1
 8003014:	9314      	str	r3, [sp, #80]	; 0x50
 8003016:	eb03 0b02 	add.w	fp, r3, r2
 800301a:	dc02      	bgt.n	8003022 <_svfprintf_r+0x516>
 800301c:	f015 0701 	ands.w	r7, r5, #1
 8003020:	d002      	beq.n	8003028 <_svfprintf_r+0x51c>
 8003022:	2700      	movs	r7, #0
 8003024:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003026:	449b      	add	fp, r3
 8003028:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800302a:	b113      	cbz	r3, 8003032 <_svfprintf_r+0x526>
 800302c:	232d      	movs	r3, #45	; 0x2d
 800302e:	f88d 3067 	strb.w	r3, [sp, #103]	; 0x67
 8003032:	2600      	movs	r6, #0
 8003034:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8003036:	455e      	cmp	r6, fp
 8003038:	4633      	mov	r3, r6
 800303a:	bfb8      	it	lt
 800303c:	465b      	movlt	r3, fp
 800303e:	930f      	str	r3, [sp, #60]	; 0x3c
 8003040:	f89d 3067 	ldrb.w	r3, [sp, #103]	; 0x67
 8003044:	b113      	cbz	r3, 800304c <_svfprintf_r+0x540>
 8003046:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8003048:	3301      	adds	r3, #1
 800304a:	930f      	str	r3, [sp, #60]	; 0x3c
 800304c:	f015 0302 	ands.w	r3, r5, #2
 8003050:	9316      	str	r3, [sp, #88]	; 0x58
 8003052:	bf1e      	ittt	ne
 8003054:	9b0f      	ldrne	r3, [sp, #60]	; 0x3c
 8003056:	3302      	addne	r3, #2
 8003058:	930f      	strne	r3, [sp, #60]	; 0x3c
 800305a:	f015 0384 	ands.w	r3, r5, #132	; 0x84
 800305e:	9317      	str	r3, [sp, #92]	; 0x5c
 8003060:	d118      	bne.n	8003094 <_svfprintf_r+0x588>
 8003062:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003064:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8003066:	1a9b      	subs	r3, r3, r2
 8003068:	2b00      	cmp	r3, #0
 800306a:	9310      	str	r3, [sp, #64]	; 0x40
 800306c:	dd12      	ble.n	8003094 <_svfprintf_r+0x588>
 800306e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8003070:	2b10      	cmp	r3, #16
 8003072:	4bab      	ldr	r3, [pc, #684]	; (8003320 <_svfprintf_r+0x814>)
 8003074:	6023      	str	r3, [r4, #0]
 8003076:	f300 81d9 	bgt.w	800342c <_svfprintf_r+0x920>
 800307a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800307c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800307e:	6063      	str	r3, [r4, #4]
 8003080:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8003082:	4413      	add	r3, r2
 8003084:	9323      	str	r3, [sp, #140]	; 0x8c
 8003086:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8003088:	3301      	adds	r3, #1
 800308a:	2b07      	cmp	r3, #7
 800308c:	9322      	str	r3, [sp, #136]	; 0x88
 800308e:	f300 81e6 	bgt.w	800345e <_svfprintf_r+0x952>
 8003092:	3408      	adds	r4, #8
 8003094:	f89d 3067 	ldrb.w	r3, [sp, #103]	; 0x67
 8003098:	b173      	cbz	r3, 80030b8 <_svfprintf_r+0x5ac>
 800309a:	f10d 0367 	add.w	r3, sp, #103	; 0x67
 800309e:	6023      	str	r3, [r4, #0]
 80030a0:	2301      	movs	r3, #1
 80030a2:	6063      	str	r3, [r4, #4]
 80030a4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80030a6:	3301      	adds	r3, #1
 80030a8:	9323      	str	r3, [sp, #140]	; 0x8c
 80030aa:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80030ac:	3301      	adds	r3, #1
 80030ae:	2b07      	cmp	r3, #7
 80030b0:	9322      	str	r3, [sp, #136]	; 0x88
 80030b2:	f300 81de 	bgt.w	8003472 <_svfprintf_r+0x966>
 80030b6:	3408      	adds	r4, #8
 80030b8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80030ba:	b16b      	cbz	r3, 80030d8 <_svfprintf_r+0x5cc>
 80030bc:	ab1a      	add	r3, sp, #104	; 0x68
 80030be:	6023      	str	r3, [r4, #0]
 80030c0:	2302      	movs	r3, #2
 80030c2:	6063      	str	r3, [r4, #4]
 80030c4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80030c6:	3302      	adds	r3, #2
 80030c8:	9323      	str	r3, [sp, #140]	; 0x8c
 80030ca:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80030cc:	3301      	adds	r3, #1
 80030ce:	2b07      	cmp	r3, #7
 80030d0:	9322      	str	r3, [sp, #136]	; 0x88
 80030d2:	f300 81d8 	bgt.w	8003486 <_svfprintf_r+0x97a>
 80030d6:	3408      	adds	r4, #8
 80030d8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80030da:	2b80      	cmp	r3, #128	; 0x80
 80030dc:	d118      	bne.n	8003110 <_svfprintf_r+0x604>
 80030de:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80030e0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80030e2:	1a9b      	subs	r3, r3, r2
 80030e4:	2b00      	cmp	r3, #0
 80030e6:	9310      	str	r3, [sp, #64]	; 0x40
 80030e8:	dd12      	ble.n	8003110 <_svfprintf_r+0x604>
 80030ea:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80030ec:	2b10      	cmp	r3, #16
 80030ee:	4b8d      	ldr	r3, [pc, #564]	; (8003324 <_svfprintf_r+0x818>)
 80030f0:	6023      	str	r3, [r4, #0]
 80030f2:	f300 81d2 	bgt.w	800349a <_svfprintf_r+0x98e>
 80030f6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80030f8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80030fa:	6063      	str	r3, [r4, #4]
 80030fc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80030fe:	4413      	add	r3, r2
 8003100:	9323      	str	r3, [sp, #140]	; 0x8c
 8003102:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8003104:	3301      	adds	r3, #1
 8003106:	2b07      	cmp	r3, #7
 8003108:	9322      	str	r3, [sp, #136]	; 0x88
 800310a:	f300 81df 	bgt.w	80034cc <_svfprintf_r+0x9c0>
 800310e:	3408      	adds	r4, #8
 8003110:	eba6 060b 	sub.w	r6, r6, fp
 8003114:	2e00      	cmp	r6, #0
 8003116:	dd0f      	ble.n	8003138 <_svfprintf_r+0x62c>
 8003118:	4b82      	ldr	r3, [pc, #520]	; (8003324 <_svfprintf_r+0x818>)
 800311a:	2e10      	cmp	r6, #16
 800311c:	6023      	str	r3, [r4, #0]
 800311e:	f300 81df 	bgt.w	80034e0 <_svfprintf_r+0x9d4>
 8003122:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8003124:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8003126:	3301      	adds	r3, #1
 8003128:	6066      	str	r6, [r4, #4]
 800312a:	2b07      	cmp	r3, #7
 800312c:	4406      	add	r6, r0
 800312e:	9623      	str	r6, [sp, #140]	; 0x8c
 8003130:	9322      	str	r3, [sp, #136]	; 0x88
 8003132:	f300 81ec 	bgt.w	800350e <_svfprintf_r+0xa02>
 8003136:	3408      	adds	r4, #8
 8003138:	05eb      	lsls	r3, r5, #23
 800313a:	f100 81f2 	bmi.w	8003522 <_svfprintf_r+0xa16>
 800313e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8003140:	e884 0900 	stmia.w	r4, {r8, fp}
 8003144:	445b      	add	r3, fp
 8003146:	9323      	str	r3, [sp, #140]	; 0x8c
 8003148:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800314a:	3301      	adds	r3, #1
 800314c:	2b07      	cmp	r3, #7
 800314e:	9322      	str	r3, [sp, #136]	; 0x88
 8003150:	f340 8419 	ble.w	8003986 <_svfprintf_r+0xe7a>
 8003154:	aa21      	add	r2, sp, #132	; 0x84
 8003156:	4649      	mov	r1, r9
 8003158:	4650      	mov	r0, sl
 800315a:	f002 f833 	bl	80051c4 <__ssprint_r>
 800315e:	2800      	cmp	r0, #0
 8003160:	f040 8431 	bne.w	80039c6 <_svfprintf_r+0xeba>
 8003164:	ac2e      	add	r4, sp, #184	; 0xb8
 8003166:	076b      	lsls	r3, r5, #29
 8003168:	f100 8410 	bmi.w	800398c <_svfprintf_r+0xe80>
 800316c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800316e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8003170:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8003172:	428a      	cmp	r2, r1
 8003174:	bfac      	ite	ge
 8003176:	189b      	addge	r3, r3, r2
 8003178:	185b      	addlt	r3, r3, r1
 800317a:	930b      	str	r3, [sp, #44]	; 0x2c
 800317c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800317e:	b13b      	cbz	r3, 8003190 <_svfprintf_r+0x684>
 8003180:	aa21      	add	r2, sp, #132	; 0x84
 8003182:	4649      	mov	r1, r9
 8003184:	4650      	mov	r0, sl
 8003186:	f002 f81d 	bl	80051c4 <__ssprint_r>
 800318a:	2800      	cmp	r0, #0
 800318c:	f040 841b 	bne.w	80039c6 <_svfprintf_r+0xeba>
 8003190:	2300      	movs	r3, #0
 8003192:	9f08      	ldr	r7, [sp, #32]
 8003194:	9322      	str	r3, [sp, #136]	; 0x88
 8003196:	ac2e      	add	r4, sp, #184	; 0xb8
 8003198:	e4f2      	b.n	8002b80 <_svfprintf_r+0x74>
 800319a:	9b06      	ldr	r3, [sp, #24]
 800319c:	2b65      	cmp	r3, #101	; 0x65
 800319e:	f77f af05 	ble.w	8002fac <_svfprintf_r+0x4a0>
 80031a2:	9b06      	ldr	r3, [sp, #24]
 80031a4:	2b66      	cmp	r3, #102	; 0x66
 80031a6:	d124      	bne.n	80031f2 <_svfprintf_r+0x6e6>
 80031a8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80031aa:	2b00      	cmp	r3, #0
 80031ac:	dd19      	ble.n	80031e2 <_svfprintf_r+0x6d6>
 80031ae:	f1bb 0f00 	cmp.w	fp, #0
 80031b2:	d101      	bne.n	80031b8 <_svfprintf_r+0x6ac>
 80031b4:	07ea      	lsls	r2, r5, #31
 80031b6:	d502      	bpl.n	80031be <_svfprintf_r+0x6b2>
 80031b8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80031ba:	4413      	add	r3, r2
 80031bc:	445b      	add	r3, fp
 80031be:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 80031c0:	469b      	mov	fp, r3
 80031c2:	e731      	b.n	8003028 <_svfprintf_r+0x51c>
 80031c4:	460a      	mov	r2, r1
 80031c6:	e707      	b.n	8002fd8 <_svfprintf_r+0x4cc>
 80031c8:	f812 1b01 	ldrb.w	r1, [r2], #1
 80031cc:	f803 1b01 	strb.w	r1, [r3], #1
 80031d0:	e718      	b.n	8003004 <_svfprintf_r+0x4f8>
 80031d2:	2230      	movs	r2, #48	; 0x30
 80031d4:	4413      	add	r3, r2
 80031d6:	f88d 2076 	strb.w	r2, [sp, #118]	; 0x76
 80031da:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
 80031de:	a91e      	add	r1, sp, #120	; 0x78
 80031e0:	e714      	b.n	800300c <_svfprintf_r+0x500>
 80031e2:	f1bb 0f00 	cmp.w	fp, #0
 80031e6:	d101      	bne.n	80031ec <_svfprintf_r+0x6e0>
 80031e8:	07eb      	lsls	r3, r5, #31
 80031ea:	d515      	bpl.n	8003218 <_svfprintf_r+0x70c>
 80031ec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80031ee:	3301      	adds	r3, #1
 80031f0:	e7e4      	b.n	80031bc <_svfprintf_r+0x6b0>
 80031f2:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 80031f4:	9b07      	ldr	r3, [sp, #28]
 80031f6:	429a      	cmp	r2, r3
 80031f8:	db06      	blt.n	8003208 <_svfprintf_r+0x6fc>
 80031fa:	07ef      	lsls	r7, r5, #31
 80031fc:	d50e      	bpl.n	800321c <_svfprintf_r+0x710>
 80031fe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003200:	4413      	add	r3, r2
 8003202:	2267      	movs	r2, #103	; 0x67
 8003204:	9206      	str	r2, [sp, #24]
 8003206:	e7da      	b.n	80031be <_svfprintf_r+0x6b2>
 8003208:	9b07      	ldr	r3, [sp, #28]
 800320a:	990a      	ldr	r1, [sp, #40]	; 0x28
 800320c:	2a00      	cmp	r2, #0
 800320e:	440b      	add	r3, r1
 8003210:	dcf7      	bgt.n	8003202 <_svfprintf_r+0x6f6>
 8003212:	f1c2 0201 	rsb	r2, r2, #1
 8003216:	e7f3      	b.n	8003200 <_svfprintf_r+0x6f4>
 8003218:	2301      	movs	r3, #1
 800321a:	e7d0      	b.n	80031be <_svfprintf_r+0x6b2>
 800321c:	4613      	mov	r3, r2
 800321e:	e7f0      	b.n	8003202 <_svfprintf_r+0x6f6>
 8003220:	b10b      	cbz	r3, 8003226 <_svfprintf_r+0x71a>
 8003222:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
 8003226:	f015 0f20 	tst.w	r5, #32
 800322a:	f107 0304 	add.w	r3, r7, #4
 800322e:	d008      	beq.n	8003242 <_svfprintf_r+0x736>
 8003230:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8003232:	683a      	ldr	r2, [r7, #0]
 8003234:	17ce      	asrs	r6, r1, #31
 8003236:	4608      	mov	r0, r1
 8003238:	4631      	mov	r1, r6
 800323a:	e9c2 0100 	strd	r0, r1, [r2]
 800323e:	461f      	mov	r7, r3
 8003240:	e49e      	b.n	8002b80 <_svfprintf_r+0x74>
 8003242:	06ee      	lsls	r6, r5, #27
 8003244:	d503      	bpl.n	800324e <_svfprintf_r+0x742>
 8003246:	683a      	ldr	r2, [r7, #0]
 8003248:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800324a:	6011      	str	r1, [r2, #0]
 800324c:	e7f7      	b.n	800323e <_svfprintf_r+0x732>
 800324e:	0668      	lsls	r0, r5, #25
 8003250:	d5f9      	bpl.n	8003246 <_svfprintf_r+0x73a>
 8003252:	683a      	ldr	r2, [r7, #0]
 8003254:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8003258:	8011      	strh	r1, [r2, #0]
 800325a:	e7f0      	b.n	800323e <_svfprintf_r+0x732>
 800325c:	f045 0510 	orr.w	r5, r5, #16
 8003260:	f015 0320 	ands.w	r3, r5, #32
 8003264:	d022      	beq.n	80032ac <_svfprintf_r+0x7a0>
 8003266:	3707      	adds	r7, #7
 8003268:	f027 0707 	bic.w	r7, r7, #7
 800326c:	f107 0308 	add.w	r3, r7, #8
 8003270:	9308      	str	r3, [sp, #32]
 8003272:	e9d7 6700 	ldrd	r6, r7, [r7]
 8003276:	2300      	movs	r3, #0
 8003278:	2200      	movs	r2, #0
 800327a:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
 800327e:	f1bb 3fff 	cmp.w	fp, #4294967295
 8003282:	f000 83db 	beq.w	8003a3c <_svfprintf_r+0xf30>
 8003286:	f025 0280 	bic.w	r2, r5, #128	; 0x80
 800328a:	920f      	str	r2, [sp, #60]	; 0x3c
 800328c:	ea56 0207 	orrs.w	r2, r6, r7
 8003290:	f040 83d9 	bne.w	8003a46 <_svfprintf_r+0xf3a>
 8003294:	f1bb 0f00 	cmp.w	fp, #0
 8003298:	f000 80aa 	beq.w	80033f0 <_svfprintf_r+0x8e4>
 800329c:	2b01      	cmp	r3, #1
 800329e:	d076      	beq.n	800338e <_svfprintf_r+0x882>
 80032a0:	2b02      	cmp	r3, #2
 80032a2:	f000 8091 	beq.w	80033c8 <_svfprintf_r+0x8bc>
 80032a6:	2600      	movs	r6, #0
 80032a8:	2700      	movs	r7, #0
 80032aa:	e3d2      	b.n	8003a52 <_svfprintf_r+0xf46>
 80032ac:	1d3a      	adds	r2, r7, #4
 80032ae:	f015 0110 	ands.w	r1, r5, #16
 80032b2:	9208      	str	r2, [sp, #32]
 80032b4:	d002      	beq.n	80032bc <_svfprintf_r+0x7b0>
 80032b6:	683e      	ldr	r6, [r7, #0]
 80032b8:	2700      	movs	r7, #0
 80032ba:	e7dd      	b.n	8003278 <_svfprintf_r+0x76c>
 80032bc:	f015 0340 	ands.w	r3, r5, #64	; 0x40
 80032c0:	d0f9      	beq.n	80032b6 <_svfprintf_r+0x7aa>
 80032c2:	883e      	ldrh	r6, [r7, #0]
 80032c4:	2700      	movs	r7, #0
 80032c6:	e7d6      	b.n	8003276 <_svfprintf_r+0x76a>
 80032c8:	1d3b      	adds	r3, r7, #4
 80032ca:	9308      	str	r3, [sp, #32]
 80032cc:	2330      	movs	r3, #48	; 0x30
 80032ce:	2278      	movs	r2, #120	; 0x78
 80032d0:	f88d 3068 	strb.w	r3, [sp, #104]	; 0x68
 80032d4:	4b14      	ldr	r3, [pc, #80]	; (8003328 <_svfprintf_r+0x81c>)
 80032d6:	683e      	ldr	r6, [r7, #0]
 80032d8:	9315      	str	r3, [sp, #84]	; 0x54
 80032da:	2700      	movs	r7, #0
 80032dc:	f045 0502 	orr.w	r5, r5, #2
 80032e0:	f88d 2069 	strb.w	r2, [sp, #105]	; 0x69
 80032e4:	2302      	movs	r3, #2
 80032e6:	9206      	str	r2, [sp, #24]
 80032e8:	e7c6      	b.n	8003278 <_svfprintf_r+0x76c>
 80032ea:	2600      	movs	r6, #0
 80032ec:	1d3b      	adds	r3, r7, #4
 80032ee:	f1bb 3fff 	cmp.w	fp, #4294967295
 80032f2:	9308      	str	r3, [sp, #32]
 80032f4:	f8d7 8000 	ldr.w	r8, [r7]
 80032f8:	f88d 6067 	strb.w	r6, [sp, #103]	; 0x67
 80032fc:	d00a      	beq.n	8003314 <_svfprintf_r+0x808>
 80032fe:	465a      	mov	r2, fp
 8003300:	4631      	mov	r1, r6
 8003302:	4640      	mov	r0, r8
 8003304:	f001 fc56 	bl	8004bb4 <memchr>
 8003308:	2800      	cmp	r0, #0
 800330a:	f000 808d 	beq.w	8003428 <_svfprintf_r+0x91c>
 800330e:	eba0 0b08 	sub.w	fp, r0, r8
 8003312:	e5c4      	b.n	8002e9e <_svfprintf_r+0x392>
 8003314:	4640      	mov	r0, r8
 8003316:	f7fc ff1b 	bl	8000150 <strlen>
 800331a:	4683      	mov	fp, r0
 800331c:	e5bf      	b.n	8002e9e <_svfprintf_r+0x392>
 800331e:	bf00      	nop
 8003320:	08006548 	.word	0x08006548
 8003324:	08006558 	.word	0x08006558
 8003328:	08006535 	.word	0x08006535
 800332c:	f045 0510 	orr.w	r5, r5, #16
 8003330:	06a9      	lsls	r1, r5, #26
 8003332:	d509      	bpl.n	8003348 <_svfprintf_r+0x83c>
 8003334:	3707      	adds	r7, #7
 8003336:	f027 0707 	bic.w	r7, r7, #7
 800333a:	f107 0308 	add.w	r3, r7, #8
 800333e:	9308      	str	r3, [sp, #32]
 8003340:	e9d7 6700 	ldrd	r6, r7, [r7]
 8003344:	2301      	movs	r3, #1
 8003346:	e797      	b.n	8003278 <_svfprintf_r+0x76c>
 8003348:	1d3b      	adds	r3, r7, #4
 800334a:	f015 0f10 	tst.w	r5, #16
 800334e:	9308      	str	r3, [sp, #32]
 8003350:	d001      	beq.n	8003356 <_svfprintf_r+0x84a>
 8003352:	683e      	ldr	r6, [r7, #0]
 8003354:	e002      	b.n	800335c <_svfprintf_r+0x850>
 8003356:	066a      	lsls	r2, r5, #25
 8003358:	d5fb      	bpl.n	8003352 <_svfprintf_r+0x846>
 800335a:	883e      	ldrh	r6, [r7, #0]
 800335c:	2700      	movs	r7, #0
 800335e:	e7f1      	b.n	8003344 <_svfprintf_r+0x838>
 8003360:	b10b      	cbz	r3, 8003366 <_svfprintf_r+0x85a>
 8003362:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
 8003366:	4ba3      	ldr	r3, [pc, #652]	; (80035f4 <_svfprintf_r+0xae8>)
 8003368:	e4c5      	b.n	8002cf6 <_svfprintf_r+0x1ea>
 800336a:	1d3b      	adds	r3, r7, #4
 800336c:	f015 0f10 	tst.w	r5, #16
 8003370:	9308      	str	r3, [sp, #32]
 8003372:	d001      	beq.n	8003378 <_svfprintf_r+0x86c>
 8003374:	683e      	ldr	r6, [r7, #0]
 8003376:	e002      	b.n	800337e <_svfprintf_r+0x872>
 8003378:	066e      	lsls	r6, r5, #25
 800337a:	d5fb      	bpl.n	8003374 <_svfprintf_r+0x868>
 800337c:	883e      	ldrh	r6, [r7, #0]
 800337e:	2700      	movs	r7, #0
 8003380:	e4c5      	b.n	8002d0e <_svfprintf_r+0x202>
 8003382:	4643      	mov	r3, r8
 8003384:	e366      	b.n	8003a54 <_svfprintf_r+0xf48>
 8003386:	2f00      	cmp	r7, #0
 8003388:	bf08      	it	eq
 800338a:	2e0a      	cmpeq	r6, #10
 800338c:	d205      	bcs.n	800339a <_svfprintf_r+0x88e>
 800338e:	3630      	adds	r6, #48	; 0x30
 8003390:	f10d 08f8 	add.w	r8, sp, #248	; 0xf8
 8003394:	f808 6d41 	strb.w	r6, [r8, #-65]!
 8003398:	e377      	b.n	8003a8a <_svfprintf_r+0xf7e>
 800339a:	f10d 08b8 	add.w	r8, sp, #184	; 0xb8
 800339e:	4630      	mov	r0, r6
 80033a0:	4639      	mov	r1, r7
 80033a2:	220a      	movs	r2, #10
 80033a4:	2300      	movs	r3, #0
 80033a6:	f7fd fea5 	bl	80010f4 <__aeabi_uldivmod>
 80033aa:	3230      	adds	r2, #48	; 0x30
 80033ac:	f808 2d01 	strb.w	r2, [r8, #-1]!
 80033b0:	2300      	movs	r3, #0
 80033b2:	4630      	mov	r0, r6
 80033b4:	4639      	mov	r1, r7
 80033b6:	220a      	movs	r2, #10
 80033b8:	f7fd fe9c 	bl	80010f4 <__aeabi_uldivmod>
 80033bc:	4606      	mov	r6, r0
 80033be:	460f      	mov	r7, r1
 80033c0:	ea56 0307 	orrs.w	r3, r6, r7
 80033c4:	d1eb      	bne.n	800339e <_svfprintf_r+0x892>
 80033c6:	e360      	b.n	8003a8a <_svfprintf_r+0xf7e>
 80033c8:	2600      	movs	r6, #0
 80033ca:	2700      	movs	r7, #0
 80033cc:	f10d 08b8 	add.w	r8, sp, #184	; 0xb8
 80033d0:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80033d2:	f006 030f 	and.w	r3, r6, #15
 80033d6:	5cd3      	ldrb	r3, [r2, r3]
 80033d8:	093a      	lsrs	r2, r7, #4
 80033da:	f808 3d01 	strb.w	r3, [r8, #-1]!
 80033de:	0933      	lsrs	r3, r6, #4
 80033e0:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
 80033e4:	461e      	mov	r6, r3
 80033e6:	4617      	mov	r7, r2
 80033e8:	ea56 0307 	orrs.w	r3, r6, r7
 80033ec:	d1f0      	bne.n	80033d0 <_svfprintf_r+0x8c4>
 80033ee:	e34c      	b.n	8003a8a <_svfprintf_r+0xf7e>
 80033f0:	b93b      	cbnz	r3, 8003402 <_svfprintf_r+0x8f6>
 80033f2:	07ea      	lsls	r2, r5, #31
 80033f4:	d505      	bpl.n	8003402 <_svfprintf_r+0x8f6>
 80033f6:	2330      	movs	r3, #48	; 0x30
 80033f8:	f10d 08f8 	add.w	r8, sp, #248	; 0xf8
 80033fc:	f808 3d41 	strb.w	r3, [r8, #-65]!
 8003400:	e343      	b.n	8003a8a <_svfprintf_r+0xf7e>
 8003402:	f10d 08b8 	add.w	r8, sp, #184	; 0xb8
 8003406:	e340      	b.n	8003a8a <_svfprintf_r+0xf7e>
 8003408:	b10b      	cbz	r3, 800340e <_svfprintf_r+0x902>
 800340a:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
 800340e:	9b06      	ldr	r3, [sp, #24]
 8003410:	2b00      	cmp	r3, #0
 8003412:	f000 82f7 	beq.w	8003a04 <_svfprintf_r+0xef8>
 8003416:	2600      	movs	r6, #0
 8003418:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800341c:	f88d 6067 	strb.w	r6, [sp, #103]	; 0x67
 8003420:	f88d 3090 	strb.w	r3, [sp, #144]	; 0x90
 8003424:	9708      	str	r7, [sp, #32]
 8003426:	e4e3      	b.n	8002df0 <_svfprintf_r+0x2e4>
 8003428:	4606      	mov	r6, r0
 800342a:	e538      	b.n	8002e9e <_svfprintf_r+0x392>
 800342c:	2310      	movs	r3, #16
 800342e:	6063      	str	r3, [r4, #4]
 8003430:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8003432:	3310      	adds	r3, #16
 8003434:	9323      	str	r3, [sp, #140]	; 0x8c
 8003436:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8003438:	3301      	adds	r3, #1
 800343a:	2b07      	cmp	r3, #7
 800343c:	9322      	str	r3, [sp, #136]	; 0x88
 800343e:	dc04      	bgt.n	800344a <_svfprintf_r+0x93e>
 8003440:	3408      	adds	r4, #8
 8003442:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8003444:	3b10      	subs	r3, #16
 8003446:	9310      	str	r3, [sp, #64]	; 0x40
 8003448:	e611      	b.n	800306e <_svfprintf_r+0x562>
 800344a:	aa21      	add	r2, sp, #132	; 0x84
 800344c:	4649      	mov	r1, r9
 800344e:	4650      	mov	r0, sl
 8003450:	f001 feb8 	bl	80051c4 <__ssprint_r>
 8003454:	2800      	cmp	r0, #0
 8003456:	f040 82b6 	bne.w	80039c6 <_svfprintf_r+0xeba>
 800345a:	ac2e      	add	r4, sp, #184	; 0xb8
 800345c:	e7f1      	b.n	8003442 <_svfprintf_r+0x936>
 800345e:	aa21      	add	r2, sp, #132	; 0x84
 8003460:	4649      	mov	r1, r9
 8003462:	4650      	mov	r0, sl
 8003464:	f001 feae 	bl	80051c4 <__ssprint_r>
 8003468:	2800      	cmp	r0, #0
 800346a:	f040 82ac 	bne.w	80039c6 <_svfprintf_r+0xeba>
 800346e:	ac2e      	add	r4, sp, #184	; 0xb8
 8003470:	e610      	b.n	8003094 <_svfprintf_r+0x588>
 8003472:	aa21      	add	r2, sp, #132	; 0x84
 8003474:	4649      	mov	r1, r9
 8003476:	4650      	mov	r0, sl
 8003478:	f001 fea4 	bl	80051c4 <__ssprint_r>
 800347c:	2800      	cmp	r0, #0
 800347e:	f040 82a2 	bne.w	80039c6 <_svfprintf_r+0xeba>
 8003482:	ac2e      	add	r4, sp, #184	; 0xb8
 8003484:	e618      	b.n	80030b8 <_svfprintf_r+0x5ac>
 8003486:	aa21      	add	r2, sp, #132	; 0x84
 8003488:	4649      	mov	r1, r9
 800348a:	4650      	mov	r0, sl
 800348c:	f001 fe9a 	bl	80051c4 <__ssprint_r>
 8003490:	2800      	cmp	r0, #0
 8003492:	f040 8298 	bne.w	80039c6 <_svfprintf_r+0xeba>
 8003496:	ac2e      	add	r4, sp, #184	; 0xb8
 8003498:	e61e      	b.n	80030d8 <_svfprintf_r+0x5cc>
 800349a:	2310      	movs	r3, #16
 800349c:	6063      	str	r3, [r4, #4]
 800349e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80034a0:	3310      	adds	r3, #16
 80034a2:	9323      	str	r3, [sp, #140]	; 0x8c
 80034a4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80034a6:	3301      	adds	r3, #1
 80034a8:	2b07      	cmp	r3, #7
 80034aa:	9322      	str	r3, [sp, #136]	; 0x88
 80034ac:	dc04      	bgt.n	80034b8 <_svfprintf_r+0x9ac>
 80034ae:	3408      	adds	r4, #8
 80034b0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80034b2:	3b10      	subs	r3, #16
 80034b4:	9310      	str	r3, [sp, #64]	; 0x40
 80034b6:	e618      	b.n	80030ea <_svfprintf_r+0x5de>
 80034b8:	aa21      	add	r2, sp, #132	; 0x84
 80034ba:	4649      	mov	r1, r9
 80034bc:	4650      	mov	r0, sl
 80034be:	f001 fe81 	bl	80051c4 <__ssprint_r>
 80034c2:	2800      	cmp	r0, #0
 80034c4:	f040 827f 	bne.w	80039c6 <_svfprintf_r+0xeba>
 80034c8:	ac2e      	add	r4, sp, #184	; 0xb8
 80034ca:	e7f1      	b.n	80034b0 <_svfprintf_r+0x9a4>
 80034cc:	aa21      	add	r2, sp, #132	; 0x84
 80034ce:	4649      	mov	r1, r9
 80034d0:	4650      	mov	r0, sl
 80034d2:	f001 fe77 	bl	80051c4 <__ssprint_r>
 80034d6:	2800      	cmp	r0, #0
 80034d8:	f040 8275 	bne.w	80039c6 <_svfprintf_r+0xeba>
 80034dc:	ac2e      	add	r4, sp, #184	; 0xb8
 80034de:	e617      	b.n	8003110 <_svfprintf_r+0x604>
 80034e0:	2310      	movs	r3, #16
 80034e2:	6063      	str	r3, [r4, #4]
 80034e4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80034e6:	3310      	adds	r3, #16
 80034e8:	9323      	str	r3, [sp, #140]	; 0x8c
 80034ea:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80034ec:	3301      	adds	r3, #1
 80034ee:	2b07      	cmp	r3, #7
 80034f0:	9322      	str	r3, [sp, #136]	; 0x88
 80034f2:	dc02      	bgt.n	80034fa <_svfprintf_r+0x9ee>
 80034f4:	3408      	adds	r4, #8
 80034f6:	3e10      	subs	r6, #16
 80034f8:	e60e      	b.n	8003118 <_svfprintf_r+0x60c>
 80034fa:	aa21      	add	r2, sp, #132	; 0x84
 80034fc:	4649      	mov	r1, r9
 80034fe:	4650      	mov	r0, sl
 8003500:	f001 fe60 	bl	80051c4 <__ssprint_r>
 8003504:	2800      	cmp	r0, #0
 8003506:	f040 825e 	bne.w	80039c6 <_svfprintf_r+0xeba>
 800350a:	ac2e      	add	r4, sp, #184	; 0xb8
 800350c:	e7f3      	b.n	80034f6 <_svfprintf_r+0x9ea>
 800350e:	aa21      	add	r2, sp, #132	; 0x84
 8003510:	4649      	mov	r1, r9
 8003512:	4650      	mov	r0, sl
 8003514:	f001 fe56 	bl	80051c4 <__ssprint_r>
 8003518:	2800      	cmp	r0, #0
 800351a:	f040 8254 	bne.w	80039c6 <_svfprintf_r+0xeba>
 800351e:	ac2e      	add	r4, sp, #184	; 0xb8
 8003520:	e60a      	b.n	8003138 <_svfprintf_r+0x62c>
 8003522:	9b06      	ldr	r3, [sp, #24]
 8003524:	2b65      	cmp	r3, #101	; 0x65
 8003526:	f340 81a9 	ble.w	800387c <_svfprintf_r+0xd70>
 800352a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800352c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800352e:	980d      	ldr	r0, [sp, #52]	; 0x34
 8003530:	990e      	ldr	r1, [sp, #56]	; 0x38
 8003532:	f7fd fa35 	bl	80009a0 <__aeabi_dcmpeq>
 8003536:	2800      	cmp	r0, #0
 8003538:	d062      	beq.n	8003600 <_svfprintf_r+0xaf4>
 800353a:	4b2f      	ldr	r3, [pc, #188]	; (80035f8 <_svfprintf_r+0xaec>)
 800353c:	6023      	str	r3, [r4, #0]
 800353e:	2301      	movs	r3, #1
 8003540:	6063      	str	r3, [r4, #4]
 8003542:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8003544:	3301      	adds	r3, #1
 8003546:	9323      	str	r3, [sp, #140]	; 0x8c
 8003548:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800354a:	3301      	adds	r3, #1
 800354c:	2b07      	cmp	r3, #7
 800354e:	9322      	str	r3, [sp, #136]	; 0x88
 8003550:	dc25      	bgt.n	800359e <_svfprintf_r+0xa92>
 8003552:	3408      	adds	r4, #8
 8003554:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8003556:	9a07      	ldr	r2, [sp, #28]
 8003558:	4293      	cmp	r3, r2
 800355a:	db02      	blt.n	8003562 <_svfprintf_r+0xa56>
 800355c:	07ee      	lsls	r6, r5, #31
 800355e:	f57f ae02 	bpl.w	8003166 <_svfprintf_r+0x65a>
 8003562:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8003564:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8003566:	6023      	str	r3, [r4, #0]
 8003568:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800356a:	6063      	str	r3, [r4, #4]
 800356c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800356e:	4413      	add	r3, r2
 8003570:	9323      	str	r3, [sp, #140]	; 0x8c
 8003572:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8003574:	3301      	adds	r3, #1
 8003576:	2b07      	cmp	r3, #7
 8003578:	9322      	str	r3, [sp, #136]	; 0x88
 800357a:	dc1a      	bgt.n	80035b2 <_svfprintf_r+0xaa6>
 800357c:	3408      	adds	r4, #8
 800357e:	9b07      	ldr	r3, [sp, #28]
 8003580:	1e5e      	subs	r6, r3, #1
 8003582:	2e00      	cmp	r6, #0
 8003584:	f77f adef 	ble.w	8003166 <_svfprintf_r+0x65a>
 8003588:	f04f 0810 	mov.w	r8, #16
 800358c:	4f1b      	ldr	r7, [pc, #108]	; (80035fc <_svfprintf_r+0xaf0>)
 800358e:	2e10      	cmp	r6, #16
 8003590:	6027      	str	r7, [r4, #0]
 8003592:	dc18      	bgt.n	80035c6 <_svfprintf_r+0xaba>
 8003594:	6066      	str	r6, [r4, #4]
 8003596:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8003598:	441e      	add	r6, r3
 800359a:	9623      	str	r6, [sp, #140]	; 0x8c
 800359c:	e5d4      	b.n	8003148 <_svfprintf_r+0x63c>
 800359e:	aa21      	add	r2, sp, #132	; 0x84
 80035a0:	4649      	mov	r1, r9
 80035a2:	4650      	mov	r0, sl
 80035a4:	f001 fe0e 	bl	80051c4 <__ssprint_r>
 80035a8:	2800      	cmp	r0, #0
 80035aa:	f040 820c 	bne.w	80039c6 <_svfprintf_r+0xeba>
 80035ae:	ac2e      	add	r4, sp, #184	; 0xb8
 80035b0:	e7d0      	b.n	8003554 <_svfprintf_r+0xa48>
 80035b2:	aa21      	add	r2, sp, #132	; 0x84
 80035b4:	4649      	mov	r1, r9
 80035b6:	4650      	mov	r0, sl
 80035b8:	f001 fe04 	bl	80051c4 <__ssprint_r>
 80035bc:	2800      	cmp	r0, #0
 80035be:	f040 8202 	bne.w	80039c6 <_svfprintf_r+0xeba>
 80035c2:	ac2e      	add	r4, sp, #184	; 0xb8
 80035c4:	e7db      	b.n	800357e <_svfprintf_r+0xa72>
 80035c6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80035c8:	f8c4 8004 	str.w	r8, [r4, #4]
 80035cc:	3310      	adds	r3, #16
 80035ce:	9323      	str	r3, [sp, #140]	; 0x8c
 80035d0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80035d2:	3301      	adds	r3, #1
 80035d4:	2b07      	cmp	r3, #7
 80035d6:	9322      	str	r3, [sp, #136]	; 0x88
 80035d8:	dc02      	bgt.n	80035e0 <_svfprintf_r+0xad4>
 80035da:	3408      	adds	r4, #8
 80035dc:	3e10      	subs	r6, #16
 80035de:	e7d6      	b.n	800358e <_svfprintf_r+0xa82>
 80035e0:	aa21      	add	r2, sp, #132	; 0x84
 80035e2:	4649      	mov	r1, r9
 80035e4:	4650      	mov	r0, sl
 80035e6:	f001 fded 	bl	80051c4 <__ssprint_r>
 80035ea:	2800      	cmp	r0, #0
 80035ec:	f040 81eb 	bne.w	80039c6 <_svfprintf_r+0xeba>
 80035f0:	ac2e      	add	r4, sp, #184	; 0xb8
 80035f2:	e7f3      	b.n	80035dc <_svfprintf_r+0xad0>
 80035f4:	08006535 	.word	0x08006535
 80035f8:	08006546 	.word	0x08006546
 80035fc:	08006558 	.word	0x08006558
 8003600:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8003602:	2b00      	cmp	r3, #0
 8003604:	dc7a      	bgt.n	80036fc <_svfprintf_r+0xbf0>
 8003606:	4b9b      	ldr	r3, [pc, #620]	; (8003874 <_svfprintf_r+0xd68>)
 8003608:	6023      	str	r3, [r4, #0]
 800360a:	2301      	movs	r3, #1
 800360c:	6063      	str	r3, [r4, #4]
 800360e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8003610:	3301      	adds	r3, #1
 8003612:	9323      	str	r3, [sp, #140]	; 0x8c
 8003614:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8003616:	3301      	adds	r3, #1
 8003618:	2b07      	cmp	r3, #7
 800361a:	9322      	str	r3, [sp, #136]	; 0x88
 800361c:	dc44      	bgt.n	80036a8 <_svfprintf_r+0xb9c>
 800361e:	3408      	adds	r4, #8
 8003620:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8003622:	b923      	cbnz	r3, 800362e <_svfprintf_r+0xb22>
 8003624:	9b07      	ldr	r3, [sp, #28]
 8003626:	b913      	cbnz	r3, 800362e <_svfprintf_r+0xb22>
 8003628:	07e8      	lsls	r0, r5, #31
 800362a:	f57f ad9c 	bpl.w	8003166 <_svfprintf_r+0x65a>
 800362e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8003630:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8003632:	6023      	str	r3, [r4, #0]
 8003634:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003636:	6063      	str	r3, [r4, #4]
 8003638:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800363a:	4413      	add	r3, r2
 800363c:	9323      	str	r3, [sp, #140]	; 0x8c
 800363e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8003640:	3301      	adds	r3, #1
 8003642:	2b07      	cmp	r3, #7
 8003644:	9322      	str	r3, [sp, #136]	; 0x88
 8003646:	dc39      	bgt.n	80036bc <_svfprintf_r+0xbb0>
 8003648:	f104 0308 	add.w	r3, r4, #8
 800364c:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
 800364e:	2e00      	cmp	r6, #0
 8003650:	da19      	bge.n	8003686 <_svfprintf_r+0xb7a>
 8003652:	2410      	movs	r4, #16
 8003654:	4f88      	ldr	r7, [pc, #544]	; (8003878 <_svfprintf_r+0xd6c>)
 8003656:	4276      	negs	r6, r6
 8003658:	2e10      	cmp	r6, #16
 800365a:	601f      	str	r7, [r3, #0]
 800365c:	dc38      	bgt.n	80036d0 <_svfprintf_r+0xbc4>
 800365e:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8003660:	605e      	str	r6, [r3, #4]
 8003662:	4416      	add	r6, r2
 8003664:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8003666:	9623      	str	r6, [sp, #140]	; 0x8c
 8003668:	3201      	adds	r2, #1
 800366a:	2a07      	cmp	r2, #7
 800366c:	f103 0308 	add.w	r3, r3, #8
 8003670:	9222      	str	r2, [sp, #136]	; 0x88
 8003672:	dd08      	ble.n	8003686 <_svfprintf_r+0xb7a>
 8003674:	aa21      	add	r2, sp, #132	; 0x84
 8003676:	4649      	mov	r1, r9
 8003678:	4650      	mov	r0, sl
 800367a:	f001 fda3 	bl	80051c4 <__ssprint_r>
 800367e:	2800      	cmp	r0, #0
 8003680:	f040 81a1 	bne.w	80039c6 <_svfprintf_r+0xeba>
 8003684:	ab2e      	add	r3, sp, #184	; 0xb8
 8003686:	9a07      	ldr	r2, [sp, #28]
 8003688:	9907      	ldr	r1, [sp, #28]
 800368a:	605a      	str	r2, [r3, #4]
 800368c:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 800368e:	f8c3 8000 	str.w	r8, [r3]
 8003692:	440a      	add	r2, r1
 8003694:	9223      	str	r2, [sp, #140]	; 0x8c
 8003696:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8003698:	3201      	adds	r2, #1
 800369a:	2a07      	cmp	r2, #7
 800369c:	9222      	str	r2, [sp, #136]	; 0x88
 800369e:	f73f ad59 	bgt.w	8003154 <_svfprintf_r+0x648>
 80036a2:	f103 0408 	add.w	r4, r3, #8
 80036a6:	e55e      	b.n	8003166 <_svfprintf_r+0x65a>
 80036a8:	aa21      	add	r2, sp, #132	; 0x84
 80036aa:	4649      	mov	r1, r9
 80036ac:	4650      	mov	r0, sl
 80036ae:	f001 fd89 	bl	80051c4 <__ssprint_r>
 80036b2:	2800      	cmp	r0, #0
 80036b4:	f040 8187 	bne.w	80039c6 <_svfprintf_r+0xeba>
 80036b8:	ac2e      	add	r4, sp, #184	; 0xb8
 80036ba:	e7b1      	b.n	8003620 <_svfprintf_r+0xb14>
 80036bc:	aa21      	add	r2, sp, #132	; 0x84
 80036be:	4649      	mov	r1, r9
 80036c0:	4650      	mov	r0, sl
 80036c2:	f001 fd7f 	bl	80051c4 <__ssprint_r>
 80036c6:	2800      	cmp	r0, #0
 80036c8:	f040 817d 	bne.w	80039c6 <_svfprintf_r+0xeba>
 80036cc:	ab2e      	add	r3, sp, #184	; 0xb8
 80036ce:	e7bd      	b.n	800364c <_svfprintf_r+0xb40>
 80036d0:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80036d2:	605c      	str	r4, [r3, #4]
 80036d4:	3210      	adds	r2, #16
 80036d6:	9223      	str	r2, [sp, #140]	; 0x8c
 80036d8:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80036da:	3201      	adds	r2, #1
 80036dc:	2a07      	cmp	r2, #7
 80036de:	9222      	str	r2, [sp, #136]	; 0x88
 80036e0:	dc02      	bgt.n	80036e8 <_svfprintf_r+0xbdc>
 80036e2:	3308      	adds	r3, #8
 80036e4:	3e10      	subs	r6, #16
 80036e6:	e7b7      	b.n	8003658 <_svfprintf_r+0xb4c>
 80036e8:	aa21      	add	r2, sp, #132	; 0x84
 80036ea:	4649      	mov	r1, r9
 80036ec:	4650      	mov	r0, sl
 80036ee:	f001 fd69 	bl	80051c4 <__ssprint_r>
 80036f2:	2800      	cmp	r0, #0
 80036f4:	f040 8167 	bne.w	80039c6 <_svfprintf_r+0xeba>
 80036f8:	ab2e      	add	r3, sp, #184	; 0xb8
 80036fa:	e7f3      	b.n	80036e4 <_svfprintf_r+0xbd8>
 80036fc:	9b07      	ldr	r3, [sp, #28]
 80036fe:	42bb      	cmp	r3, r7
 8003700:	bfa8      	it	ge
 8003702:	463b      	movge	r3, r7
 8003704:	2b00      	cmp	r3, #0
 8003706:	461e      	mov	r6, r3
 8003708:	dd0b      	ble.n	8003722 <_svfprintf_r+0xc16>
 800370a:	6063      	str	r3, [r4, #4]
 800370c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800370e:	f8c4 8000 	str.w	r8, [r4]
 8003712:	4433      	add	r3, r6
 8003714:	9323      	str	r3, [sp, #140]	; 0x8c
 8003716:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8003718:	3301      	adds	r3, #1
 800371a:	2b07      	cmp	r3, #7
 800371c:	9322      	str	r3, [sp, #136]	; 0x88
 800371e:	dc5f      	bgt.n	80037e0 <_svfprintf_r+0xcd4>
 8003720:	3408      	adds	r4, #8
 8003722:	2e00      	cmp	r6, #0
 8003724:	bfb4      	ite	lt
 8003726:	463e      	movlt	r6, r7
 8003728:	1bbe      	subge	r6, r7, r6
 800372a:	2e00      	cmp	r6, #0
 800372c:	dd0f      	ble.n	800374e <_svfprintf_r+0xc42>
 800372e:	f8df b148 	ldr.w	fp, [pc, #328]	; 8003878 <_svfprintf_r+0xd6c>
 8003732:	2e10      	cmp	r6, #16
 8003734:	f8c4 b000 	str.w	fp, [r4]
 8003738:	dc5c      	bgt.n	80037f4 <_svfprintf_r+0xce8>
 800373a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800373c:	6066      	str	r6, [r4, #4]
 800373e:	441e      	add	r6, r3
 8003740:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8003742:	9623      	str	r6, [sp, #140]	; 0x8c
 8003744:	3301      	adds	r3, #1
 8003746:	2b07      	cmp	r3, #7
 8003748:	9322      	str	r3, [sp, #136]	; 0x88
 800374a:	dc6a      	bgt.n	8003822 <_svfprintf_r+0xd16>
 800374c:	3408      	adds	r4, #8
 800374e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8003750:	9a07      	ldr	r2, [sp, #28]
 8003752:	4293      	cmp	r3, r2
 8003754:	db01      	blt.n	800375a <_svfprintf_r+0xc4e>
 8003756:	07e9      	lsls	r1, r5, #31
 8003758:	d50d      	bpl.n	8003776 <_svfprintf_r+0xc6a>
 800375a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800375c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800375e:	6023      	str	r3, [r4, #0]
 8003760:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003762:	6063      	str	r3, [r4, #4]
 8003764:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8003766:	4413      	add	r3, r2
 8003768:	9323      	str	r3, [sp, #140]	; 0x8c
 800376a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800376c:	3301      	adds	r3, #1
 800376e:	2b07      	cmp	r3, #7
 8003770:	9322      	str	r3, [sp, #136]	; 0x88
 8003772:	dc60      	bgt.n	8003836 <_svfprintf_r+0xd2a>
 8003774:	3408      	adds	r4, #8
 8003776:	9b07      	ldr	r3, [sp, #28]
 8003778:	9a07      	ldr	r2, [sp, #28]
 800377a:	1bde      	subs	r6, r3, r7
 800377c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800377e:	1ad3      	subs	r3, r2, r3
 8003780:	429e      	cmp	r6, r3
 8003782:	bfa8      	it	ge
 8003784:	461e      	movge	r6, r3
 8003786:	2e00      	cmp	r6, #0
 8003788:	dd0b      	ble.n	80037a2 <_svfprintf_r+0xc96>
 800378a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800378c:	4447      	add	r7, r8
 800378e:	4433      	add	r3, r6
 8003790:	9323      	str	r3, [sp, #140]	; 0x8c
 8003792:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8003794:	6027      	str	r7, [r4, #0]
 8003796:	3301      	adds	r3, #1
 8003798:	2b07      	cmp	r3, #7
 800379a:	6066      	str	r6, [r4, #4]
 800379c:	9322      	str	r3, [sp, #136]	; 0x88
 800379e:	dc54      	bgt.n	800384a <_svfprintf_r+0xd3e>
 80037a0:	3408      	adds	r4, #8
 80037a2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80037a4:	9a07      	ldr	r2, [sp, #28]
 80037a6:	2e00      	cmp	r6, #0
 80037a8:	eba2 0303 	sub.w	r3, r2, r3
 80037ac:	bfb4      	ite	lt
 80037ae:	461e      	movlt	r6, r3
 80037b0:	1b9e      	subge	r6, r3, r6
 80037b2:	2e00      	cmp	r6, #0
 80037b4:	f77f acd7 	ble.w	8003166 <_svfprintf_r+0x65a>
 80037b8:	f04f 0810 	mov.w	r8, #16
 80037bc:	4f2e      	ldr	r7, [pc, #184]	; (8003878 <_svfprintf_r+0xd6c>)
 80037be:	2e10      	cmp	r6, #16
 80037c0:	6027      	str	r7, [r4, #0]
 80037c2:	f77f aee7 	ble.w	8003594 <_svfprintf_r+0xa88>
 80037c6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80037c8:	f8c4 8004 	str.w	r8, [r4, #4]
 80037cc:	3310      	adds	r3, #16
 80037ce:	9323      	str	r3, [sp, #140]	; 0x8c
 80037d0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80037d2:	3301      	adds	r3, #1
 80037d4:	2b07      	cmp	r3, #7
 80037d6:	9322      	str	r3, [sp, #136]	; 0x88
 80037d8:	dc41      	bgt.n	800385e <_svfprintf_r+0xd52>
 80037da:	3408      	adds	r4, #8
 80037dc:	3e10      	subs	r6, #16
 80037de:	e7ee      	b.n	80037be <_svfprintf_r+0xcb2>
 80037e0:	aa21      	add	r2, sp, #132	; 0x84
 80037e2:	4649      	mov	r1, r9
 80037e4:	4650      	mov	r0, sl
 80037e6:	f001 fced 	bl	80051c4 <__ssprint_r>
 80037ea:	2800      	cmp	r0, #0
 80037ec:	f040 80eb 	bne.w	80039c6 <_svfprintf_r+0xeba>
 80037f0:	ac2e      	add	r4, sp, #184	; 0xb8
 80037f2:	e796      	b.n	8003722 <_svfprintf_r+0xc16>
 80037f4:	2310      	movs	r3, #16
 80037f6:	6063      	str	r3, [r4, #4]
 80037f8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80037fa:	3310      	adds	r3, #16
 80037fc:	9323      	str	r3, [sp, #140]	; 0x8c
 80037fe:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8003800:	3301      	adds	r3, #1
 8003802:	2b07      	cmp	r3, #7
 8003804:	9322      	str	r3, [sp, #136]	; 0x88
 8003806:	dc02      	bgt.n	800380e <_svfprintf_r+0xd02>
 8003808:	3408      	adds	r4, #8
 800380a:	3e10      	subs	r6, #16
 800380c:	e791      	b.n	8003732 <_svfprintf_r+0xc26>
 800380e:	aa21      	add	r2, sp, #132	; 0x84
 8003810:	4649      	mov	r1, r9
 8003812:	4650      	mov	r0, sl
 8003814:	f001 fcd6 	bl	80051c4 <__ssprint_r>
 8003818:	2800      	cmp	r0, #0
 800381a:	f040 80d4 	bne.w	80039c6 <_svfprintf_r+0xeba>
 800381e:	ac2e      	add	r4, sp, #184	; 0xb8
 8003820:	e7f3      	b.n	800380a <_svfprintf_r+0xcfe>
 8003822:	aa21      	add	r2, sp, #132	; 0x84
 8003824:	4649      	mov	r1, r9
 8003826:	4650      	mov	r0, sl
 8003828:	f001 fccc 	bl	80051c4 <__ssprint_r>
 800382c:	2800      	cmp	r0, #0
 800382e:	f040 80ca 	bne.w	80039c6 <_svfprintf_r+0xeba>
 8003832:	ac2e      	add	r4, sp, #184	; 0xb8
 8003834:	e78b      	b.n	800374e <_svfprintf_r+0xc42>
 8003836:	aa21      	add	r2, sp, #132	; 0x84
 8003838:	4649      	mov	r1, r9
 800383a:	4650      	mov	r0, sl
 800383c:	f001 fcc2 	bl	80051c4 <__ssprint_r>
 8003840:	2800      	cmp	r0, #0
 8003842:	f040 80c0 	bne.w	80039c6 <_svfprintf_r+0xeba>
 8003846:	ac2e      	add	r4, sp, #184	; 0xb8
 8003848:	e795      	b.n	8003776 <_svfprintf_r+0xc6a>
 800384a:	aa21      	add	r2, sp, #132	; 0x84
 800384c:	4649      	mov	r1, r9
 800384e:	4650      	mov	r0, sl
 8003850:	f001 fcb8 	bl	80051c4 <__ssprint_r>
 8003854:	2800      	cmp	r0, #0
 8003856:	f040 80b6 	bne.w	80039c6 <_svfprintf_r+0xeba>
 800385a:	ac2e      	add	r4, sp, #184	; 0xb8
 800385c:	e7a1      	b.n	80037a2 <_svfprintf_r+0xc96>
 800385e:	aa21      	add	r2, sp, #132	; 0x84
 8003860:	4649      	mov	r1, r9
 8003862:	4650      	mov	r0, sl
 8003864:	f001 fcae 	bl	80051c4 <__ssprint_r>
 8003868:	2800      	cmp	r0, #0
 800386a:	f040 80ac 	bne.w	80039c6 <_svfprintf_r+0xeba>
 800386e:	ac2e      	add	r4, sp, #184	; 0xb8
 8003870:	e7b4      	b.n	80037dc <_svfprintf_r+0xcd0>
 8003872:	bf00      	nop
 8003874:	08006546 	.word	0x08006546
 8003878:	08006558 	.word	0x08006558
 800387c:	9b07      	ldr	r3, [sp, #28]
 800387e:	2b01      	cmp	r3, #1
 8003880:	dc01      	bgt.n	8003886 <_svfprintf_r+0xd7a>
 8003882:	07ea      	lsls	r2, r5, #31
 8003884:	d576      	bpl.n	8003974 <_svfprintf_r+0xe68>
 8003886:	2301      	movs	r3, #1
 8003888:	6063      	str	r3, [r4, #4]
 800388a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800388c:	f8c4 8000 	str.w	r8, [r4]
 8003890:	3301      	adds	r3, #1
 8003892:	9323      	str	r3, [sp, #140]	; 0x8c
 8003894:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8003896:	3301      	adds	r3, #1
 8003898:	2b07      	cmp	r3, #7
 800389a:	9322      	str	r3, [sp, #136]	; 0x88
 800389c:	dc36      	bgt.n	800390c <_svfprintf_r+0xe00>
 800389e:	3408      	adds	r4, #8
 80038a0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80038a2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80038a4:	6023      	str	r3, [r4, #0]
 80038a6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80038a8:	6063      	str	r3, [r4, #4]
 80038aa:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80038ac:	4413      	add	r3, r2
 80038ae:	9323      	str	r3, [sp, #140]	; 0x8c
 80038b0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80038b2:	3301      	adds	r3, #1
 80038b4:	2b07      	cmp	r3, #7
 80038b6:	9322      	str	r3, [sp, #136]	; 0x88
 80038b8:	dc31      	bgt.n	800391e <_svfprintf_r+0xe12>
 80038ba:	3408      	adds	r4, #8
 80038bc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80038be:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80038c0:	980d      	ldr	r0, [sp, #52]	; 0x34
 80038c2:	990e      	ldr	r1, [sp, #56]	; 0x38
 80038c4:	f7fd f86c 	bl	80009a0 <__aeabi_dcmpeq>
 80038c8:	9b07      	ldr	r3, [sp, #28]
 80038ca:	1e5e      	subs	r6, r3, #1
 80038cc:	2800      	cmp	r0, #0
 80038ce:	d12f      	bne.n	8003930 <_svfprintf_r+0xe24>
 80038d0:	f108 0301 	add.w	r3, r8, #1
 80038d4:	e884 0048 	stmia.w	r4, {r3, r6}
 80038d8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80038da:	9a07      	ldr	r2, [sp, #28]
 80038dc:	3b01      	subs	r3, #1
 80038de:	4413      	add	r3, r2
 80038e0:	9323      	str	r3, [sp, #140]	; 0x8c
 80038e2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80038e4:	3301      	adds	r3, #1
 80038e6:	2b07      	cmp	r3, #7
 80038e8:	9322      	str	r3, [sp, #136]	; 0x88
 80038ea:	dd4a      	ble.n	8003982 <_svfprintf_r+0xe76>
 80038ec:	aa21      	add	r2, sp, #132	; 0x84
 80038ee:	4649      	mov	r1, r9
 80038f0:	4650      	mov	r0, sl
 80038f2:	f001 fc67 	bl	80051c4 <__ssprint_r>
 80038f6:	2800      	cmp	r0, #0
 80038f8:	d165      	bne.n	80039c6 <_svfprintf_r+0xeba>
 80038fa:	ac2e      	add	r4, sp, #184	; 0xb8
 80038fc:	ab1d      	add	r3, sp, #116	; 0x74
 80038fe:	6023      	str	r3, [r4, #0]
 8003900:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8003902:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8003904:	6063      	str	r3, [r4, #4]
 8003906:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8003908:	4413      	add	r3, r2
 800390a:	e41c      	b.n	8003146 <_svfprintf_r+0x63a>
 800390c:	aa21      	add	r2, sp, #132	; 0x84
 800390e:	4649      	mov	r1, r9
 8003910:	4650      	mov	r0, sl
 8003912:	f001 fc57 	bl	80051c4 <__ssprint_r>
 8003916:	2800      	cmp	r0, #0
 8003918:	d155      	bne.n	80039c6 <_svfprintf_r+0xeba>
 800391a:	ac2e      	add	r4, sp, #184	; 0xb8
 800391c:	e7c0      	b.n	80038a0 <_svfprintf_r+0xd94>
 800391e:	aa21      	add	r2, sp, #132	; 0x84
 8003920:	4649      	mov	r1, r9
 8003922:	4650      	mov	r0, sl
 8003924:	f001 fc4e 	bl	80051c4 <__ssprint_r>
 8003928:	2800      	cmp	r0, #0
 800392a:	d14c      	bne.n	80039c6 <_svfprintf_r+0xeba>
 800392c:	ac2e      	add	r4, sp, #184	; 0xb8
 800392e:	e7c5      	b.n	80038bc <_svfprintf_r+0xdb0>
 8003930:	2e00      	cmp	r6, #0
 8003932:	dde3      	ble.n	80038fc <_svfprintf_r+0xdf0>
 8003934:	f04f 0810 	mov.w	r8, #16
 8003938:	4f58      	ldr	r7, [pc, #352]	; (8003a9c <_svfprintf_r+0xf90>)
 800393a:	2e10      	cmp	r6, #16
 800393c:	6027      	str	r7, [r4, #0]
 800393e:	dc04      	bgt.n	800394a <_svfprintf_r+0xe3e>
 8003940:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8003942:	6066      	str	r6, [r4, #4]
 8003944:	441e      	add	r6, r3
 8003946:	9623      	str	r6, [sp, #140]	; 0x8c
 8003948:	e7cb      	b.n	80038e2 <_svfprintf_r+0xdd6>
 800394a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800394c:	f8c4 8004 	str.w	r8, [r4, #4]
 8003950:	3310      	adds	r3, #16
 8003952:	9323      	str	r3, [sp, #140]	; 0x8c
 8003954:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8003956:	3301      	adds	r3, #1
 8003958:	2b07      	cmp	r3, #7
 800395a:	9322      	str	r3, [sp, #136]	; 0x88
 800395c:	dc02      	bgt.n	8003964 <_svfprintf_r+0xe58>
 800395e:	3408      	adds	r4, #8
 8003960:	3e10      	subs	r6, #16
 8003962:	e7ea      	b.n	800393a <_svfprintf_r+0xe2e>
 8003964:	aa21      	add	r2, sp, #132	; 0x84
 8003966:	4649      	mov	r1, r9
 8003968:	4650      	mov	r0, sl
 800396a:	f001 fc2b 	bl	80051c4 <__ssprint_r>
 800396e:	bb50      	cbnz	r0, 80039c6 <_svfprintf_r+0xeba>
 8003970:	ac2e      	add	r4, sp, #184	; 0xb8
 8003972:	e7f5      	b.n	8003960 <_svfprintf_r+0xe54>
 8003974:	2301      	movs	r3, #1
 8003976:	6063      	str	r3, [r4, #4]
 8003978:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800397a:	f8c4 8000 	str.w	r8, [r4]
 800397e:	3301      	adds	r3, #1
 8003980:	e7ae      	b.n	80038e0 <_svfprintf_r+0xdd4>
 8003982:	3408      	adds	r4, #8
 8003984:	e7ba      	b.n	80038fc <_svfprintf_r+0xdf0>
 8003986:	3408      	adds	r4, #8
 8003988:	f7ff bbed 	b.w	8003166 <_svfprintf_r+0x65a>
 800398c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800398e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8003990:	1a9d      	subs	r5, r3, r2
 8003992:	2d00      	cmp	r5, #0
 8003994:	f77f abea 	ble.w	800316c <_svfprintf_r+0x660>
 8003998:	2610      	movs	r6, #16
 800399a:	4b41      	ldr	r3, [pc, #260]	; (8003aa0 <_svfprintf_r+0xf94>)
 800399c:	2d10      	cmp	r5, #16
 800399e:	6023      	str	r3, [r4, #0]
 80039a0:	dc1b      	bgt.n	80039da <_svfprintf_r+0xece>
 80039a2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80039a4:	6065      	str	r5, [r4, #4]
 80039a6:	441d      	add	r5, r3
 80039a8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80039aa:	9523      	str	r5, [sp, #140]	; 0x8c
 80039ac:	3301      	adds	r3, #1
 80039ae:	2b07      	cmp	r3, #7
 80039b0:	9322      	str	r3, [sp, #136]	; 0x88
 80039b2:	f77f abdb 	ble.w	800316c <_svfprintf_r+0x660>
 80039b6:	aa21      	add	r2, sp, #132	; 0x84
 80039b8:	4649      	mov	r1, r9
 80039ba:	4650      	mov	r0, sl
 80039bc:	f001 fc02 	bl	80051c4 <__ssprint_r>
 80039c0:	2800      	cmp	r0, #0
 80039c2:	f43f abd3 	beq.w	800316c <_svfprintf_r+0x660>
 80039c6:	f8b9 300c 	ldrh.w	r3, [r9, #12]
 80039ca:	f013 0f40 	tst.w	r3, #64	; 0x40
 80039ce:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80039d0:	bf18      	it	ne
 80039d2:	f04f 33ff 	movne.w	r3, #4294967295
 80039d6:	f7ff b8bd 	b.w	8002b54 <_svfprintf_r+0x48>
 80039da:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80039dc:	6066      	str	r6, [r4, #4]
 80039de:	3310      	adds	r3, #16
 80039e0:	9323      	str	r3, [sp, #140]	; 0x8c
 80039e2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80039e4:	3301      	adds	r3, #1
 80039e6:	2b07      	cmp	r3, #7
 80039e8:	9322      	str	r3, [sp, #136]	; 0x88
 80039ea:	dc02      	bgt.n	80039f2 <_svfprintf_r+0xee6>
 80039ec:	3408      	adds	r4, #8
 80039ee:	3d10      	subs	r5, #16
 80039f0:	e7d3      	b.n	800399a <_svfprintf_r+0xe8e>
 80039f2:	aa21      	add	r2, sp, #132	; 0x84
 80039f4:	4649      	mov	r1, r9
 80039f6:	4650      	mov	r0, sl
 80039f8:	f001 fbe4 	bl	80051c4 <__ssprint_r>
 80039fc:	2800      	cmp	r0, #0
 80039fe:	d1e2      	bne.n	80039c6 <_svfprintf_r+0xeba>
 8003a00:	ac2e      	add	r4, sp, #184	; 0xb8
 8003a02:	e7f4      	b.n	80039ee <_svfprintf_r+0xee2>
 8003a04:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8003a06:	2b00      	cmp	r3, #0
 8003a08:	d0dd      	beq.n	80039c6 <_svfprintf_r+0xeba>
 8003a0a:	aa21      	add	r2, sp, #132	; 0x84
 8003a0c:	4649      	mov	r1, r9
 8003a0e:	4650      	mov	r0, sl
 8003a10:	f001 fbd8 	bl	80051c4 <__ssprint_r>
 8003a14:	e7d7      	b.n	80039c6 <_svfprintf_r+0xeba>
 8003a16:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8003a18:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8003a1a:	980d      	ldr	r0, [sp, #52]	; 0x34
 8003a1c:	990e      	ldr	r1, [sp, #56]	; 0x38
 8003a1e:	f7fc fff1 	bl	8000a04 <__aeabi_dcmpun>
 8003a22:	2800      	cmp	r0, #0
 8003a24:	f43f aa3d 	beq.w	8002ea2 <_svfprintf_r+0x396>
 8003a28:	4b1e      	ldr	r3, [pc, #120]	; (8003aa4 <_svfprintf_r+0xf98>)
 8003a2a:	4a1f      	ldr	r2, [pc, #124]	; (8003aa8 <_svfprintf_r+0xf9c>)
 8003a2c:	f7ff ba2d 	b.w	8002e8a <_svfprintf_r+0x37e>
 8003a30:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8003a32:	eba3 0308 	sub.w	r3, r3, r8
 8003a36:	9307      	str	r3, [sp, #28]
 8003a38:	f7ff baaf 	b.w	8002f9a <_svfprintf_r+0x48e>
 8003a3c:	ea56 0207 	orrs.w	r2, r6, r7
 8003a40:	950f      	str	r5, [sp, #60]	; 0x3c
 8003a42:	f43f ac2b 	beq.w	800329c <_svfprintf_r+0x790>
 8003a46:	2b01      	cmp	r3, #1
 8003a48:	f43f ac9d 	beq.w	8003386 <_svfprintf_r+0x87a>
 8003a4c:	2b02      	cmp	r3, #2
 8003a4e:	f43f acbd 	beq.w	80033cc <_svfprintf_r+0x8c0>
 8003a52:	ab2e      	add	r3, sp, #184	; 0xb8
 8003a54:	08f1      	lsrs	r1, r6, #3
 8003a56:	ea41 7147 	orr.w	r1, r1, r7, lsl #29
 8003a5a:	08f8      	lsrs	r0, r7, #3
 8003a5c:	f006 0207 	and.w	r2, r6, #7
 8003a60:	4607      	mov	r7, r0
 8003a62:	460e      	mov	r6, r1
 8003a64:	3230      	adds	r2, #48	; 0x30
 8003a66:	ea56 0107 	orrs.w	r1, r6, r7
 8003a6a:	f103 38ff 	add.w	r8, r3, #4294967295
 8003a6e:	f803 2c01 	strb.w	r2, [r3, #-1]
 8003a72:	f47f ac86 	bne.w	8003382 <_svfprintf_r+0x876>
 8003a76:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8003a78:	07c9      	lsls	r1, r1, #31
 8003a7a:	d506      	bpl.n	8003a8a <_svfprintf_r+0xf7e>
 8003a7c:	2a30      	cmp	r2, #48	; 0x30
 8003a7e:	d004      	beq.n	8003a8a <_svfprintf_r+0xf7e>
 8003a80:	2230      	movs	r2, #48	; 0x30
 8003a82:	f808 2c01 	strb.w	r2, [r8, #-1]
 8003a86:	f1a3 0802 	sub.w	r8, r3, #2
 8003a8a:	ab2e      	add	r3, sp, #184	; 0xb8
 8003a8c:	465e      	mov	r6, fp
 8003a8e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8003a90:	eba3 0b08 	sub.w	fp, r3, r8
 8003a94:	2700      	movs	r7, #0
 8003a96:	f7ff bace 	b.w	8003036 <_svfprintf_r+0x52a>
 8003a9a:	bf00      	nop
 8003a9c:	08006558 	.word	0x08006558
 8003aa0:	08006548 	.word	0x08006548
 8003aa4:	0800651c 	.word	0x0800651c
 8003aa8:	08006520 	.word	0x08006520

08003aac <quorem>:
 8003aac:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003ab0:	6903      	ldr	r3, [r0, #16]
 8003ab2:	690c      	ldr	r4, [r1, #16]
 8003ab4:	4680      	mov	r8, r0
 8003ab6:	429c      	cmp	r4, r3
 8003ab8:	f300 8082 	bgt.w	8003bc0 <quorem+0x114>
 8003abc:	3c01      	subs	r4, #1
 8003abe:	f101 0714 	add.w	r7, r1, #20
 8003ac2:	f100 0614 	add.w	r6, r0, #20
 8003ac6:	f857 5024 	ldr.w	r5, [r7, r4, lsl #2]
 8003aca:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
 8003ace:	3501      	adds	r5, #1
 8003ad0:	fbb0 f5f5 	udiv	r5, r0, r5
 8003ad4:	ea4f 0e84 	mov.w	lr, r4, lsl #2
 8003ad8:	eb06 030e 	add.w	r3, r6, lr
 8003adc:	eb07 090e 	add.w	r9, r7, lr
 8003ae0:	9301      	str	r3, [sp, #4]
 8003ae2:	b38d      	cbz	r5, 8003b48 <quorem+0x9c>
 8003ae4:	f04f 0a00 	mov.w	sl, #0
 8003ae8:	4638      	mov	r0, r7
 8003aea:	46b4      	mov	ip, r6
 8003aec:	46d3      	mov	fp, sl
 8003aee:	f850 2b04 	ldr.w	r2, [r0], #4
 8003af2:	b293      	uxth	r3, r2
 8003af4:	fb05 a303 	mla	r3, r5, r3, sl
 8003af8:	0c12      	lsrs	r2, r2, #16
 8003afa:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8003afe:	fb05 a202 	mla	r2, r5, r2, sl
 8003b02:	b29b      	uxth	r3, r3
 8003b04:	ebab 0303 	sub.w	r3, fp, r3
 8003b08:	f8bc b000 	ldrh.w	fp, [ip]
 8003b0c:	ea4f 4a12 	mov.w	sl, r2, lsr #16
 8003b10:	445b      	add	r3, fp
 8003b12:	fa1f fb82 	uxth.w	fp, r2
 8003b16:	f8dc 2000 	ldr.w	r2, [ip]
 8003b1a:	4581      	cmp	r9, r0
 8003b1c:	ebcb 4212 	rsb	r2, fp, r2, lsr #16
 8003b20:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8003b24:	b29b      	uxth	r3, r3
 8003b26:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8003b2a:	ea4f 4b22 	mov.w	fp, r2, asr #16
 8003b2e:	f84c 3b04 	str.w	r3, [ip], #4
 8003b32:	d2dc      	bcs.n	8003aee <quorem+0x42>
 8003b34:	f856 300e 	ldr.w	r3, [r6, lr]
 8003b38:	b933      	cbnz	r3, 8003b48 <quorem+0x9c>
 8003b3a:	9b01      	ldr	r3, [sp, #4]
 8003b3c:	3b04      	subs	r3, #4
 8003b3e:	429e      	cmp	r6, r3
 8003b40:	461a      	mov	r2, r3
 8003b42:	d331      	bcc.n	8003ba8 <quorem+0xfc>
 8003b44:	f8c8 4010 	str.w	r4, [r8, #16]
 8003b48:	4640      	mov	r0, r8
 8003b4a:	f001 fa62 	bl	8005012 <__mcmp>
 8003b4e:	2800      	cmp	r0, #0
 8003b50:	db26      	blt.n	8003ba0 <quorem+0xf4>
 8003b52:	4630      	mov	r0, r6
 8003b54:	f04f 0e00 	mov.w	lr, #0
 8003b58:	3501      	adds	r5, #1
 8003b5a:	f857 1b04 	ldr.w	r1, [r7], #4
 8003b5e:	f8d0 c000 	ldr.w	ip, [r0]
 8003b62:	b28b      	uxth	r3, r1
 8003b64:	ebae 0303 	sub.w	r3, lr, r3
 8003b68:	fa1f f28c 	uxth.w	r2, ip
 8003b6c:	4413      	add	r3, r2
 8003b6e:	0c0a      	lsrs	r2, r1, #16
 8003b70:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
 8003b74:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8003b78:	b29b      	uxth	r3, r3
 8003b7a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8003b7e:	45b9      	cmp	r9, r7
 8003b80:	ea4f 4e22 	mov.w	lr, r2, asr #16
 8003b84:	f840 3b04 	str.w	r3, [r0], #4
 8003b88:	d2e7      	bcs.n	8003b5a <quorem+0xae>
 8003b8a:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
 8003b8e:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 8003b92:	b92a      	cbnz	r2, 8003ba0 <quorem+0xf4>
 8003b94:	3b04      	subs	r3, #4
 8003b96:	429e      	cmp	r6, r3
 8003b98:	461a      	mov	r2, r3
 8003b9a:	d30b      	bcc.n	8003bb4 <quorem+0x108>
 8003b9c:	f8c8 4010 	str.w	r4, [r8, #16]
 8003ba0:	4628      	mov	r0, r5
 8003ba2:	b003      	add	sp, #12
 8003ba4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003ba8:	6812      	ldr	r2, [r2, #0]
 8003baa:	3b04      	subs	r3, #4
 8003bac:	2a00      	cmp	r2, #0
 8003bae:	d1c9      	bne.n	8003b44 <quorem+0x98>
 8003bb0:	3c01      	subs	r4, #1
 8003bb2:	e7c4      	b.n	8003b3e <quorem+0x92>
 8003bb4:	6812      	ldr	r2, [r2, #0]
 8003bb6:	3b04      	subs	r3, #4
 8003bb8:	2a00      	cmp	r2, #0
 8003bba:	d1ef      	bne.n	8003b9c <quorem+0xf0>
 8003bbc:	3c01      	subs	r4, #1
 8003bbe:	e7ea      	b.n	8003b96 <quorem+0xea>
 8003bc0:	2000      	movs	r0, #0
 8003bc2:	e7ee      	b.n	8003ba2 <quorem+0xf6>
 8003bc4:	0000      	movs	r0, r0
	...

08003bc8 <_dtoa_r>:
 8003bc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003bcc:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8003bce:	b095      	sub	sp, #84	; 0x54
 8003bd0:	4604      	mov	r4, r0
 8003bd2:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8003bd4:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8003bd8:	b93e      	cbnz	r6, 8003bea <_dtoa_r+0x22>
 8003bda:	2010      	movs	r0, #16
 8003bdc:	f000 fdd6 	bl	800478c <malloc>
 8003be0:	6260      	str	r0, [r4, #36]	; 0x24
 8003be2:	6046      	str	r6, [r0, #4]
 8003be4:	6086      	str	r6, [r0, #8]
 8003be6:	6006      	str	r6, [r0, #0]
 8003be8:	60c6      	str	r6, [r0, #12]
 8003bea:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003bec:	6819      	ldr	r1, [r3, #0]
 8003bee:	b151      	cbz	r1, 8003c06 <_dtoa_r+0x3e>
 8003bf0:	685a      	ldr	r2, [r3, #4]
 8003bf2:	2301      	movs	r3, #1
 8003bf4:	4093      	lsls	r3, r2
 8003bf6:	604a      	str	r2, [r1, #4]
 8003bf8:	608b      	str	r3, [r1, #8]
 8003bfa:	4620      	mov	r0, r4
 8003bfc:	f001 f834 	bl	8004c68 <_Bfree>
 8003c00:	2200      	movs	r2, #0
 8003c02:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003c04:	601a      	str	r2, [r3, #0]
 8003c06:	9b03      	ldr	r3, [sp, #12]
 8003c08:	2b00      	cmp	r3, #0
 8003c0a:	bfb7      	itett	lt
 8003c0c:	2301      	movlt	r3, #1
 8003c0e:	2300      	movge	r3, #0
 8003c10:	602b      	strlt	r3, [r5, #0]
 8003c12:	9b03      	ldrlt	r3, [sp, #12]
 8003c14:	bfae      	itee	ge
 8003c16:	602b      	strge	r3, [r5, #0]
 8003c18:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 8003c1c:	9303      	strlt	r3, [sp, #12]
 8003c1e:	f8dd 900c 	ldr.w	r9, [sp, #12]
 8003c22:	4bab      	ldr	r3, [pc, #684]	; (8003ed0 <_dtoa_r+0x308>)
 8003c24:	ea33 0309 	bics.w	r3, r3, r9
 8003c28:	d11b      	bne.n	8003c62 <_dtoa_r+0x9a>
 8003c2a:	f242 730f 	movw	r3, #9999	; 0x270f
 8003c2e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8003c30:	6013      	str	r3, [r2, #0]
 8003c32:	9b02      	ldr	r3, [sp, #8]
 8003c34:	b923      	cbnz	r3, 8003c40 <_dtoa_r+0x78>
 8003c36:	f3c9 0013 	ubfx	r0, r9, #0, #20
 8003c3a:	2800      	cmp	r0, #0
 8003c3c:	f000 8583 	beq.w	8004746 <_dtoa_r+0xb7e>
 8003c40:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8003c42:	b953      	cbnz	r3, 8003c5a <_dtoa_r+0x92>
 8003c44:	4ba3      	ldr	r3, [pc, #652]	; (8003ed4 <_dtoa_r+0x30c>)
 8003c46:	e021      	b.n	8003c8c <_dtoa_r+0xc4>
 8003c48:	4ba3      	ldr	r3, [pc, #652]	; (8003ed8 <_dtoa_r+0x310>)
 8003c4a:	9306      	str	r3, [sp, #24]
 8003c4c:	3308      	adds	r3, #8
 8003c4e:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8003c50:	6013      	str	r3, [r2, #0]
 8003c52:	9806      	ldr	r0, [sp, #24]
 8003c54:	b015      	add	sp, #84	; 0x54
 8003c56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003c5a:	4b9e      	ldr	r3, [pc, #632]	; (8003ed4 <_dtoa_r+0x30c>)
 8003c5c:	9306      	str	r3, [sp, #24]
 8003c5e:	3303      	adds	r3, #3
 8003c60:	e7f5      	b.n	8003c4e <_dtoa_r+0x86>
 8003c62:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8003c66:	2200      	movs	r2, #0
 8003c68:	2300      	movs	r3, #0
 8003c6a:	4630      	mov	r0, r6
 8003c6c:	4639      	mov	r1, r7
 8003c6e:	f7fc fe97 	bl	80009a0 <__aeabi_dcmpeq>
 8003c72:	4680      	mov	r8, r0
 8003c74:	b160      	cbz	r0, 8003c90 <_dtoa_r+0xc8>
 8003c76:	2301      	movs	r3, #1
 8003c78:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8003c7a:	6013      	str	r3, [r2, #0]
 8003c7c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8003c7e:	2b00      	cmp	r3, #0
 8003c80:	f000 855e 	beq.w	8004740 <_dtoa_r+0xb78>
 8003c84:	4b95      	ldr	r3, [pc, #596]	; (8003edc <_dtoa_r+0x314>)
 8003c86:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8003c88:	6013      	str	r3, [r2, #0]
 8003c8a:	3b01      	subs	r3, #1
 8003c8c:	9306      	str	r3, [sp, #24]
 8003c8e:	e7e0      	b.n	8003c52 <_dtoa_r+0x8a>
 8003c90:	ab12      	add	r3, sp, #72	; 0x48
 8003c92:	9301      	str	r3, [sp, #4]
 8003c94:	ab13      	add	r3, sp, #76	; 0x4c
 8003c96:	9300      	str	r3, [sp, #0]
 8003c98:	4632      	mov	r2, r6
 8003c9a:	463b      	mov	r3, r7
 8003c9c:	4620      	mov	r0, r4
 8003c9e:	f001 fa31 	bl	8005104 <__d2b>
 8003ca2:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8003ca6:	4682      	mov	sl, r0
 8003ca8:	2d00      	cmp	r5, #0
 8003caa:	d07d      	beq.n	8003da8 <_dtoa_r+0x1e0>
 8003cac:	4630      	mov	r0, r6
 8003cae:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8003cb2:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
 8003cb6:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
 8003cba:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 8003cbe:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 8003cc2:	2200      	movs	r2, #0
 8003cc4:	4b86      	ldr	r3, [pc, #536]	; (8003ee0 <_dtoa_r+0x318>)
 8003cc6:	f7fc fa4f 	bl	8000168 <__aeabi_dsub>
 8003cca:	a37b      	add	r3, pc, #492	; (adr r3, 8003eb8 <_dtoa_r+0x2f0>)
 8003ccc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003cd0:	f7fc fbfe 	bl	80004d0 <__aeabi_dmul>
 8003cd4:	a37a      	add	r3, pc, #488	; (adr r3, 8003ec0 <_dtoa_r+0x2f8>)
 8003cd6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003cda:	f7fc fa47 	bl	800016c <__adddf3>
 8003cde:	4606      	mov	r6, r0
 8003ce0:	4628      	mov	r0, r5
 8003ce2:	460f      	mov	r7, r1
 8003ce4:	f7fc fb8e 	bl	8000404 <__aeabi_i2d>
 8003ce8:	a377      	add	r3, pc, #476	; (adr r3, 8003ec8 <_dtoa_r+0x300>)
 8003cea:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003cee:	f7fc fbef 	bl	80004d0 <__aeabi_dmul>
 8003cf2:	4602      	mov	r2, r0
 8003cf4:	460b      	mov	r3, r1
 8003cf6:	4630      	mov	r0, r6
 8003cf8:	4639      	mov	r1, r7
 8003cfa:	f7fc fa37 	bl	800016c <__adddf3>
 8003cfe:	4606      	mov	r6, r0
 8003d00:	460f      	mov	r7, r1
 8003d02:	f7fc fe95 	bl	8000a30 <__aeabi_d2iz>
 8003d06:	2200      	movs	r2, #0
 8003d08:	4683      	mov	fp, r0
 8003d0a:	2300      	movs	r3, #0
 8003d0c:	4630      	mov	r0, r6
 8003d0e:	4639      	mov	r1, r7
 8003d10:	f7fc fe50 	bl	80009b4 <__aeabi_dcmplt>
 8003d14:	b158      	cbz	r0, 8003d2e <_dtoa_r+0x166>
 8003d16:	4658      	mov	r0, fp
 8003d18:	f7fc fb74 	bl	8000404 <__aeabi_i2d>
 8003d1c:	4602      	mov	r2, r0
 8003d1e:	460b      	mov	r3, r1
 8003d20:	4630      	mov	r0, r6
 8003d22:	4639      	mov	r1, r7
 8003d24:	f7fc fe3c 	bl	80009a0 <__aeabi_dcmpeq>
 8003d28:	b908      	cbnz	r0, 8003d2e <_dtoa_r+0x166>
 8003d2a:	f10b 3bff 	add.w	fp, fp, #4294967295
 8003d2e:	f1bb 0f16 	cmp.w	fp, #22
 8003d32:	d858      	bhi.n	8003de6 <_dtoa_r+0x21e>
 8003d34:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8003d38:	496a      	ldr	r1, [pc, #424]	; (8003ee4 <_dtoa_r+0x31c>)
 8003d3a:	eb01 01cb 	add.w	r1, r1, fp, lsl #3
 8003d3e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8003d42:	f7fc fe55 	bl	80009f0 <__aeabi_dcmpgt>
 8003d46:	2800      	cmp	r0, #0
 8003d48:	d04f      	beq.n	8003dea <_dtoa_r+0x222>
 8003d4a:	2300      	movs	r3, #0
 8003d4c:	f10b 3bff 	add.w	fp, fp, #4294967295
 8003d50:	930d      	str	r3, [sp, #52]	; 0x34
 8003d52:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8003d54:	1b5d      	subs	r5, r3, r5
 8003d56:	1e6b      	subs	r3, r5, #1
 8003d58:	9307      	str	r3, [sp, #28]
 8003d5a:	bf43      	ittte	mi
 8003d5c:	2300      	movmi	r3, #0
 8003d5e:	f1c5 0801 	rsbmi	r8, r5, #1
 8003d62:	9307      	strmi	r3, [sp, #28]
 8003d64:	f04f 0800 	movpl.w	r8, #0
 8003d68:	f1bb 0f00 	cmp.w	fp, #0
 8003d6c:	db3f      	blt.n	8003dee <_dtoa_r+0x226>
 8003d6e:	9b07      	ldr	r3, [sp, #28]
 8003d70:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8003d74:	445b      	add	r3, fp
 8003d76:	9307      	str	r3, [sp, #28]
 8003d78:	2300      	movs	r3, #0
 8003d7a:	9308      	str	r3, [sp, #32]
 8003d7c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8003d7e:	2b09      	cmp	r3, #9
 8003d80:	f200 80b4 	bhi.w	8003eec <_dtoa_r+0x324>
 8003d84:	2b05      	cmp	r3, #5
 8003d86:	bfc4      	itt	gt
 8003d88:	3b04      	subgt	r3, #4
 8003d8a:	931e      	strgt	r3, [sp, #120]	; 0x78
 8003d8c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8003d8e:	bfc8      	it	gt
 8003d90:	2600      	movgt	r6, #0
 8003d92:	f1a3 0302 	sub.w	r3, r3, #2
 8003d96:	bfd8      	it	le
 8003d98:	2601      	movle	r6, #1
 8003d9a:	2b03      	cmp	r3, #3
 8003d9c:	f200 80b2 	bhi.w	8003f04 <_dtoa_r+0x33c>
 8003da0:	e8df f003 	tbb	[pc, r3]
 8003da4:	782d8684 	.word	0x782d8684
 8003da8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8003daa:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8003dac:	441d      	add	r5, r3
 8003dae:	f205 4332 	addw	r3, r5, #1074	; 0x432
 8003db2:	2b20      	cmp	r3, #32
 8003db4:	dd11      	ble.n	8003dda <_dtoa_r+0x212>
 8003db6:	9a02      	ldr	r2, [sp, #8]
 8003db8:	f205 4012 	addw	r0, r5, #1042	; 0x412
 8003dbc:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
 8003dc0:	fa22 f000 	lsr.w	r0, r2, r0
 8003dc4:	fa09 f303 	lsl.w	r3, r9, r3
 8003dc8:	4318      	orrs	r0, r3
 8003dca:	f7fc fb0b 	bl	80003e4 <__aeabi_ui2d>
 8003dce:	2301      	movs	r3, #1
 8003dd0:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
 8003dd4:	3d01      	subs	r5, #1
 8003dd6:	9310      	str	r3, [sp, #64]	; 0x40
 8003dd8:	e773      	b.n	8003cc2 <_dtoa_r+0xfa>
 8003dda:	f1c3 0020 	rsb	r0, r3, #32
 8003dde:	9b02      	ldr	r3, [sp, #8]
 8003de0:	fa03 f000 	lsl.w	r0, r3, r0
 8003de4:	e7f1      	b.n	8003dca <_dtoa_r+0x202>
 8003de6:	2301      	movs	r3, #1
 8003de8:	e7b2      	b.n	8003d50 <_dtoa_r+0x188>
 8003dea:	900d      	str	r0, [sp, #52]	; 0x34
 8003dec:	e7b1      	b.n	8003d52 <_dtoa_r+0x18a>
 8003dee:	f1cb 0300 	rsb	r3, fp, #0
 8003df2:	9308      	str	r3, [sp, #32]
 8003df4:	2300      	movs	r3, #0
 8003df6:	eba8 080b 	sub.w	r8, r8, fp
 8003dfa:	930c      	str	r3, [sp, #48]	; 0x30
 8003dfc:	e7be      	b.n	8003d7c <_dtoa_r+0x1b4>
 8003dfe:	2301      	movs	r3, #1
 8003e00:	9309      	str	r3, [sp, #36]	; 0x24
 8003e02:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8003e04:	2b00      	cmp	r3, #0
 8003e06:	f340 8080 	ble.w	8003f0a <_dtoa_r+0x342>
 8003e0a:	4699      	mov	r9, r3
 8003e0c:	9304      	str	r3, [sp, #16]
 8003e0e:	2200      	movs	r2, #0
 8003e10:	2104      	movs	r1, #4
 8003e12:	6a65      	ldr	r5, [r4, #36]	; 0x24
 8003e14:	606a      	str	r2, [r5, #4]
 8003e16:	f101 0214 	add.w	r2, r1, #20
 8003e1a:	429a      	cmp	r2, r3
 8003e1c:	d97a      	bls.n	8003f14 <_dtoa_r+0x34c>
 8003e1e:	6869      	ldr	r1, [r5, #4]
 8003e20:	4620      	mov	r0, r4
 8003e22:	f000 feed 	bl	8004c00 <_Balloc>
 8003e26:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003e28:	6028      	str	r0, [r5, #0]
 8003e2a:	681b      	ldr	r3, [r3, #0]
 8003e2c:	f1b9 0f0e 	cmp.w	r9, #14
 8003e30:	9306      	str	r3, [sp, #24]
 8003e32:	f200 80f0 	bhi.w	8004016 <_dtoa_r+0x44e>
 8003e36:	2e00      	cmp	r6, #0
 8003e38:	f000 80ed 	beq.w	8004016 <_dtoa_r+0x44e>
 8003e3c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8003e40:	f1bb 0f00 	cmp.w	fp, #0
 8003e44:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
 8003e48:	dd79      	ble.n	8003f3e <_dtoa_r+0x376>
 8003e4a:	4a26      	ldr	r2, [pc, #152]	; (8003ee4 <_dtoa_r+0x31c>)
 8003e4c:	f00b 030f 	and.w	r3, fp, #15
 8003e50:	ea4f 162b 	mov.w	r6, fp, asr #4
 8003e54:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8003e58:	06f0      	lsls	r0, r6, #27
 8003e5a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003e5e:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 8003e62:	d55c      	bpl.n	8003f1e <_dtoa_r+0x356>
 8003e64:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 8003e68:	4b1f      	ldr	r3, [pc, #124]	; (8003ee8 <_dtoa_r+0x320>)
 8003e6a:	2503      	movs	r5, #3
 8003e6c:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8003e70:	f7fc fc58 	bl	8000724 <__aeabi_ddiv>
 8003e74:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003e78:	f006 060f 	and.w	r6, r6, #15
 8003e7c:	4f1a      	ldr	r7, [pc, #104]	; (8003ee8 <_dtoa_r+0x320>)
 8003e7e:	2e00      	cmp	r6, #0
 8003e80:	d14f      	bne.n	8003f22 <_dtoa_r+0x35a>
 8003e82:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8003e86:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003e8a:	f7fc fc4b 	bl	8000724 <__aeabi_ddiv>
 8003e8e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003e92:	e06e      	b.n	8003f72 <_dtoa_r+0x3aa>
 8003e94:	2301      	movs	r3, #1
 8003e96:	9309      	str	r3, [sp, #36]	; 0x24
 8003e98:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8003e9a:	445b      	add	r3, fp
 8003e9c:	f103 0901 	add.w	r9, r3, #1
 8003ea0:	9304      	str	r3, [sp, #16]
 8003ea2:	464b      	mov	r3, r9
 8003ea4:	2b01      	cmp	r3, #1
 8003ea6:	bfb8      	it	lt
 8003ea8:	2301      	movlt	r3, #1
 8003eaa:	e7b0      	b.n	8003e0e <_dtoa_r+0x246>
 8003eac:	2300      	movs	r3, #0
 8003eae:	e7a7      	b.n	8003e00 <_dtoa_r+0x238>
 8003eb0:	2300      	movs	r3, #0
 8003eb2:	e7f0      	b.n	8003e96 <_dtoa_r+0x2ce>
 8003eb4:	f3af 8000 	nop.w
 8003eb8:	636f4361 	.word	0x636f4361
 8003ebc:	3fd287a7 	.word	0x3fd287a7
 8003ec0:	8b60c8b3 	.word	0x8b60c8b3
 8003ec4:	3fc68a28 	.word	0x3fc68a28
 8003ec8:	509f79fb 	.word	0x509f79fb
 8003ecc:	3fd34413 	.word	0x3fd34413
 8003ed0:	7ff00000 	.word	0x7ff00000
 8003ed4:	08006571 	.word	0x08006571
 8003ed8:	08006568 	.word	0x08006568
 8003edc:	08006547 	.word	0x08006547
 8003ee0:	3ff80000 	.word	0x3ff80000
 8003ee4:	080065a0 	.word	0x080065a0
 8003ee8:	08006578 	.word	0x08006578
 8003eec:	2601      	movs	r6, #1
 8003eee:	2300      	movs	r3, #0
 8003ef0:	9609      	str	r6, [sp, #36]	; 0x24
 8003ef2:	931e      	str	r3, [sp, #120]	; 0x78
 8003ef4:	f04f 33ff 	mov.w	r3, #4294967295
 8003ef8:	2200      	movs	r2, #0
 8003efa:	9304      	str	r3, [sp, #16]
 8003efc:	4699      	mov	r9, r3
 8003efe:	2312      	movs	r3, #18
 8003f00:	921f      	str	r2, [sp, #124]	; 0x7c
 8003f02:	e784      	b.n	8003e0e <_dtoa_r+0x246>
 8003f04:	2301      	movs	r3, #1
 8003f06:	9309      	str	r3, [sp, #36]	; 0x24
 8003f08:	e7f4      	b.n	8003ef4 <_dtoa_r+0x32c>
 8003f0a:	2301      	movs	r3, #1
 8003f0c:	9304      	str	r3, [sp, #16]
 8003f0e:	4699      	mov	r9, r3
 8003f10:	461a      	mov	r2, r3
 8003f12:	e7f5      	b.n	8003f00 <_dtoa_r+0x338>
 8003f14:	686a      	ldr	r2, [r5, #4]
 8003f16:	0049      	lsls	r1, r1, #1
 8003f18:	3201      	adds	r2, #1
 8003f1a:	606a      	str	r2, [r5, #4]
 8003f1c:	e77b      	b.n	8003e16 <_dtoa_r+0x24e>
 8003f1e:	2502      	movs	r5, #2
 8003f20:	e7ac      	b.n	8003e7c <_dtoa_r+0x2b4>
 8003f22:	07f1      	lsls	r1, r6, #31
 8003f24:	d508      	bpl.n	8003f38 <_dtoa_r+0x370>
 8003f26:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8003f2a:	e9d7 2300 	ldrd	r2, r3, [r7]
 8003f2e:	f7fc facf 	bl	80004d0 <__aeabi_dmul>
 8003f32:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8003f36:	3501      	adds	r5, #1
 8003f38:	1076      	asrs	r6, r6, #1
 8003f3a:	3708      	adds	r7, #8
 8003f3c:	e79f      	b.n	8003e7e <_dtoa_r+0x2b6>
 8003f3e:	f000 80a5 	beq.w	800408c <_dtoa_r+0x4c4>
 8003f42:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 8003f46:	f1cb 0600 	rsb	r6, fp, #0
 8003f4a:	4ba2      	ldr	r3, [pc, #648]	; (80041d4 <_dtoa_r+0x60c>)
 8003f4c:	f006 020f 	and.w	r2, r6, #15
 8003f50:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8003f54:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003f58:	f7fc faba 	bl	80004d0 <__aeabi_dmul>
 8003f5c:	2502      	movs	r5, #2
 8003f5e:	2300      	movs	r3, #0
 8003f60:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003f64:	4f9c      	ldr	r7, [pc, #624]	; (80041d8 <_dtoa_r+0x610>)
 8003f66:	1136      	asrs	r6, r6, #4
 8003f68:	2e00      	cmp	r6, #0
 8003f6a:	f040 8084 	bne.w	8004076 <_dtoa_r+0x4ae>
 8003f6e:	2b00      	cmp	r3, #0
 8003f70:	d18d      	bne.n	8003e8e <_dtoa_r+0x2c6>
 8003f72:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003f74:	2b00      	cmp	r3, #0
 8003f76:	f000 808b 	beq.w	8004090 <_dtoa_r+0x4c8>
 8003f7a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8003f7e:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 8003f82:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8003f86:	2200      	movs	r2, #0
 8003f88:	4b94      	ldr	r3, [pc, #592]	; (80041dc <_dtoa_r+0x614>)
 8003f8a:	f7fc fd13 	bl	80009b4 <__aeabi_dcmplt>
 8003f8e:	2800      	cmp	r0, #0
 8003f90:	d07e      	beq.n	8004090 <_dtoa_r+0x4c8>
 8003f92:	f1b9 0f00 	cmp.w	r9, #0
 8003f96:	d07b      	beq.n	8004090 <_dtoa_r+0x4c8>
 8003f98:	9b04      	ldr	r3, [sp, #16]
 8003f9a:	2b00      	cmp	r3, #0
 8003f9c:	dd37      	ble.n	800400e <_dtoa_r+0x446>
 8003f9e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8003fa2:	2200      	movs	r2, #0
 8003fa4:	4b8e      	ldr	r3, [pc, #568]	; (80041e0 <_dtoa_r+0x618>)
 8003fa6:	f7fc fa93 	bl	80004d0 <__aeabi_dmul>
 8003faa:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003fae:	9e04      	ldr	r6, [sp, #16]
 8003fb0:	f10b 37ff 	add.w	r7, fp, #4294967295
 8003fb4:	3501      	adds	r5, #1
 8003fb6:	4628      	mov	r0, r5
 8003fb8:	f7fc fa24 	bl	8000404 <__aeabi_i2d>
 8003fbc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8003fc0:	f7fc fa86 	bl	80004d0 <__aeabi_dmul>
 8003fc4:	4b87      	ldr	r3, [pc, #540]	; (80041e4 <_dtoa_r+0x61c>)
 8003fc6:	2200      	movs	r2, #0
 8003fc8:	f7fc f8d0 	bl	800016c <__adddf3>
 8003fcc:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8003fd0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003fd2:	f1a3 7550 	sub.w	r5, r3, #54525952	; 0x3400000
 8003fd6:	950b      	str	r5, [sp, #44]	; 0x2c
 8003fd8:	2e00      	cmp	r6, #0
 8003fda:	d15c      	bne.n	8004096 <_dtoa_r+0x4ce>
 8003fdc:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003fe0:	2200      	movs	r2, #0
 8003fe2:	4b81      	ldr	r3, [pc, #516]	; (80041e8 <_dtoa_r+0x620>)
 8003fe4:	f7fc f8c0 	bl	8000168 <__aeabi_dsub>
 8003fe8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8003fea:	462b      	mov	r3, r5
 8003fec:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003ff0:	f7fc fcfe 	bl	80009f0 <__aeabi_dcmpgt>
 8003ff4:	2800      	cmp	r0, #0
 8003ff6:	f040 82f7 	bne.w	80045e8 <_dtoa_r+0xa20>
 8003ffa:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003ffe:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004000:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
 8004004:	f7fc fcd6 	bl	80009b4 <__aeabi_dcmplt>
 8004008:	2800      	cmp	r0, #0
 800400a:	f040 82eb 	bne.w	80045e4 <_dtoa_r+0xa1c>
 800400e:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
 8004012:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8004016:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8004018:	2b00      	cmp	r3, #0
 800401a:	f2c0 8150 	blt.w	80042be <_dtoa_r+0x6f6>
 800401e:	f1bb 0f0e 	cmp.w	fp, #14
 8004022:	f300 814c 	bgt.w	80042be <_dtoa_r+0x6f6>
 8004026:	4b6b      	ldr	r3, [pc, #428]	; (80041d4 <_dtoa_r+0x60c>)
 8004028:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800402c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004030:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8004034:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8004036:	2b00      	cmp	r3, #0
 8004038:	f280 80da 	bge.w	80041f0 <_dtoa_r+0x628>
 800403c:	f1b9 0f00 	cmp.w	r9, #0
 8004040:	f300 80d6 	bgt.w	80041f0 <_dtoa_r+0x628>
 8004044:	f040 82cd 	bne.w	80045e2 <_dtoa_r+0xa1a>
 8004048:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800404c:	2200      	movs	r2, #0
 800404e:	4b66      	ldr	r3, [pc, #408]	; (80041e8 <_dtoa_r+0x620>)
 8004050:	f7fc fa3e 	bl	80004d0 <__aeabi_dmul>
 8004054:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8004058:	f7fc fcc0 	bl	80009dc <__aeabi_dcmpge>
 800405c:	464e      	mov	r6, r9
 800405e:	464f      	mov	r7, r9
 8004060:	2800      	cmp	r0, #0
 8004062:	f040 82a4 	bne.w	80045ae <_dtoa_r+0x9e6>
 8004066:	9b06      	ldr	r3, [sp, #24]
 8004068:	9a06      	ldr	r2, [sp, #24]
 800406a:	1c5d      	adds	r5, r3, #1
 800406c:	2331      	movs	r3, #49	; 0x31
 800406e:	f10b 0b01 	add.w	fp, fp, #1
 8004072:	7013      	strb	r3, [r2, #0]
 8004074:	e29f      	b.n	80045b6 <_dtoa_r+0x9ee>
 8004076:	07f2      	lsls	r2, r6, #31
 8004078:	d505      	bpl.n	8004086 <_dtoa_r+0x4be>
 800407a:	e9d7 2300 	ldrd	r2, r3, [r7]
 800407e:	f7fc fa27 	bl	80004d0 <__aeabi_dmul>
 8004082:	2301      	movs	r3, #1
 8004084:	3501      	adds	r5, #1
 8004086:	1076      	asrs	r6, r6, #1
 8004088:	3708      	adds	r7, #8
 800408a:	e76d      	b.n	8003f68 <_dtoa_r+0x3a0>
 800408c:	2502      	movs	r5, #2
 800408e:	e770      	b.n	8003f72 <_dtoa_r+0x3aa>
 8004090:	465f      	mov	r7, fp
 8004092:	464e      	mov	r6, r9
 8004094:	e78f      	b.n	8003fb6 <_dtoa_r+0x3ee>
 8004096:	9a06      	ldr	r2, [sp, #24]
 8004098:	4b4e      	ldr	r3, [pc, #312]	; (80041d4 <_dtoa_r+0x60c>)
 800409a:	4432      	add	r2, r6
 800409c:	9211      	str	r2, [sp, #68]	; 0x44
 800409e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80040a0:	1e71      	subs	r1, r6, #1
 80040a2:	2a00      	cmp	r2, #0
 80040a4:	d048      	beq.n	8004138 <_dtoa_r+0x570>
 80040a6:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 80040aa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80040ae:	2000      	movs	r0, #0
 80040b0:	494e      	ldr	r1, [pc, #312]	; (80041ec <_dtoa_r+0x624>)
 80040b2:	f7fc fb37 	bl	8000724 <__aeabi_ddiv>
 80040b6:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 80040ba:	f7fc f855 	bl	8000168 <__aeabi_dsub>
 80040be:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 80040c2:	9d06      	ldr	r5, [sp, #24]
 80040c4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80040c8:	f7fc fcb2 	bl	8000a30 <__aeabi_d2iz>
 80040cc:	4606      	mov	r6, r0
 80040ce:	f7fc f999 	bl	8000404 <__aeabi_i2d>
 80040d2:	4602      	mov	r2, r0
 80040d4:	460b      	mov	r3, r1
 80040d6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80040da:	f7fc f845 	bl	8000168 <__aeabi_dsub>
 80040de:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 80040e2:	3630      	adds	r6, #48	; 0x30
 80040e4:	f805 6b01 	strb.w	r6, [r5], #1
 80040e8:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80040ec:	f7fc fc62 	bl	80009b4 <__aeabi_dcmplt>
 80040f0:	2800      	cmp	r0, #0
 80040f2:	d164      	bne.n	80041be <_dtoa_r+0x5f6>
 80040f4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80040f8:	2000      	movs	r0, #0
 80040fa:	4938      	ldr	r1, [pc, #224]	; (80041dc <_dtoa_r+0x614>)
 80040fc:	f7fc f834 	bl	8000168 <__aeabi_dsub>
 8004100:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8004104:	f7fc fc56 	bl	80009b4 <__aeabi_dcmplt>
 8004108:	2800      	cmp	r0, #0
 800410a:	f040 80b9 	bne.w	8004280 <_dtoa_r+0x6b8>
 800410e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004110:	429d      	cmp	r5, r3
 8004112:	f43f af7c 	beq.w	800400e <_dtoa_r+0x446>
 8004116:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 800411a:	2200      	movs	r2, #0
 800411c:	4b30      	ldr	r3, [pc, #192]	; (80041e0 <_dtoa_r+0x618>)
 800411e:	f7fc f9d7 	bl	80004d0 <__aeabi_dmul>
 8004122:	2200      	movs	r2, #0
 8004124:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8004128:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800412c:	4b2c      	ldr	r3, [pc, #176]	; (80041e0 <_dtoa_r+0x618>)
 800412e:	f7fc f9cf 	bl	80004d0 <__aeabi_dmul>
 8004132:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8004136:	e7c5      	b.n	80040c4 <_dtoa_r+0x4fc>
 8004138:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
 800413c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004140:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8004144:	f7fc f9c4 	bl	80004d0 <__aeabi_dmul>
 8004148:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 800414c:	9d06      	ldr	r5, [sp, #24]
 800414e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8004152:	f7fc fc6d 	bl	8000a30 <__aeabi_d2iz>
 8004156:	4606      	mov	r6, r0
 8004158:	f7fc f954 	bl	8000404 <__aeabi_i2d>
 800415c:	4602      	mov	r2, r0
 800415e:	460b      	mov	r3, r1
 8004160:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8004164:	f7fc f800 	bl	8000168 <__aeabi_dsub>
 8004168:	3630      	adds	r6, #48	; 0x30
 800416a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800416c:	f805 6b01 	strb.w	r6, [r5], #1
 8004170:	42ab      	cmp	r3, r5
 8004172:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8004176:	f04f 0200 	mov.w	r2, #0
 800417a:	d124      	bne.n	80041c6 <_dtoa_r+0x5fe>
 800417c:	4b1b      	ldr	r3, [pc, #108]	; (80041ec <_dtoa_r+0x624>)
 800417e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8004182:	f7fb fff3 	bl	800016c <__adddf3>
 8004186:	4602      	mov	r2, r0
 8004188:	460b      	mov	r3, r1
 800418a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800418e:	f7fc fc2f 	bl	80009f0 <__aeabi_dcmpgt>
 8004192:	2800      	cmp	r0, #0
 8004194:	d174      	bne.n	8004280 <_dtoa_r+0x6b8>
 8004196:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800419a:	2000      	movs	r0, #0
 800419c:	4913      	ldr	r1, [pc, #76]	; (80041ec <_dtoa_r+0x624>)
 800419e:	f7fb ffe3 	bl	8000168 <__aeabi_dsub>
 80041a2:	4602      	mov	r2, r0
 80041a4:	460b      	mov	r3, r1
 80041a6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80041aa:	f7fc fc03 	bl	80009b4 <__aeabi_dcmplt>
 80041ae:	2800      	cmp	r0, #0
 80041b0:	f43f af2d 	beq.w	800400e <_dtoa_r+0x446>
 80041b4:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 80041b8:	1e6a      	subs	r2, r5, #1
 80041ba:	2b30      	cmp	r3, #48	; 0x30
 80041bc:	d001      	beq.n	80041c2 <_dtoa_r+0x5fa>
 80041be:	46bb      	mov	fp, r7
 80041c0:	e04d      	b.n	800425e <_dtoa_r+0x696>
 80041c2:	4615      	mov	r5, r2
 80041c4:	e7f6      	b.n	80041b4 <_dtoa_r+0x5ec>
 80041c6:	4b06      	ldr	r3, [pc, #24]	; (80041e0 <_dtoa_r+0x618>)
 80041c8:	f7fc f982 	bl	80004d0 <__aeabi_dmul>
 80041cc:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80041d0:	e7bd      	b.n	800414e <_dtoa_r+0x586>
 80041d2:	bf00      	nop
 80041d4:	080065a0 	.word	0x080065a0
 80041d8:	08006578 	.word	0x08006578
 80041dc:	3ff00000 	.word	0x3ff00000
 80041e0:	40240000 	.word	0x40240000
 80041e4:	401c0000 	.word	0x401c0000
 80041e8:	40140000 	.word	0x40140000
 80041ec:	3fe00000 	.word	0x3fe00000
 80041f0:	9d06      	ldr	r5, [sp, #24]
 80041f2:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 80041f6:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80041fa:	4630      	mov	r0, r6
 80041fc:	4639      	mov	r1, r7
 80041fe:	f7fc fa91 	bl	8000724 <__aeabi_ddiv>
 8004202:	f7fc fc15 	bl	8000a30 <__aeabi_d2iz>
 8004206:	4680      	mov	r8, r0
 8004208:	f7fc f8fc 	bl	8000404 <__aeabi_i2d>
 800420c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8004210:	f7fc f95e 	bl	80004d0 <__aeabi_dmul>
 8004214:	4602      	mov	r2, r0
 8004216:	460b      	mov	r3, r1
 8004218:	4630      	mov	r0, r6
 800421a:	4639      	mov	r1, r7
 800421c:	f7fb ffa4 	bl	8000168 <__aeabi_dsub>
 8004220:	f108 0630 	add.w	r6, r8, #48	; 0x30
 8004224:	f805 6b01 	strb.w	r6, [r5], #1
 8004228:	9e06      	ldr	r6, [sp, #24]
 800422a:	4602      	mov	r2, r0
 800422c:	1bae      	subs	r6, r5, r6
 800422e:	45b1      	cmp	r9, r6
 8004230:	460b      	mov	r3, r1
 8004232:	d137      	bne.n	80042a4 <_dtoa_r+0x6dc>
 8004234:	f7fb ff9a 	bl	800016c <__adddf3>
 8004238:	4606      	mov	r6, r0
 800423a:	460f      	mov	r7, r1
 800423c:	4602      	mov	r2, r0
 800423e:	460b      	mov	r3, r1
 8004240:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8004244:	f7fc fbb6 	bl	80009b4 <__aeabi_dcmplt>
 8004248:	b9c8      	cbnz	r0, 800427e <_dtoa_r+0x6b6>
 800424a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800424e:	4632      	mov	r2, r6
 8004250:	463b      	mov	r3, r7
 8004252:	f7fc fba5 	bl	80009a0 <__aeabi_dcmpeq>
 8004256:	b110      	cbz	r0, 800425e <_dtoa_r+0x696>
 8004258:	f018 0f01 	tst.w	r8, #1
 800425c:	d10f      	bne.n	800427e <_dtoa_r+0x6b6>
 800425e:	4651      	mov	r1, sl
 8004260:	4620      	mov	r0, r4
 8004262:	f000 fd01 	bl	8004c68 <_Bfree>
 8004266:	2300      	movs	r3, #0
 8004268:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800426a:	702b      	strb	r3, [r5, #0]
 800426c:	f10b 0301 	add.w	r3, fp, #1
 8004270:	6013      	str	r3, [r2, #0]
 8004272:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004274:	2b00      	cmp	r3, #0
 8004276:	f43f acec 	beq.w	8003c52 <_dtoa_r+0x8a>
 800427a:	601d      	str	r5, [r3, #0]
 800427c:	e4e9      	b.n	8003c52 <_dtoa_r+0x8a>
 800427e:	465f      	mov	r7, fp
 8004280:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 8004284:	1e6b      	subs	r3, r5, #1
 8004286:	2a39      	cmp	r2, #57	; 0x39
 8004288:	d106      	bne.n	8004298 <_dtoa_r+0x6d0>
 800428a:	9a06      	ldr	r2, [sp, #24]
 800428c:	429a      	cmp	r2, r3
 800428e:	d107      	bne.n	80042a0 <_dtoa_r+0x6d8>
 8004290:	2330      	movs	r3, #48	; 0x30
 8004292:	7013      	strb	r3, [r2, #0]
 8004294:	4613      	mov	r3, r2
 8004296:	3701      	adds	r7, #1
 8004298:	781a      	ldrb	r2, [r3, #0]
 800429a:	3201      	adds	r2, #1
 800429c:	701a      	strb	r2, [r3, #0]
 800429e:	e78e      	b.n	80041be <_dtoa_r+0x5f6>
 80042a0:	461d      	mov	r5, r3
 80042a2:	e7ed      	b.n	8004280 <_dtoa_r+0x6b8>
 80042a4:	2200      	movs	r2, #0
 80042a6:	4bb5      	ldr	r3, [pc, #724]	; (800457c <_dtoa_r+0x9b4>)
 80042a8:	f7fc f912 	bl	80004d0 <__aeabi_dmul>
 80042ac:	2200      	movs	r2, #0
 80042ae:	2300      	movs	r3, #0
 80042b0:	4606      	mov	r6, r0
 80042b2:	460f      	mov	r7, r1
 80042b4:	f7fc fb74 	bl	80009a0 <__aeabi_dcmpeq>
 80042b8:	2800      	cmp	r0, #0
 80042ba:	d09c      	beq.n	80041f6 <_dtoa_r+0x62e>
 80042bc:	e7cf      	b.n	800425e <_dtoa_r+0x696>
 80042be:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80042c0:	2a00      	cmp	r2, #0
 80042c2:	f000 8129 	beq.w	8004518 <_dtoa_r+0x950>
 80042c6:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80042c8:	2a01      	cmp	r2, #1
 80042ca:	f300 810e 	bgt.w	80044ea <_dtoa_r+0x922>
 80042ce:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80042d0:	2a00      	cmp	r2, #0
 80042d2:	f000 8106 	beq.w	80044e2 <_dtoa_r+0x91a>
 80042d6:	f203 4333 	addw	r3, r3, #1075	; 0x433
 80042da:	4645      	mov	r5, r8
 80042dc:	9e08      	ldr	r6, [sp, #32]
 80042de:	9a07      	ldr	r2, [sp, #28]
 80042e0:	2101      	movs	r1, #1
 80042e2:	441a      	add	r2, r3
 80042e4:	4620      	mov	r0, r4
 80042e6:	4498      	add	r8, r3
 80042e8:	9207      	str	r2, [sp, #28]
 80042ea:	f000 fd5d 	bl	8004da8 <__i2b>
 80042ee:	4607      	mov	r7, r0
 80042f0:	2d00      	cmp	r5, #0
 80042f2:	dd0b      	ble.n	800430c <_dtoa_r+0x744>
 80042f4:	9b07      	ldr	r3, [sp, #28]
 80042f6:	2b00      	cmp	r3, #0
 80042f8:	dd08      	ble.n	800430c <_dtoa_r+0x744>
 80042fa:	42ab      	cmp	r3, r5
 80042fc:	bfa8      	it	ge
 80042fe:	462b      	movge	r3, r5
 8004300:	9a07      	ldr	r2, [sp, #28]
 8004302:	eba8 0803 	sub.w	r8, r8, r3
 8004306:	1aed      	subs	r5, r5, r3
 8004308:	1ad3      	subs	r3, r2, r3
 800430a:	9307      	str	r3, [sp, #28]
 800430c:	9b08      	ldr	r3, [sp, #32]
 800430e:	b1fb      	cbz	r3, 8004350 <_dtoa_r+0x788>
 8004310:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004312:	2b00      	cmp	r3, #0
 8004314:	f000 8104 	beq.w	8004520 <_dtoa_r+0x958>
 8004318:	2e00      	cmp	r6, #0
 800431a:	dd11      	ble.n	8004340 <_dtoa_r+0x778>
 800431c:	4639      	mov	r1, r7
 800431e:	4632      	mov	r2, r6
 8004320:	4620      	mov	r0, r4
 8004322:	f000 fdd7 	bl	8004ed4 <__pow5mult>
 8004326:	4652      	mov	r2, sl
 8004328:	4601      	mov	r1, r0
 800432a:	4607      	mov	r7, r0
 800432c:	4620      	mov	r0, r4
 800432e:	f000 fd44 	bl	8004dba <__multiply>
 8004332:	4651      	mov	r1, sl
 8004334:	900a      	str	r0, [sp, #40]	; 0x28
 8004336:	4620      	mov	r0, r4
 8004338:	f000 fc96 	bl	8004c68 <_Bfree>
 800433c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800433e:	469a      	mov	sl, r3
 8004340:	9b08      	ldr	r3, [sp, #32]
 8004342:	1b9a      	subs	r2, r3, r6
 8004344:	d004      	beq.n	8004350 <_dtoa_r+0x788>
 8004346:	4651      	mov	r1, sl
 8004348:	4620      	mov	r0, r4
 800434a:	f000 fdc3 	bl	8004ed4 <__pow5mult>
 800434e:	4682      	mov	sl, r0
 8004350:	2101      	movs	r1, #1
 8004352:	4620      	mov	r0, r4
 8004354:	f000 fd28 	bl	8004da8 <__i2b>
 8004358:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800435a:	4606      	mov	r6, r0
 800435c:	2b00      	cmp	r3, #0
 800435e:	f340 80e1 	ble.w	8004524 <_dtoa_r+0x95c>
 8004362:	461a      	mov	r2, r3
 8004364:	4601      	mov	r1, r0
 8004366:	4620      	mov	r0, r4
 8004368:	f000 fdb4 	bl	8004ed4 <__pow5mult>
 800436c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 800436e:	4606      	mov	r6, r0
 8004370:	2b01      	cmp	r3, #1
 8004372:	f340 80da 	ble.w	800452a <_dtoa_r+0x962>
 8004376:	2300      	movs	r3, #0
 8004378:	9308      	str	r3, [sp, #32]
 800437a:	6933      	ldr	r3, [r6, #16]
 800437c:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8004380:	6918      	ldr	r0, [r3, #16]
 8004382:	f000 fcc3 	bl	8004d0c <__hi0bits>
 8004386:	f1c0 0020 	rsb	r0, r0, #32
 800438a:	9b07      	ldr	r3, [sp, #28]
 800438c:	4418      	add	r0, r3
 800438e:	f010 001f 	ands.w	r0, r0, #31
 8004392:	f000 80f0 	beq.w	8004576 <_dtoa_r+0x9ae>
 8004396:	f1c0 0320 	rsb	r3, r0, #32
 800439a:	2b04      	cmp	r3, #4
 800439c:	f340 80e2 	ble.w	8004564 <_dtoa_r+0x99c>
 80043a0:	9b07      	ldr	r3, [sp, #28]
 80043a2:	f1c0 001c 	rsb	r0, r0, #28
 80043a6:	4480      	add	r8, r0
 80043a8:	4405      	add	r5, r0
 80043aa:	4403      	add	r3, r0
 80043ac:	9307      	str	r3, [sp, #28]
 80043ae:	f1b8 0f00 	cmp.w	r8, #0
 80043b2:	dd05      	ble.n	80043c0 <_dtoa_r+0x7f8>
 80043b4:	4651      	mov	r1, sl
 80043b6:	4642      	mov	r2, r8
 80043b8:	4620      	mov	r0, r4
 80043ba:	f000 fdd9 	bl	8004f70 <__lshift>
 80043be:	4682      	mov	sl, r0
 80043c0:	9b07      	ldr	r3, [sp, #28]
 80043c2:	2b00      	cmp	r3, #0
 80043c4:	dd05      	ble.n	80043d2 <_dtoa_r+0x80a>
 80043c6:	4631      	mov	r1, r6
 80043c8:	461a      	mov	r2, r3
 80043ca:	4620      	mov	r0, r4
 80043cc:	f000 fdd0 	bl	8004f70 <__lshift>
 80043d0:	4606      	mov	r6, r0
 80043d2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80043d4:	2b00      	cmp	r3, #0
 80043d6:	f000 80d3 	beq.w	8004580 <_dtoa_r+0x9b8>
 80043da:	4631      	mov	r1, r6
 80043dc:	4650      	mov	r0, sl
 80043de:	f000 fe18 	bl	8005012 <__mcmp>
 80043e2:	2800      	cmp	r0, #0
 80043e4:	f280 80cc 	bge.w	8004580 <_dtoa_r+0x9b8>
 80043e8:	2300      	movs	r3, #0
 80043ea:	4651      	mov	r1, sl
 80043ec:	220a      	movs	r2, #10
 80043ee:	4620      	mov	r0, r4
 80043f0:	f000 fc51 	bl	8004c96 <__multadd>
 80043f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80043f6:	f10b 3bff 	add.w	fp, fp, #4294967295
 80043fa:	4682      	mov	sl, r0
 80043fc:	2b00      	cmp	r3, #0
 80043fe:	f000 81a9 	beq.w	8004754 <_dtoa_r+0xb8c>
 8004402:	2300      	movs	r3, #0
 8004404:	4639      	mov	r1, r7
 8004406:	220a      	movs	r2, #10
 8004408:	4620      	mov	r0, r4
 800440a:	f000 fc44 	bl	8004c96 <__multadd>
 800440e:	9b04      	ldr	r3, [sp, #16]
 8004410:	4607      	mov	r7, r0
 8004412:	2b00      	cmp	r3, #0
 8004414:	dc03      	bgt.n	800441e <_dtoa_r+0x856>
 8004416:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8004418:	2b02      	cmp	r3, #2
 800441a:	f300 80b9 	bgt.w	8004590 <_dtoa_r+0x9c8>
 800441e:	2d00      	cmp	r5, #0
 8004420:	dd05      	ble.n	800442e <_dtoa_r+0x866>
 8004422:	4639      	mov	r1, r7
 8004424:	462a      	mov	r2, r5
 8004426:	4620      	mov	r0, r4
 8004428:	f000 fda2 	bl	8004f70 <__lshift>
 800442c:	4607      	mov	r7, r0
 800442e:	9b08      	ldr	r3, [sp, #32]
 8004430:	2b00      	cmp	r3, #0
 8004432:	f000 8110 	beq.w	8004656 <_dtoa_r+0xa8e>
 8004436:	6879      	ldr	r1, [r7, #4]
 8004438:	4620      	mov	r0, r4
 800443a:	f000 fbe1 	bl	8004c00 <_Balloc>
 800443e:	4605      	mov	r5, r0
 8004440:	693a      	ldr	r2, [r7, #16]
 8004442:	f107 010c 	add.w	r1, r7, #12
 8004446:	3202      	adds	r2, #2
 8004448:	0092      	lsls	r2, r2, #2
 800444a:	300c      	adds	r0, #12
 800444c:	f000 fbc0 	bl	8004bd0 <memcpy>
 8004450:	2201      	movs	r2, #1
 8004452:	4629      	mov	r1, r5
 8004454:	4620      	mov	r0, r4
 8004456:	f000 fd8b 	bl	8004f70 <__lshift>
 800445a:	9707      	str	r7, [sp, #28]
 800445c:	4607      	mov	r7, r0
 800445e:	9b02      	ldr	r3, [sp, #8]
 8004460:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8004464:	f003 0301 	and.w	r3, r3, #1
 8004468:	9308      	str	r3, [sp, #32]
 800446a:	4631      	mov	r1, r6
 800446c:	4650      	mov	r0, sl
 800446e:	f7ff fb1d 	bl	8003aac <quorem>
 8004472:	9907      	ldr	r1, [sp, #28]
 8004474:	4605      	mov	r5, r0
 8004476:	f100 0930 	add.w	r9, r0, #48	; 0x30
 800447a:	4650      	mov	r0, sl
 800447c:	f000 fdc9 	bl	8005012 <__mcmp>
 8004480:	463a      	mov	r2, r7
 8004482:	9002      	str	r0, [sp, #8]
 8004484:	4631      	mov	r1, r6
 8004486:	4620      	mov	r0, r4
 8004488:	f000 fddd 	bl	8005046 <__mdiff>
 800448c:	68c3      	ldr	r3, [r0, #12]
 800448e:	4602      	mov	r2, r0
 8004490:	2b00      	cmp	r3, #0
 8004492:	f040 80e2 	bne.w	800465a <_dtoa_r+0xa92>
 8004496:	4601      	mov	r1, r0
 8004498:	9009      	str	r0, [sp, #36]	; 0x24
 800449a:	4650      	mov	r0, sl
 800449c:	f000 fdb9 	bl	8005012 <__mcmp>
 80044a0:	4603      	mov	r3, r0
 80044a2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80044a4:	4611      	mov	r1, r2
 80044a6:	4620      	mov	r0, r4
 80044a8:	9309      	str	r3, [sp, #36]	; 0x24
 80044aa:	f000 fbdd 	bl	8004c68 <_Bfree>
 80044ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80044b0:	2b00      	cmp	r3, #0
 80044b2:	f040 80d4 	bne.w	800465e <_dtoa_r+0xa96>
 80044b6:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80044b8:	2a00      	cmp	r2, #0
 80044ba:	f040 80d0 	bne.w	800465e <_dtoa_r+0xa96>
 80044be:	9a08      	ldr	r2, [sp, #32]
 80044c0:	2a00      	cmp	r2, #0
 80044c2:	f040 80cc 	bne.w	800465e <_dtoa_r+0xa96>
 80044c6:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 80044ca:	f000 80e8 	beq.w	800469e <_dtoa_r+0xad6>
 80044ce:	9b02      	ldr	r3, [sp, #8]
 80044d0:	2b00      	cmp	r3, #0
 80044d2:	dd01      	ble.n	80044d8 <_dtoa_r+0x910>
 80044d4:	f105 0931 	add.w	r9, r5, #49	; 0x31
 80044d8:	f108 0501 	add.w	r5, r8, #1
 80044dc:	f888 9000 	strb.w	r9, [r8]
 80044e0:	e06b      	b.n	80045ba <_dtoa_r+0x9f2>
 80044e2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80044e4:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 80044e8:	e6f7      	b.n	80042da <_dtoa_r+0x712>
 80044ea:	9b08      	ldr	r3, [sp, #32]
 80044ec:	f109 36ff 	add.w	r6, r9, #4294967295
 80044f0:	42b3      	cmp	r3, r6
 80044f2:	bfb7      	itett	lt
 80044f4:	9b08      	ldrlt	r3, [sp, #32]
 80044f6:	1b9e      	subge	r6, r3, r6
 80044f8:	1af2      	sublt	r2, r6, r3
 80044fa:	9b0c      	ldrlt	r3, [sp, #48]	; 0x30
 80044fc:	bfbf      	itttt	lt
 80044fe:	9608      	strlt	r6, [sp, #32]
 8004500:	189b      	addlt	r3, r3, r2
 8004502:	930c      	strlt	r3, [sp, #48]	; 0x30
 8004504:	2600      	movlt	r6, #0
 8004506:	f1b9 0f00 	cmp.w	r9, #0
 800450a:	bfb9      	ittee	lt
 800450c:	eba8 0509 	sublt.w	r5, r8, r9
 8004510:	2300      	movlt	r3, #0
 8004512:	4645      	movge	r5, r8
 8004514:	464b      	movge	r3, r9
 8004516:	e6e2      	b.n	80042de <_dtoa_r+0x716>
 8004518:	9e08      	ldr	r6, [sp, #32]
 800451a:	4645      	mov	r5, r8
 800451c:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800451e:	e6e7      	b.n	80042f0 <_dtoa_r+0x728>
 8004520:	9a08      	ldr	r2, [sp, #32]
 8004522:	e710      	b.n	8004346 <_dtoa_r+0x77e>
 8004524:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8004526:	2b01      	cmp	r3, #1
 8004528:	dc18      	bgt.n	800455c <_dtoa_r+0x994>
 800452a:	9b02      	ldr	r3, [sp, #8]
 800452c:	b9b3      	cbnz	r3, 800455c <_dtoa_r+0x994>
 800452e:	9b03      	ldr	r3, [sp, #12]
 8004530:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8004534:	b9a3      	cbnz	r3, 8004560 <_dtoa_r+0x998>
 8004536:	9b03      	ldr	r3, [sp, #12]
 8004538:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800453c:	0d1b      	lsrs	r3, r3, #20
 800453e:	051b      	lsls	r3, r3, #20
 8004540:	b12b      	cbz	r3, 800454e <_dtoa_r+0x986>
 8004542:	9b07      	ldr	r3, [sp, #28]
 8004544:	f108 0801 	add.w	r8, r8, #1
 8004548:	3301      	adds	r3, #1
 800454a:	9307      	str	r3, [sp, #28]
 800454c:	2301      	movs	r3, #1
 800454e:	9308      	str	r3, [sp, #32]
 8004550:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8004552:	2b00      	cmp	r3, #0
 8004554:	f47f af11 	bne.w	800437a <_dtoa_r+0x7b2>
 8004558:	2001      	movs	r0, #1
 800455a:	e716      	b.n	800438a <_dtoa_r+0x7c2>
 800455c:	2300      	movs	r3, #0
 800455e:	e7f6      	b.n	800454e <_dtoa_r+0x986>
 8004560:	9b02      	ldr	r3, [sp, #8]
 8004562:	e7f4      	b.n	800454e <_dtoa_r+0x986>
 8004564:	f43f af23 	beq.w	80043ae <_dtoa_r+0x7e6>
 8004568:	9a07      	ldr	r2, [sp, #28]
 800456a:	331c      	adds	r3, #28
 800456c:	441a      	add	r2, r3
 800456e:	4498      	add	r8, r3
 8004570:	441d      	add	r5, r3
 8004572:	4613      	mov	r3, r2
 8004574:	e71a      	b.n	80043ac <_dtoa_r+0x7e4>
 8004576:	4603      	mov	r3, r0
 8004578:	e7f6      	b.n	8004568 <_dtoa_r+0x9a0>
 800457a:	bf00      	nop
 800457c:	40240000 	.word	0x40240000
 8004580:	f1b9 0f00 	cmp.w	r9, #0
 8004584:	dc33      	bgt.n	80045ee <_dtoa_r+0xa26>
 8004586:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8004588:	2b02      	cmp	r3, #2
 800458a:	dd30      	ble.n	80045ee <_dtoa_r+0xa26>
 800458c:	f8cd 9010 	str.w	r9, [sp, #16]
 8004590:	9b04      	ldr	r3, [sp, #16]
 8004592:	b963      	cbnz	r3, 80045ae <_dtoa_r+0x9e6>
 8004594:	4631      	mov	r1, r6
 8004596:	2205      	movs	r2, #5
 8004598:	4620      	mov	r0, r4
 800459a:	f000 fb7c 	bl	8004c96 <__multadd>
 800459e:	4601      	mov	r1, r0
 80045a0:	4606      	mov	r6, r0
 80045a2:	4650      	mov	r0, sl
 80045a4:	f000 fd35 	bl	8005012 <__mcmp>
 80045a8:	2800      	cmp	r0, #0
 80045aa:	f73f ad5c 	bgt.w	8004066 <_dtoa_r+0x49e>
 80045ae:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80045b0:	9d06      	ldr	r5, [sp, #24]
 80045b2:	ea6f 0b03 	mvn.w	fp, r3
 80045b6:	2300      	movs	r3, #0
 80045b8:	9307      	str	r3, [sp, #28]
 80045ba:	4631      	mov	r1, r6
 80045bc:	4620      	mov	r0, r4
 80045be:	f000 fb53 	bl	8004c68 <_Bfree>
 80045c2:	2f00      	cmp	r7, #0
 80045c4:	f43f ae4b 	beq.w	800425e <_dtoa_r+0x696>
 80045c8:	9b07      	ldr	r3, [sp, #28]
 80045ca:	b12b      	cbz	r3, 80045d8 <_dtoa_r+0xa10>
 80045cc:	42bb      	cmp	r3, r7
 80045ce:	d003      	beq.n	80045d8 <_dtoa_r+0xa10>
 80045d0:	4619      	mov	r1, r3
 80045d2:	4620      	mov	r0, r4
 80045d4:	f000 fb48 	bl	8004c68 <_Bfree>
 80045d8:	4639      	mov	r1, r7
 80045da:	4620      	mov	r0, r4
 80045dc:	f000 fb44 	bl	8004c68 <_Bfree>
 80045e0:	e63d      	b.n	800425e <_dtoa_r+0x696>
 80045e2:	2600      	movs	r6, #0
 80045e4:	4637      	mov	r7, r6
 80045e6:	e7e2      	b.n	80045ae <_dtoa_r+0x9e6>
 80045e8:	46bb      	mov	fp, r7
 80045ea:	4637      	mov	r7, r6
 80045ec:	e53b      	b.n	8004066 <_dtoa_r+0x49e>
 80045ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80045f0:	f8cd 9010 	str.w	r9, [sp, #16]
 80045f4:	2b00      	cmp	r3, #0
 80045f6:	f47f af12 	bne.w	800441e <_dtoa_r+0x856>
 80045fa:	9d06      	ldr	r5, [sp, #24]
 80045fc:	4631      	mov	r1, r6
 80045fe:	4650      	mov	r0, sl
 8004600:	f7ff fa54 	bl	8003aac <quorem>
 8004604:	9b06      	ldr	r3, [sp, #24]
 8004606:	f100 0930 	add.w	r9, r0, #48	; 0x30
 800460a:	f805 9b01 	strb.w	r9, [r5], #1
 800460e:	9a04      	ldr	r2, [sp, #16]
 8004610:	1aeb      	subs	r3, r5, r3
 8004612:	429a      	cmp	r2, r3
 8004614:	f300 8081 	bgt.w	800471a <_dtoa_r+0xb52>
 8004618:	9b06      	ldr	r3, [sp, #24]
 800461a:	2a01      	cmp	r2, #1
 800461c:	bfac      	ite	ge
 800461e:	189b      	addge	r3, r3, r2
 8004620:	3301      	addlt	r3, #1
 8004622:	4698      	mov	r8, r3
 8004624:	2300      	movs	r3, #0
 8004626:	9307      	str	r3, [sp, #28]
 8004628:	4651      	mov	r1, sl
 800462a:	2201      	movs	r2, #1
 800462c:	4620      	mov	r0, r4
 800462e:	f000 fc9f 	bl	8004f70 <__lshift>
 8004632:	4631      	mov	r1, r6
 8004634:	4682      	mov	sl, r0
 8004636:	f000 fcec 	bl	8005012 <__mcmp>
 800463a:	2800      	cmp	r0, #0
 800463c:	dc34      	bgt.n	80046a8 <_dtoa_r+0xae0>
 800463e:	d102      	bne.n	8004646 <_dtoa_r+0xa7e>
 8004640:	f019 0f01 	tst.w	r9, #1
 8004644:	d130      	bne.n	80046a8 <_dtoa_r+0xae0>
 8004646:	4645      	mov	r5, r8
 8004648:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 800464c:	1e6a      	subs	r2, r5, #1
 800464e:	2b30      	cmp	r3, #48	; 0x30
 8004650:	d1b3      	bne.n	80045ba <_dtoa_r+0x9f2>
 8004652:	4615      	mov	r5, r2
 8004654:	e7f8      	b.n	8004648 <_dtoa_r+0xa80>
 8004656:	4638      	mov	r0, r7
 8004658:	e6ff      	b.n	800445a <_dtoa_r+0x892>
 800465a:	2301      	movs	r3, #1
 800465c:	e722      	b.n	80044a4 <_dtoa_r+0x8dc>
 800465e:	9a02      	ldr	r2, [sp, #8]
 8004660:	2a00      	cmp	r2, #0
 8004662:	db04      	blt.n	800466e <_dtoa_r+0xaa6>
 8004664:	d128      	bne.n	80046b8 <_dtoa_r+0xaf0>
 8004666:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8004668:	bb32      	cbnz	r2, 80046b8 <_dtoa_r+0xaf0>
 800466a:	9a08      	ldr	r2, [sp, #32]
 800466c:	bb22      	cbnz	r2, 80046b8 <_dtoa_r+0xaf0>
 800466e:	2b00      	cmp	r3, #0
 8004670:	f77f af32 	ble.w	80044d8 <_dtoa_r+0x910>
 8004674:	4651      	mov	r1, sl
 8004676:	2201      	movs	r2, #1
 8004678:	4620      	mov	r0, r4
 800467a:	f000 fc79 	bl	8004f70 <__lshift>
 800467e:	4631      	mov	r1, r6
 8004680:	4682      	mov	sl, r0
 8004682:	f000 fcc6 	bl	8005012 <__mcmp>
 8004686:	2800      	cmp	r0, #0
 8004688:	dc05      	bgt.n	8004696 <_dtoa_r+0xace>
 800468a:	f47f af25 	bne.w	80044d8 <_dtoa_r+0x910>
 800468e:	f019 0f01 	tst.w	r9, #1
 8004692:	f43f af21 	beq.w	80044d8 <_dtoa_r+0x910>
 8004696:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 800469a:	f47f af1b 	bne.w	80044d4 <_dtoa_r+0x90c>
 800469e:	2339      	movs	r3, #57	; 0x39
 80046a0:	f108 0801 	add.w	r8, r8, #1
 80046a4:	f808 3c01 	strb.w	r3, [r8, #-1]
 80046a8:	4645      	mov	r5, r8
 80046aa:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 80046ae:	1e6a      	subs	r2, r5, #1
 80046b0:	2b39      	cmp	r3, #57	; 0x39
 80046b2:	d03a      	beq.n	800472a <_dtoa_r+0xb62>
 80046b4:	3301      	adds	r3, #1
 80046b6:	e03f      	b.n	8004738 <_dtoa_r+0xb70>
 80046b8:	2b00      	cmp	r3, #0
 80046ba:	f108 0501 	add.w	r5, r8, #1
 80046be:	dd05      	ble.n	80046cc <_dtoa_r+0xb04>
 80046c0:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 80046c4:	d0eb      	beq.n	800469e <_dtoa_r+0xad6>
 80046c6:	f109 0901 	add.w	r9, r9, #1
 80046ca:	e707      	b.n	80044dc <_dtoa_r+0x914>
 80046cc:	9b06      	ldr	r3, [sp, #24]
 80046ce:	9a04      	ldr	r2, [sp, #16]
 80046d0:	1aeb      	subs	r3, r5, r3
 80046d2:	4293      	cmp	r3, r2
 80046d4:	46a8      	mov	r8, r5
 80046d6:	f805 9c01 	strb.w	r9, [r5, #-1]
 80046da:	d0a5      	beq.n	8004628 <_dtoa_r+0xa60>
 80046dc:	4651      	mov	r1, sl
 80046de:	2300      	movs	r3, #0
 80046e0:	220a      	movs	r2, #10
 80046e2:	4620      	mov	r0, r4
 80046e4:	f000 fad7 	bl	8004c96 <__multadd>
 80046e8:	9b07      	ldr	r3, [sp, #28]
 80046ea:	4682      	mov	sl, r0
 80046ec:	42bb      	cmp	r3, r7
 80046ee:	f04f 020a 	mov.w	r2, #10
 80046f2:	f04f 0300 	mov.w	r3, #0
 80046f6:	9907      	ldr	r1, [sp, #28]
 80046f8:	4620      	mov	r0, r4
 80046fa:	d104      	bne.n	8004706 <_dtoa_r+0xb3e>
 80046fc:	f000 facb 	bl	8004c96 <__multadd>
 8004700:	9007      	str	r0, [sp, #28]
 8004702:	4607      	mov	r7, r0
 8004704:	e6b1      	b.n	800446a <_dtoa_r+0x8a2>
 8004706:	f000 fac6 	bl	8004c96 <__multadd>
 800470a:	2300      	movs	r3, #0
 800470c:	9007      	str	r0, [sp, #28]
 800470e:	220a      	movs	r2, #10
 8004710:	4639      	mov	r1, r7
 8004712:	4620      	mov	r0, r4
 8004714:	f000 fabf 	bl	8004c96 <__multadd>
 8004718:	e7f3      	b.n	8004702 <_dtoa_r+0xb3a>
 800471a:	4651      	mov	r1, sl
 800471c:	2300      	movs	r3, #0
 800471e:	220a      	movs	r2, #10
 8004720:	4620      	mov	r0, r4
 8004722:	f000 fab8 	bl	8004c96 <__multadd>
 8004726:	4682      	mov	sl, r0
 8004728:	e768      	b.n	80045fc <_dtoa_r+0xa34>
 800472a:	9b06      	ldr	r3, [sp, #24]
 800472c:	4293      	cmp	r3, r2
 800472e:	d105      	bne.n	800473c <_dtoa_r+0xb74>
 8004730:	2331      	movs	r3, #49	; 0x31
 8004732:	9a06      	ldr	r2, [sp, #24]
 8004734:	f10b 0b01 	add.w	fp, fp, #1
 8004738:	7013      	strb	r3, [r2, #0]
 800473a:	e73e      	b.n	80045ba <_dtoa_r+0x9f2>
 800473c:	4615      	mov	r5, r2
 800473e:	e7b4      	b.n	80046aa <_dtoa_r+0xae2>
 8004740:	4b09      	ldr	r3, [pc, #36]	; (8004768 <_dtoa_r+0xba0>)
 8004742:	f7ff baa3 	b.w	8003c8c <_dtoa_r+0xc4>
 8004746:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004748:	2b00      	cmp	r3, #0
 800474a:	f47f aa7d 	bne.w	8003c48 <_dtoa_r+0x80>
 800474e:	4b07      	ldr	r3, [pc, #28]	; (800476c <_dtoa_r+0xba4>)
 8004750:	f7ff ba9c 	b.w	8003c8c <_dtoa_r+0xc4>
 8004754:	9b04      	ldr	r3, [sp, #16]
 8004756:	2b00      	cmp	r3, #0
 8004758:	f73f af4f 	bgt.w	80045fa <_dtoa_r+0xa32>
 800475c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 800475e:	2b02      	cmp	r3, #2
 8004760:	f77f af4b 	ble.w	80045fa <_dtoa_r+0xa32>
 8004764:	e714      	b.n	8004590 <_dtoa_r+0x9c8>
 8004766:	bf00      	nop
 8004768:	08006546 	.word	0x08006546
 800476c:	08006568 	.word	0x08006568

08004770 <_localeconv_r>:
 8004770:	4b04      	ldr	r3, [pc, #16]	; (8004784 <_localeconv_r+0x14>)
 8004772:	681b      	ldr	r3, [r3, #0]
 8004774:	6a18      	ldr	r0, [r3, #32]
 8004776:	4b04      	ldr	r3, [pc, #16]	; (8004788 <_localeconv_r+0x18>)
 8004778:	2800      	cmp	r0, #0
 800477a:	bf08      	it	eq
 800477c:	4618      	moveq	r0, r3
 800477e:	30f0      	adds	r0, #240	; 0xf0
 8004780:	4770      	bx	lr
 8004782:	bf00      	nop
 8004784:	20000014 	.word	0x20000014
 8004788:	20000518 	.word	0x20000518

0800478c <malloc>:
 800478c:	4b02      	ldr	r3, [pc, #8]	; (8004798 <malloc+0xc>)
 800478e:	4601      	mov	r1, r0
 8004790:	6818      	ldr	r0, [r3, #0]
 8004792:	f000 b803 	b.w	800479c <_malloc_r>
 8004796:	bf00      	nop
 8004798:	20000014 	.word	0x20000014

0800479c <_malloc_r>:
 800479c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80047a0:	f101 040b 	add.w	r4, r1, #11
 80047a4:	2c16      	cmp	r4, #22
 80047a6:	4681      	mov	r9, r0
 80047a8:	d907      	bls.n	80047ba <_malloc_r+0x1e>
 80047aa:	f034 0407 	bics.w	r4, r4, #7
 80047ae:	d505      	bpl.n	80047bc <_malloc_r+0x20>
 80047b0:	230c      	movs	r3, #12
 80047b2:	f8c9 3000 	str.w	r3, [r9]
 80047b6:	2600      	movs	r6, #0
 80047b8:	e131      	b.n	8004a1e <_malloc_r+0x282>
 80047ba:	2410      	movs	r4, #16
 80047bc:	428c      	cmp	r4, r1
 80047be:	d3f7      	bcc.n	80047b0 <_malloc_r+0x14>
 80047c0:	4648      	mov	r0, r9
 80047c2:	f000 fa11 	bl	8004be8 <__malloc_lock>
 80047c6:	f5b4 7ffc 	cmp.w	r4, #504	; 0x1f8
 80047ca:	4d9b      	ldr	r5, [pc, #620]	; (8004a38 <_malloc_r+0x29c>)
 80047cc:	d236      	bcs.n	800483c <_malloc_r+0xa0>
 80047ce:	f104 0208 	add.w	r2, r4, #8
 80047d2:	442a      	add	r2, r5
 80047d4:	6856      	ldr	r6, [r2, #4]
 80047d6:	f1a2 0108 	sub.w	r1, r2, #8
 80047da:	428e      	cmp	r6, r1
 80047dc:	ea4f 03d4 	mov.w	r3, r4, lsr #3
 80047e0:	d102      	bne.n	80047e8 <_malloc_r+0x4c>
 80047e2:	68d6      	ldr	r6, [r2, #12]
 80047e4:	42b2      	cmp	r2, r6
 80047e6:	d010      	beq.n	800480a <_malloc_r+0x6e>
 80047e8:	6873      	ldr	r3, [r6, #4]
 80047ea:	68f2      	ldr	r2, [r6, #12]
 80047ec:	68b1      	ldr	r1, [r6, #8]
 80047ee:	f023 0303 	bic.w	r3, r3, #3
 80047f2:	60ca      	str	r2, [r1, #12]
 80047f4:	4433      	add	r3, r6
 80047f6:	6091      	str	r1, [r2, #8]
 80047f8:	685a      	ldr	r2, [r3, #4]
 80047fa:	f042 0201 	orr.w	r2, r2, #1
 80047fe:	605a      	str	r2, [r3, #4]
 8004800:	4648      	mov	r0, r9
 8004802:	f000 f9f7 	bl	8004bf4 <__malloc_unlock>
 8004806:	3608      	adds	r6, #8
 8004808:	e109      	b.n	8004a1e <_malloc_r+0x282>
 800480a:	3302      	adds	r3, #2
 800480c:	4a8b      	ldr	r2, [pc, #556]	; (8004a3c <_malloc_r+0x2a0>)
 800480e:	692e      	ldr	r6, [r5, #16]
 8004810:	4611      	mov	r1, r2
 8004812:	4296      	cmp	r6, r2
 8004814:	d06d      	beq.n	80048f2 <_malloc_r+0x156>
 8004816:	6870      	ldr	r0, [r6, #4]
 8004818:	f020 0003 	bic.w	r0, r0, #3
 800481c:	1b07      	subs	r7, r0, r4
 800481e:	2f0f      	cmp	r7, #15
 8004820:	dd47      	ble.n	80048b2 <_malloc_r+0x116>
 8004822:	1933      	adds	r3, r6, r4
 8004824:	f044 0401 	orr.w	r4, r4, #1
 8004828:	6074      	str	r4, [r6, #4]
 800482a:	616b      	str	r3, [r5, #20]
 800482c:	612b      	str	r3, [r5, #16]
 800482e:	60da      	str	r2, [r3, #12]
 8004830:	609a      	str	r2, [r3, #8]
 8004832:	f047 0201 	orr.w	r2, r7, #1
 8004836:	605a      	str	r2, [r3, #4]
 8004838:	5037      	str	r7, [r6, r0]
 800483a:	e7e1      	b.n	8004800 <_malloc_r+0x64>
 800483c:	0a63      	lsrs	r3, r4, #9
 800483e:	d02a      	beq.n	8004896 <_malloc_r+0xfa>
 8004840:	2b04      	cmp	r3, #4
 8004842:	d812      	bhi.n	800486a <_malloc_r+0xce>
 8004844:	09a3      	lsrs	r3, r4, #6
 8004846:	3338      	adds	r3, #56	; 0x38
 8004848:	1c5a      	adds	r2, r3, #1
 800484a:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
 800484e:	6856      	ldr	r6, [r2, #4]
 8004850:	f1a2 0008 	sub.w	r0, r2, #8
 8004854:	4286      	cmp	r6, r0
 8004856:	d006      	beq.n	8004866 <_malloc_r+0xca>
 8004858:	6872      	ldr	r2, [r6, #4]
 800485a:	f022 0203 	bic.w	r2, r2, #3
 800485e:	1b11      	subs	r1, r2, r4
 8004860:	290f      	cmp	r1, #15
 8004862:	dd1c      	ble.n	800489e <_malloc_r+0x102>
 8004864:	3b01      	subs	r3, #1
 8004866:	3301      	adds	r3, #1
 8004868:	e7d0      	b.n	800480c <_malloc_r+0x70>
 800486a:	2b14      	cmp	r3, #20
 800486c:	d801      	bhi.n	8004872 <_malloc_r+0xd6>
 800486e:	335b      	adds	r3, #91	; 0x5b
 8004870:	e7ea      	b.n	8004848 <_malloc_r+0xac>
 8004872:	2b54      	cmp	r3, #84	; 0x54
 8004874:	d802      	bhi.n	800487c <_malloc_r+0xe0>
 8004876:	0b23      	lsrs	r3, r4, #12
 8004878:	336e      	adds	r3, #110	; 0x6e
 800487a:	e7e5      	b.n	8004848 <_malloc_r+0xac>
 800487c:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
 8004880:	d802      	bhi.n	8004888 <_malloc_r+0xec>
 8004882:	0be3      	lsrs	r3, r4, #15
 8004884:	3377      	adds	r3, #119	; 0x77
 8004886:	e7df      	b.n	8004848 <_malloc_r+0xac>
 8004888:	f240 5254 	movw	r2, #1364	; 0x554
 800488c:	4293      	cmp	r3, r2
 800488e:	d804      	bhi.n	800489a <_malloc_r+0xfe>
 8004890:	0ca3      	lsrs	r3, r4, #18
 8004892:	337c      	adds	r3, #124	; 0x7c
 8004894:	e7d8      	b.n	8004848 <_malloc_r+0xac>
 8004896:	233f      	movs	r3, #63	; 0x3f
 8004898:	e7d6      	b.n	8004848 <_malloc_r+0xac>
 800489a:	237e      	movs	r3, #126	; 0x7e
 800489c:	e7d4      	b.n	8004848 <_malloc_r+0xac>
 800489e:	2900      	cmp	r1, #0
 80048a0:	68f1      	ldr	r1, [r6, #12]
 80048a2:	db04      	blt.n	80048ae <_malloc_r+0x112>
 80048a4:	68b3      	ldr	r3, [r6, #8]
 80048a6:	60d9      	str	r1, [r3, #12]
 80048a8:	608b      	str	r3, [r1, #8]
 80048aa:	18b3      	adds	r3, r6, r2
 80048ac:	e7a4      	b.n	80047f8 <_malloc_r+0x5c>
 80048ae:	460e      	mov	r6, r1
 80048b0:	e7d0      	b.n	8004854 <_malloc_r+0xb8>
 80048b2:	2f00      	cmp	r7, #0
 80048b4:	616a      	str	r2, [r5, #20]
 80048b6:	612a      	str	r2, [r5, #16]
 80048b8:	db05      	blt.n	80048c6 <_malloc_r+0x12a>
 80048ba:	4430      	add	r0, r6
 80048bc:	6843      	ldr	r3, [r0, #4]
 80048be:	f043 0301 	orr.w	r3, r3, #1
 80048c2:	6043      	str	r3, [r0, #4]
 80048c4:	e79c      	b.n	8004800 <_malloc_r+0x64>
 80048c6:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 80048ca:	d244      	bcs.n	8004956 <_malloc_r+0x1ba>
 80048cc:	2201      	movs	r2, #1
 80048ce:	08c0      	lsrs	r0, r0, #3
 80048d0:	1087      	asrs	r7, r0, #2
 80048d2:	fa02 f707 	lsl.w	r7, r2, r7
 80048d6:	686a      	ldr	r2, [r5, #4]
 80048d8:	3001      	adds	r0, #1
 80048da:	433a      	orrs	r2, r7
 80048dc:	606a      	str	r2, [r5, #4]
 80048de:	f855 7030 	ldr.w	r7, [r5, r0, lsl #3]
 80048e2:	eb05 02c0 	add.w	r2, r5, r0, lsl #3
 80048e6:	3a08      	subs	r2, #8
 80048e8:	60f2      	str	r2, [r6, #12]
 80048ea:	60b7      	str	r7, [r6, #8]
 80048ec:	f845 6030 	str.w	r6, [r5, r0, lsl #3]
 80048f0:	60fe      	str	r6, [r7, #12]
 80048f2:	2001      	movs	r0, #1
 80048f4:	109a      	asrs	r2, r3, #2
 80048f6:	fa00 f202 	lsl.w	r2, r0, r2
 80048fa:	6868      	ldr	r0, [r5, #4]
 80048fc:	4282      	cmp	r2, r0
 80048fe:	f200 809f 	bhi.w	8004a40 <_malloc_r+0x2a4>
 8004902:	4202      	tst	r2, r0
 8004904:	d106      	bne.n	8004914 <_malloc_r+0x178>
 8004906:	f023 0303 	bic.w	r3, r3, #3
 800490a:	0052      	lsls	r2, r2, #1
 800490c:	4202      	tst	r2, r0
 800490e:	f103 0304 	add.w	r3, r3, #4
 8004912:	d0fa      	beq.n	800490a <_malloc_r+0x16e>
 8004914:	eb05 0cc3 	add.w	ip, r5, r3, lsl #3
 8004918:	46e0      	mov	r8, ip
 800491a:	469e      	mov	lr, r3
 800491c:	f8d8 600c 	ldr.w	r6, [r8, #12]
 8004920:	4546      	cmp	r6, r8
 8004922:	d153      	bne.n	80049cc <_malloc_r+0x230>
 8004924:	f10e 0e01 	add.w	lr, lr, #1
 8004928:	f01e 0f03 	tst.w	lr, #3
 800492c:	f108 0808 	add.w	r8, r8, #8
 8004930:	d1f4      	bne.n	800491c <_malloc_r+0x180>
 8004932:	0798      	lsls	r0, r3, #30
 8004934:	d179      	bne.n	8004a2a <_malloc_r+0x28e>
 8004936:	686b      	ldr	r3, [r5, #4]
 8004938:	ea23 0302 	bic.w	r3, r3, r2
 800493c:	606b      	str	r3, [r5, #4]
 800493e:	6868      	ldr	r0, [r5, #4]
 8004940:	0052      	lsls	r2, r2, #1
 8004942:	4282      	cmp	r2, r0
 8004944:	d87c      	bhi.n	8004a40 <_malloc_r+0x2a4>
 8004946:	2a00      	cmp	r2, #0
 8004948:	d07a      	beq.n	8004a40 <_malloc_r+0x2a4>
 800494a:	4673      	mov	r3, lr
 800494c:	4202      	tst	r2, r0
 800494e:	d1e1      	bne.n	8004914 <_malloc_r+0x178>
 8004950:	3304      	adds	r3, #4
 8004952:	0052      	lsls	r2, r2, #1
 8004954:	e7fa      	b.n	800494c <_malloc_r+0x1b0>
 8004956:	0a42      	lsrs	r2, r0, #9
 8004958:	2a04      	cmp	r2, #4
 800495a:	d815      	bhi.n	8004988 <_malloc_r+0x1ec>
 800495c:	0982      	lsrs	r2, r0, #6
 800495e:	3238      	adds	r2, #56	; 0x38
 8004960:	1c57      	adds	r7, r2, #1
 8004962:	f855 7037 	ldr.w	r7, [r5, r7, lsl #3]
 8004966:	eb05 0ec2 	add.w	lr, r5, r2, lsl #3
 800496a:	45be      	cmp	lr, r7
 800496c:	d126      	bne.n	80049bc <_malloc_r+0x220>
 800496e:	2001      	movs	r0, #1
 8004970:	1092      	asrs	r2, r2, #2
 8004972:	fa00 f202 	lsl.w	r2, r0, r2
 8004976:	6868      	ldr	r0, [r5, #4]
 8004978:	4310      	orrs	r0, r2
 800497a:	6068      	str	r0, [r5, #4]
 800497c:	f8c6 e00c 	str.w	lr, [r6, #12]
 8004980:	60b7      	str	r7, [r6, #8]
 8004982:	f8ce 6008 	str.w	r6, [lr, #8]
 8004986:	e7b3      	b.n	80048f0 <_malloc_r+0x154>
 8004988:	2a14      	cmp	r2, #20
 800498a:	d801      	bhi.n	8004990 <_malloc_r+0x1f4>
 800498c:	325b      	adds	r2, #91	; 0x5b
 800498e:	e7e7      	b.n	8004960 <_malloc_r+0x1c4>
 8004990:	2a54      	cmp	r2, #84	; 0x54
 8004992:	d802      	bhi.n	800499a <_malloc_r+0x1fe>
 8004994:	0b02      	lsrs	r2, r0, #12
 8004996:	326e      	adds	r2, #110	; 0x6e
 8004998:	e7e2      	b.n	8004960 <_malloc_r+0x1c4>
 800499a:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
 800499e:	d802      	bhi.n	80049a6 <_malloc_r+0x20a>
 80049a0:	0bc2      	lsrs	r2, r0, #15
 80049a2:	3277      	adds	r2, #119	; 0x77
 80049a4:	e7dc      	b.n	8004960 <_malloc_r+0x1c4>
 80049a6:	f240 5754 	movw	r7, #1364	; 0x554
 80049aa:	42ba      	cmp	r2, r7
 80049ac:	bf9a      	itte	ls
 80049ae:	0c82      	lsrls	r2, r0, #18
 80049b0:	327c      	addls	r2, #124	; 0x7c
 80049b2:	227e      	movhi	r2, #126	; 0x7e
 80049b4:	e7d4      	b.n	8004960 <_malloc_r+0x1c4>
 80049b6:	68bf      	ldr	r7, [r7, #8]
 80049b8:	45be      	cmp	lr, r7
 80049ba:	d004      	beq.n	80049c6 <_malloc_r+0x22a>
 80049bc:	687a      	ldr	r2, [r7, #4]
 80049be:	f022 0203 	bic.w	r2, r2, #3
 80049c2:	4290      	cmp	r0, r2
 80049c4:	d3f7      	bcc.n	80049b6 <_malloc_r+0x21a>
 80049c6:	f8d7 e00c 	ldr.w	lr, [r7, #12]
 80049ca:	e7d7      	b.n	800497c <_malloc_r+0x1e0>
 80049cc:	6870      	ldr	r0, [r6, #4]
 80049ce:	68f7      	ldr	r7, [r6, #12]
 80049d0:	f020 0003 	bic.w	r0, r0, #3
 80049d4:	eba0 0a04 	sub.w	sl, r0, r4
 80049d8:	f1ba 0f0f 	cmp.w	sl, #15
 80049dc:	dd10      	ble.n	8004a00 <_malloc_r+0x264>
 80049de:	68b2      	ldr	r2, [r6, #8]
 80049e0:	1933      	adds	r3, r6, r4
 80049e2:	f044 0401 	orr.w	r4, r4, #1
 80049e6:	6074      	str	r4, [r6, #4]
 80049e8:	60d7      	str	r7, [r2, #12]
 80049ea:	60ba      	str	r2, [r7, #8]
 80049ec:	f04a 0201 	orr.w	r2, sl, #1
 80049f0:	616b      	str	r3, [r5, #20]
 80049f2:	612b      	str	r3, [r5, #16]
 80049f4:	60d9      	str	r1, [r3, #12]
 80049f6:	6099      	str	r1, [r3, #8]
 80049f8:	605a      	str	r2, [r3, #4]
 80049fa:	f846 a000 	str.w	sl, [r6, r0]
 80049fe:	e6ff      	b.n	8004800 <_malloc_r+0x64>
 8004a00:	f1ba 0f00 	cmp.w	sl, #0
 8004a04:	db0f      	blt.n	8004a26 <_malloc_r+0x28a>
 8004a06:	4430      	add	r0, r6
 8004a08:	6843      	ldr	r3, [r0, #4]
 8004a0a:	f043 0301 	orr.w	r3, r3, #1
 8004a0e:	6043      	str	r3, [r0, #4]
 8004a10:	f856 3f08 	ldr.w	r3, [r6, #8]!
 8004a14:	4648      	mov	r0, r9
 8004a16:	60df      	str	r7, [r3, #12]
 8004a18:	60bb      	str	r3, [r7, #8]
 8004a1a:	f000 f8eb 	bl	8004bf4 <__malloc_unlock>
 8004a1e:	4630      	mov	r0, r6
 8004a20:	b003      	add	sp, #12
 8004a22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004a26:	463e      	mov	r6, r7
 8004a28:	e77a      	b.n	8004920 <_malloc_r+0x184>
 8004a2a:	f85c 0908 	ldr.w	r0, [ip], #-8
 8004a2e:	3b01      	subs	r3, #1
 8004a30:	4584      	cmp	ip, r0
 8004a32:	f43f af7e 	beq.w	8004932 <_malloc_r+0x196>
 8004a36:	e782      	b.n	800493e <_malloc_r+0x1a2>
 8004a38:	20000108 	.word	0x20000108
 8004a3c:	20000110 	.word	0x20000110
 8004a40:	f8d5 b008 	ldr.w	fp, [r5, #8]
 8004a44:	f8db 6004 	ldr.w	r6, [fp, #4]
 8004a48:	f026 0603 	bic.w	r6, r6, #3
 8004a4c:	42b4      	cmp	r4, r6
 8004a4e:	d803      	bhi.n	8004a58 <_malloc_r+0x2bc>
 8004a50:	1b33      	subs	r3, r6, r4
 8004a52:	2b0f      	cmp	r3, #15
 8004a54:	f300 8095 	bgt.w	8004b82 <_malloc_r+0x3e6>
 8004a58:	4a4f      	ldr	r2, [pc, #316]	; (8004b98 <_malloc_r+0x3fc>)
 8004a5a:	eb0b 0306 	add.w	r3, fp, r6
 8004a5e:	6817      	ldr	r7, [r2, #0]
 8004a60:	4a4e      	ldr	r2, [pc, #312]	; (8004b9c <_malloc_r+0x400>)
 8004a62:	3710      	adds	r7, #16
 8004a64:	6811      	ldr	r1, [r2, #0]
 8004a66:	4427      	add	r7, r4
 8004a68:	3101      	adds	r1, #1
 8004a6a:	d005      	beq.n	8004a78 <_malloc_r+0x2dc>
 8004a6c:	494c      	ldr	r1, [pc, #304]	; (8004ba0 <_malloc_r+0x404>)
 8004a6e:	3901      	subs	r1, #1
 8004a70:	440f      	add	r7, r1
 8004a72:	3101      	adds	r1, #1
 8004a74:	4249      	negs	r1, r1
 8004a76:	400f      	ands	r7, r1
 8004a78:	4639      	mov	r1, r7
 8004a7a:	4648      	mov	r0, r9
 8004a7c:	9201      	str	r2, [sp, #4]
 8004a7e:	9300      	str	r3, [sp, #0]
 8004a80:	f000 fb90 	bl	80051a4 <_sbrk_r>
 8004a84:	f1b0 3fff 	cmp.w	r0, #4294967295
 8004a88:	4680      	mov	r8, r0
 8004a8a:	d055      	beq.n	8004b38 <_malloc_r+0x39c>
 8004a8c:	9b00      	ldr	r3, [sp, #0]
 8004a8e:	9a01      	ldr	r2, [sp, #4]
 8004a90:	4283      	cmp	r3, r0
 8004a92:	d901      	bls.n	8004a98 <_malloc_r+0x2fc>
 8004a94:	45ab      	cmp	fp, r5
 8004a96:	d14f      	bne.n	8004b38 <_malloc_r+0x39c>
 8004a98:	4842      	ldr	r0, [pc, #264]	; (8004ba4 <_malloc_r+0x408>)
 8004a9a:	4543      	cmp	r3, r8
 8004a9c:	6801      	ldr	r1, [r0, #0]
 8004a9e:	4682      	mov	sl, r0
 8004aa0:	eb07 0e01 	add.w	lr, r7, r1
 8004aa4:	f8c0 e000 	str.w	lr, [r0]
 8004aa8:	493f      	ldr	r1, [pc, #252]	; (8004ba8 <_malloc_r+0x40c>)
 8004aaa:	d113      	bne.n	8004ad4 <_malloc_r+0x338>
 8004aac:	420b      	tst	r3, r1
 8004aae:	d111      	bne.n	8004ad4 <_malloc_r+0x338>
 8004ab0:	68ab      	ldr	r3, [r5, #8]
 8004ab2:	443e      	add	r6, r7
 8004ab4:	f046 0601 	orr.w	r6, r6, #1
 8004ab8:	605e      	str	r6, [r3, #4]
 8004aba:	4a3c      	ldr	r2, [pc, #240]	; (8004bac <_malloc_r+0x410>)
 8004abc:	f8da 3000 	ldr.w	r3, [sl]
 8004ac0:	6811      	ldr	r1, [r2, #0]
 8004ac2:	428b      	cmp	r3, r1
 8004ac4:	bf88      	it	hi
 8004ac6:	6013      	strhi	r3, [r2, #0]
 8004ac8:	4a39      	ldr	r2, [pc, #228]	; (8004bb0 <_malloc_r+0x414>)
 8004aca:	6811      	ldr	r1, [r2, #0]
 8004acc:	428b      	cmp	r3, r1
 8004ace:	bf88      	it	hi
 8004ad0:	6013      	strhi	r3, [r2, #0]
 8004ad2:	e031      	b.n	8004b38 <_malloc_r+0x39c>
 8004ad4:	6810      	ldr	r0, [r2, #0]
 8004ad6:	3001      	adds	r0, #1
 8004ad8:	bf1b      	ittet	ne
 8004ada:	eba8 0303 	subne.w	r3, r8, r3
 8004ade:	4473      	addne	r3, lr
 8004ae0:	f8c2 8000 	streq.w	r8, [r2]
 8004ae4:	f8ca 3000 	strne.w	r3, [sl]
 8004ae8:	f018 0007 	ands.w	r0, r8, #7
 8004aec:	bf1c      	itt	ne
 8004aee:	f1c0 0008 	rsbne	r0, r0, #8
 8004af2:	4480      	addne	r8, r0
 8004af4:	4b2a      	ldr	r3, [pc, #168]	; (8004ba0 <_malloc_r+0x404>)
 8004af6:	4447      	add	r7, r8
 8004af8:	4418      	add	r0, r3
 8004afa:	400f      	ands	r7, r1
 8004afc:	1bc7      	subs	r7, r0, r7
 8004afe:	4639      	mov	r1, r7
 8004b00:	4648      	mov	r0, r9
 8004b02:	f000 fb4f 	bl	80051a4 <_sbrk_r>
 8004b06:	1c43      	adds	r3, r0, #1
 8004b08:	bf04      	itt	eq
 8004b0a:	4640      	moveq	r0, r8
 8004b0c:	2700      	moveq	r7, #0
 8004b0e:	f8da 3000 	ldr.w	r3, [sl]
 8004b12:	eba0 0008 	sub.w	r0, r0, r8
 8004b16:	443b      	add	r3, r7
 8004b18:	4407      	add	r7, r0
 8004b1a:	f047 0701 	orr.w	r7, r7, #1
 8004b1e:	45ab      	cmp	fp, r5
 8004b20:	f8c5 8008 	str.w	r8, [r5, #8]
 8004b24:	f8ca 3000 	str.w	r3, [sl]
 8004b28:	f8c8 7004 	str.w	r7, [r8, #4]
 8004b2c:	d0c5      	beq.n	8004aba <_malloc_r+0x31e>
 8004b2e:	2e0f      	cmp	r6, #15
 8004b30:	d810      	bhi.n	8004b54 <_malloc_r+0x3b8>
 8004b32:	2301      	movs	r3, #1
 8004b34:	f8c8 3004 	str.w	r3, [r8, #4]
 8004b38:	68ab      	ldr	r3, [r5, #8]
 8004b3a:	685a      	ldr	r2, [r3, #4]
 8004b3c:	f022 0203 	bic.w	r2, r2, #3
 8004b40:	4294      	cmp	r4, r2
 8004b42:	eba2 0304 	sub.w	r3, r2, r4
 8004b46:	d801      	bhi.n	8004b4c <_malloc_r+0x3b0>
 8004b48:	2b0f      	cmp	r3, #15
 8004b4a:	dc1a      	bgt.n	8004b82 <_malloc_r+0x3e6>
 8004b4c:	4648      	mov	r0, r9
 8004b4e:	f000 f851 	bl	8004bf4 <__malloc_unlock>
 8004b52:	e630      	b.n	80047b6 <_malloc_r+0x1a>
 8004b54:	2205      	movs	r2, #5
 8004b56:	f8db 3004 	ldr.w	r3, [fp, #4]
 8004b5a:	3e0c      	subs	r6, #12
 8004b5c:	f026 0607 	bic.w	r6, r6, #7
 8004b60:	f003 0301 	and.w	r3, r3, #1
 8004b64:	4333      	orrs	r3, r6
 8004b66:	f8cb 3004 	str.w	r3, [fp, #4]
 8004b6a:	2e0f      	cmp	r6, #15
 8004b6c:	eb0b 0306 	add.w	r3, fp, r6
 8004b70:	605a      	str	r2, [r3, #4]
 8004b72:	609a      	str	r2, [r3, #8]
 8004b74:	d9a1      	bls.n	8004aba <_malloc_r+0x31e>
 8004b76:	f10b 0108 	add.w	r1, fp, #8
 8004b7a:	4648      	mov	r0, r9
 8004b7c:	f000 fc20 	bl	80053c0 <_free_r>
 8004b80:	e79b      	b.n	8004aba <_malloc_r+0x31e>
 8004b82:	68ae      	ldr	r6, [r5, #8]
 8004b84:	f044 0201 	orr.w	r2, r4, #1
 8004b88:	f043 0301 	orr.w	r3, r3, #1
 8004b8c:	4434      	add	r4, r6
 8004b8e:	6072      	str	r2, [r6, #4]
 8004b90:	60ac      	str	r4, [r5, #8]
 8004b92:	6063      	str	r3, [r4, #4]
 8004b94:	e634      	b.n	8004800 <_malloc_r+0x64>
 8004b96:	bf00      	nop
 8004b98:	200006dc 	.word	0x200006dc
 8004b9c:	20000510 	.word	0x20000510
 8004ba0:	00000080 	.word	0x00000080
 8004ba4:	200006ac 	.word	0x200006ac
 8004ba8:	0000007f 	.word	0x0000007f
 8004bac:	200006d4 	.word	0x200006d4
 8004bb0:	200006d8 	.word	0x200006d8

08004bb4 <memchr>:
 8004bb4:	b510      	push	{r4, lr}
 8004bb6:	b2c9      	uxtb	r1, r1
 8004bb8:	4402      	add	r2, r0
 8004bba:	4290      	cmp	r0, r2
 8004bbc:	4603      	mov	r3, r0
 8004bbe:	d101      	bne.n	8004bc4 <memchr+0x10>
 8004bc0:	2000      	movs	r0, #0
 8004bc2:	bd10      	pop	{r4, pc}
 8004bc4:	781c      	ldrb	r4, [r3, #0]
 8004bc6:	3001      	adds	r0, #1
 8004bc8:	428c      	cmp	r4, r1
 8004bca:	d1f6      	bne.n	8004bba <memchr+0x6>
 8004bcc:	4618      	mov	r0, r3
 8004bce:	bd10      	pop	{r4, pc}

08004bd0 <memcpy>:
 8004bd0:	b510      	push	{r4, lr}
 8004bd2:	1e43      	subs	r3, r0, #1
 8004bd4:	440a      	add	r2, r1
 8004bd6:	4291      	cmp	r1, r2
 8004bd8:	d100      	bne.n	8004bdc <memcpy+0xc>
 8004bda:	bd10      	pop	{r4, pc}
 8004bdc:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004be0:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004be4:	e7f7      	b.n	8004bd6 <memcpy+0x6>
	...

08004be8 <__malloc_lock>:
 8004be8:	4801      	ldr	r0, [pc, #4]	; (8004bf0 <__malloc_lock+0x8>)
 8004bea:	f000 bca5 	b.w	8005538 <__retarget_lock_acquire_recursive>
 8004bee:	bf00      	nop
 8004bf0:	20000718 	.word	0x20000718

08004bf4 <__malloc_unlock>:
 8004bf4:	4801      	ldr	r0, [pc, #4]	; (8004bfc <__malloc_unlock+0x8>)
 8004bf6:	f000 bca0 	b.w	800553a <__retarget_lock_release_recursive>
 8004bfa:	bf00      	nop
 8004bfc:	20000718 	.word	0x20000718

08004c00 <_Balloc>:
 8004c00:	b570      	push	{r4, r5, r6, lr}
 8004c02:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8004c04:	4604      	mov	r4, r0
 8004c06:	460e      	mov	r6, r1
 8004c08:	b93d      	cbnz	r5, 8004c1a <_Balloc+0x1a>
 8004c0a:	2010      	movs	r0, #16
 8004c0c:	f7ff fdbe 	bl	800478c <malloc>
 8004c10:	6260      	str	r0, [r4, #36]	; 0x24
 8004c12:	6045      	str	r5, [r0, #4]
 8004c14:	6085      	str	r5, [r0, #8]
 8004c16:	6005      	str	r5, [r0, #0]
 8004c18:	60c5      	str	r5, [r0, #12]
 8004c1a:	6a65      	ldr	r5, [r4, #36]	; 0x24
 8004c1c:	68eb      	ldr	r3, [r5, #12]
 8004c1e:	b183      	cbz	r3, 8004c42 <_Balloc+0x42>
 8004c20:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004c22:	68db      	ldr	r3, [r3, #12]
 8004c24:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 8004c28:	b9b8      	cbnz	r0, 8004c5a <_Balloc+0x5a>
 8004c2a:	2101      	movs	r1, #1
 8004c2c:	fa01 f506 	lsl.w	r5, r1, r6
 8004c30:	1d6a      	adds	r2, r5, #5
 8004c32:	0092      	lsls	r2, r2, #2
 8004c34:	4620      	mov	r0, r4
 8004c36:	f000 fb3f 	bl	80052b8 <_calloc_r>
 8004c3a:	b160      	cbz	r0, 8004c56 <_Balloc+0x56>
 8004c3c:	6046      	str	r6, [r0, #4]
 8004c3e:	6085      	str	r5, [r0, #8]
 8004c40:	e00e      	b.n	8004c60 <_Balloc+0x60>
 8004c42:	2221      	movs	r2, #33	; 0x21
 8004c44:	2104      	movs	r1, #4
 8004c46:	4620      	mov	r0, r4
 8004c48:	f000 fb36 	bl	80052b8 <_calloc_r>
 8004c4c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004c4e:	60e8      	str	r0, [r5, #12]
 8004c50:	68db      	ldr	r3, [r3, #12]
 8004c52:	2b00      	cmp	r3, #0
 8004c54:	d1e4      	bne.n	8004c20 <_Balloc+0x20>
 8004c56:	2000      	movs	r0, #0
 8004c58:	bd70      	pop	{r4, r5, r6, pc}
 8004c5a:	6802      	ldr	r2, [r0, #0]
 8004c5c:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
 8004c60:	2300      	movs	r3, #0
 8004c62:	6103      	str	r3, [r0, #16]
 8004c64:	60c3      	str	r3, [r0, #12]
 8004c66:	bd70      	pop	{r4, r5, r6, pc}

08004c68 <_Bfree>:
 8004c68:	b570      	push	{r4, r5, r6, lr}
 8004c6a:	6a44      	ldr	r4, [r0, #36]	; 0x24
 8004c6c:	4606      	mov	r6, r0
 8004c6e:	460d      	mov	r5, r1
 8004c70:	b93c      	cbnz	r4, 8004c82 <_Bfree+0x1a>
 8004c72:	2010      	movs	r0, #16
 8004c74:	f7ff fd8a 	bl	800478c <malloc>
 8004c78:	6270      	str	r0, [r6, #36]	; 0x24
 8004c7a:	6044      	str	r4, [r0, #4]
 8004c7c:	6084      	str	r4, [r0, #8]
 8004c7e:	6004      	str	r4, [r0, #0]
 8004c80:	60c4      	str	r4, [r0, #12]
 8004c82:	b13d      	cbz	r5, 8004c94 <_Bfree+0x2c>
 8004c84:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8004c86:	686a      	ldr	r2, [r5, #4]
 8004c88:	68db      	ldr	r3, [r3, #12]
 8004c8a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8004c8e:	6029      	str	r1, [r5, #0]
 8004c90:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
 8004c94:	bd70      	pop	{r4, r5, r6, pc}

08004c96 <__multadd>:
 8004c96:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004c9a:	461f      	mov	r7, r3
 8004c9c:	4606      	mov	r6, r0
 8004c9e:	460c      	mov	r4, r1
 8004ca0:	2300      	movs	r3, #0
 8004ca2:	690d      	ldr	r5, [r1, #16]
 8004ca4:	f101 0e14 	add.w	lr, r1, #20
 8004ca8:	f8de 0000 	ldr.w	r0, [lr]
 8004cac:	3301      	adds	r3, #1
 8004cae:	b281      	uxth	r1, r0
 8004cb0:	fb02 7101 	mla	r1, r2, r1, r7
 8004cb4:	0c00      	lsrs	r0, r0, #16
 8004cb6:	0c0f      	lsrs	r7, r1, #16
 8004cb8:	fb02 7000 	mla	r0, r2, r0, r7
 8004cbc:	b289      	uxth	r1, r1
 8004cbe:	eb01 4100 	add.w	r1, r1, r0, lsl #16
 8004cc2:	429d      	cmp	r5, r3
 8004cc4:	ea4f 4710 	mov.w	r7, r0, lsr #16
 8004cc8:	f84e 1b04 	str.w	r1, [lr], #4
 8004ccc:	dcec      	bgt.n	8004ca8 <__multadd+0x12>
 8004cce:	b1d7      	cbz	r7, 8004d06 <__multadd+0x70>
 8004cd0:	68a3      	ldr	r3, [r4, #8]
 8004cd2:	429d      	cmp	r5, r3
 8004cd4:	db12      	blt.n	8004cfc <__multadd+0x66>
 8004cd6:	6861      	ldr	r1, [r4, #4]
 8004cd8:	4630      	mov	r0, r6
 8004cda:	3101      	adds	r1, #1
 8004cdc:	f7ff ff90 	bl	8004c00 <_Balloc>
 8004ce0:	4680      	mov	r8, r0
 8004ce2:	6922      	ldr	r2, [r4, #16]
 8004ce4:	f104 010c 	add.w	r1, r4, #12
 8004ce8:	3202      	adds	r2, #2
 8004cea:	0092      	lsls	r2, r2, #2
 8004cec:	300c      	adds	r0, #12
 8004cee:	f7ff ff6f 	bl	8004bd0 <memcpy>
 8004cf2:	4621      	mov	r1, r4
 8004cf4:	4630      	mov	r0, r6
 8004cf6:	f7ff ffb7 	bl	8004c68 <_Bfree>
 8004cfa:	4644      	mov	r4, r8
 8004cfc:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8004d00:	3501      	adds	r5, #1
 8004d02:	615f      	str	r7, [r3, #20]
 8004d04:	6125      	str	r5, [r4, #16]
 8004d06:	4620      	mov	r0, r4
 8004d08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004d0c <__hi0bits>:
 8004d0c:	0c02      	lsrs	r2, r0, #16
 8004d0e:	0412      	lsls	r2, r2, #16
 8004d10:	4603      	mov	r3, r0
 8004d12:	b9b2      	cbnz	r2, 8004d42 <__hi0bits+0x36>
 8004d14:	0403      	lsls	r3, r0, #16
 8004d16:	2010      	movs	r0, #16
 8004d18:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8004d1c:	bf04      	itt	eq
 8004d1e:	021b      	lsleq	r3, r3, #8
 8004d20:	3008      	addeq	r0, #8
 8004d22:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8004d26:	bf04      	itt	eq
 8004d28:	011b      	lsleq	r3, r3, #4
 8004d2a:	3004      	addeq	r0, #4
 8004d2c:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8004d30:	bf04      	itt	eq
 8004d32:	009b      	lsleq	r3, r3, #2
 8004d34:	3002      	addeq	r0, #2
 8004d36:	2b00      	cmp	r3, #0
 8004d38:	db06      	blt.n	8004d48 <__hi0bits+0x3c>
 8004d3a:	005b      	lsls	r3, r3, #1
 8004d3c:	d503      	bpl.n	8004d46 <__hi0bits+0x3a>
 8004d3e:	3001      	adds	r0, #1
 8004d40:	4770      	bx	lr
 8004d42:	2000      	movs	r0, #0
 8004d44:	e7e8      	b.n	8004d18 <__hi0bits+0xc>
 8004d46:	2020      	movs	r0, #32
 8004d48:	4770      	bx	lr

08004d4a <__lo0bits>:
 8004d4a:	6803      	ldr	r3, [r0, #0]
 8004d4c:	4601      	mov	r1, r0
 8004d4e:	f013 0207 	ands.w	r2, r3, #7
 8004d52:	d00b      	beq.n	8004d6c <__lo0bits+0x22>
 8004d54:	07da      	lsls	r2, r3, #31
 8004d56:	d423      	bmi.n	8004da0 <__lo0bits+0x56>
 8004d58:	0798      	lsls	r0, r3, #30
 8004d5a:	bf49      	itett	mi
 8004d5c:	085b      	lsrmi	r3, r3, #1
 8004d5e:	089b      	lsrpl	r3, r3, #2
 8004d60:	2001      	movmi	r0, #1
 8004d62:	600b      	strmi	r3, [r1, #0]
 8004d64:	bf5c      	itt	pl
 8004d66:	600b      	strpl	r3, [r1, #0]
 8004d68:	2002      	movpl	r0, #2
 8004d6a:	4770      	bx	lr
 8004d6c:	b298      	uxth	r0, r3
 8004d6e:	b9a8      	cbnz	r0, 8004d9c <__lo0bits+0x52>
 8004d70:	2010      	movs	r0, #16
 8004d72:	0c1b      	lsrs	r3, r3, #16
 8004d74:	f013 0fff 	tst.w	r3, #255	; 0xff
 8004d78:	bf04      	itt	eq
 8004d7a:	0a1b      	lsreq	r3, r3, #8
 8004d7c:	3008      	addeq	r0, #8
 8004d7e:	071a      	lsls	r2, r3, #28
 8004d80:	bf04      	itt	eq
 8004d82:	091b      	lsreq	r3, r3, #4
 8004d84:	3004      	addeq	r0, #4
 8004d86:	079a      	lsls	r2, r3, #30
 8004d88:	bf04      	itt	eq
 8004d8a:	089b      	lsreq	r3, r3, #2
 8004d8c:	3002      	addeq	r0, #2
 8004d8e:	07da      	lsls	r2, r3, #31
 8004d90:	d402      	bmi.n	8004d98 <__lo0bits+0x4e>
 8004d92:	085b      	lsrs	r3, r3, #1
 8004d94:	d006      	beq.n	8004da4 <__lo0bits+0x5a>
 8004d96:	3001      	adds	r0, #1
 8004d98:	600b      	str	r3, [r1, #0]
 8004d9a:	4770      	bx	lr
 8004d9c:	4610      	mov	r0, r2
 8004d9e:	e7e9      	b.n	8004d74 <__lo0bits+0x2a>
 8004da0:	2000      	movs	r0, #0
 8004da2:	4770      	bx	lr
 8004da4:	2020      	movs	r0, #32
 8004da6:	4770      	bx	lr

08004da8 <__i2b>:
 8004da8:	b510      	push	{r4, lr}
 8004daa:	460c      	mov	r4, r1
 8004dac:	2101      	movs	r1, #1
 8004dae:	f7ff ff27 	bl	8004c00 <_Balloc>
 8004db2:	2201      	movs	r2, #1
 8004db4:	6144      	str	r4, [r0, #20]
 8004db6:	6102      	str	r2, [r0, #16]
 8004db8:	bd10      	pop	{r4, pc}

08004dba <__multiply>:
 8004dba:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004dbe:	4614      	mov	r4, r2
 8004dc0:	690a      	ldr	r2, [r1, #16]
 8004dc2:	6923      	ldr	r3, [r4, #16]
 8004dc4:	4689      	mov	r9, r1
 8004dc6:	429a      	cmp	r2, r3
 8004dc8:	bfbe      	ittt	lt
 8004dca:	460b      	movlt	r3, r1
 8004dcc:	46a1      	movlt	r9, r4
 8004dce:	461c      	movlt	r4, r3
 8004dd0:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8004dd4:	f8d4 a010 	ldr.w	sl, [r4, #16]
 8004dd8:	f8d9 3008 	ldr.w	r3, [r9, #8]
 8004ddc:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8004de0:	eb07 060a 	add.w	r6, r7, sl
 8004de4:	429e      	cmp	r6, r3
 8004de6:	bfc8      	it	gt
 8004de8:	3101      	addgt	r1, #1
 8004dea:	f7ff ff09 	bl	8004c00 <_Balloc>
 8004dee:	f100 0514 	add.w	r5, r0, #20
 8004df2:	462b      	mov	r3, r5
 8004df4:	2200      	movs	r2, #0
 8004df6:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8004dfa:	4543      	cmp	r3, r8
 8004dfc:	d316      	bcc.n	8004e2c <__multiply+0x72>
 8004dfe:	f104 0214 	add.w	r2, r4, #20
 8004e02:	f109 0114 	add.w	r1, r9, #20
 8004e06:	eb02 038a 	add.w	r3, r2, sl, lsl #2
 8004e0a:	eb01 0787 	add.w	r7, r1, r7, lsl #2
 8004e0e:	9301      	str	r3, [sp, #4]
 8004e10:	9c01      	ldr	r4, [sp, #4]
 8004e12:	4613      	mov	r3, r2
 8004e14:	4294      	cmp	r4, r2
 8004e16:	d80c      	bhi.n	8004e32 <__multiply+0x78>
 8004e18:	2e00      	cmp	r6, #0
 8004e1a:	dd03      	ble.n	8004e24 <__multiply+0x6a>
 8004e1c:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8004e20:	2b00      	cmp	r3, #0
 8004e22:	d054      	beq.n	8004ece <__multiply+0x114>
 8004e24:	6106      	str	r6, [r0, #16]
 8004e26:	b003      	add	sp, #12
 8004e28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004e2c:	f843 2b04 	str.w	r2, [r3], #4
 8004e30:	e7e3      	b.n	8004dfa <__multiply+0x40>
 8004e32:	f8b3 a000 	ldrh.w	sl, [r3]
 8004e36:	3204      	adds	r2, #4
 8004e38:	f1ba 0f00 	cmp.w	sl, #0
 8004e3c:	d020      	beq.n	8004e80 <__multiply+0xc6>
 8004e3e:	46ae      	mov	lr, r5
 8004e40:	4689      	mov	r9, r1
 8004e42:	f04f 0c00 	mov.w	ip, #0
 8004e46:	f859 4b04 	ldr.w	r4, [r9], #4
 8004e4a:	f8be b000 	ldrh.w	fp, [lr]
 8004e4e:	b2a3      	uxth	r3, r4
 8004e50:	fb0a b303 	mla	r3, sl, r3, fp
 8004e54:	ea4f 4b14 	mov.w	fp, r4, lsr #16
 8004e58:	f8de 4000 	ldr.w	r4, [lr]
 8004e5c:	4463      	add	r3, ip
 8004e5e:	ea4f 4c14 	mov.w	ip, r4, lsr #16
 8004e62:	fb0a c40b 	mla	r4, sl, fp, ip
 8004e66:	eb04 4413 	add.w	r4, r4, r3, lsr #16
 8004e6a:	b29b      	uxth	r3, r3
 8004e6c:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8004e70:	454f      	cmp	r7, r9
 8004e72:	ea4f 4c14 	mov.w	ip, r4, lsr #16
 8004e76:	f84e 3b04 	str.w	r3, [lr], #4
 8004e7a:	d8e4      	bhi.n	8004e46 <__multiply+0x8c>
 8004e7c:	f8ce c000 	str.w	ip, [lr]
 8004e80:	f832 9c02 	ldrh.w	r9, [r2, #-2]
 8004e84:	f1b9 0f00 	cmp.w	r9, #0
 8004e88:	d01f      	beq.n	8004eca <__multiply+0x110>
 8004e8a:	46ae      	mov	lr, r5
 8004e8c:	468c      	mov	ip, r1
 8004e8e:	f04f 0a00 	mov.w	sl, #0
 8004e92:	682b      	ldr	r3, [r5, #0]
 8004e94:	f8bc 4000 	ldrh.w	r4, [ip]
 8004e98:	f8be b002 	ldrh.w	fp, [lr, #2]
 8004e9c:	b29b      	uxth	r3, r3
 8004e9e:	fb09 b404 	mla	r4, r9, r4, fp
 8004ea2:	44a2      	add	sl, r4
 8004ea4:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
 8004ea8:	f84e 3b04 	str.w	r3, [lr], #4
 8004eac:	f85c 3b04 	ldr.w	r3, [ip], #4
 8004eb0:	f8be 4000 	ldrh.w	r4, [lr]
 8004eb4:	0c1b      	lsrs	r3, r3, #16
 8004eb6:	fb09 4303 	mla	r3, r9, r3, r4
 8004eba:	4567      	cmp	r7, ip
 8004ebc:	eb03 431a 	add.w	r3, r3, sl, lsr #16
 8004ec0:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8004ec4:	d8e6      	bhi.n	8004e94 <__multiply+0xda>
 8004ec6:	f8ce 3000 	str.w	r3, [lr]
 8004eca:	3504      	adds	r5, #4
 8004ecc:	e7a0      	b.n	8004e10 <__multiply+0x56>
 8004ece:	3e01      	subs	r6, #1
 8004ed0:	e7a2      	b.n	8004e18 <__multiply+0x5e>
	...

08004ed4 <__pow5mult>:
 8004ed4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004ed8:	4615      	mov	r5, r2
 8004eda:	f012 0203 	ands.w	r2, r2, #3
 8004ede:	4606      	mov	r6, r0
 8004ee0:	460f      	mov	r7, r1
 8004ee2:	d007      	beq.n	8004ef4 <__pow5mult+0x20>
 8004ee4:	4c21      	ldr	r4, [pc, #132]	; (8004f6c <__pow5mult+0x98>)
 8004ee6:	3a01      	subs	r2, #1
 8004ee8:	2300      	movs	r3, #0
 8004eea:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8004eee:	f7ff fed2 	bl	8004c96 <__multadd>
 8004ef2:	4607      	mov	r7, r0
 8004ef4:	10ad      	asrs	r5, r5, #2
 8004ef6:	d035      	beq.n	8004f64 <__pow5mult+0x90>
 8004ef8:	6a74      	ldr	r4, [r6, #36]	; 0x24
 8004efa:	b93c      	cbnz	r4, 8004f0c <__pow5mult+0x38>
 8004efc:	2010      	movs	r0, #16
 8004efe:	f7ff fc45 	bl	800478c <malloc>
 8004f02:	6270      	str	r0, [r6, #36]	; 0x24
 8004f04:	6044      	str	r4, [r0, #4]
 8004f06:	6084      	str	r4, [r0, #8]
 8004f08:	6004      	str	r4, [r0, #0]
 8004f0a:	60c4      	str	r4, [r0, #12]
 8004f0c:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8004f10:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8004f14:	b94c      	cbnz	r4, 8004f2a <__pow5mult+0x56>
 8004f16:	f240 2171 	movw	r1, #625	; 0x271
 8004f1a:	4630      	mov	r0, r6
 8004f1c:	f7ff ff44 	bl	8004da8 <__i2b>
 8004f20:	2300      	movs	r3, #0
 8004f22:	4604      	mov	r4, r0
 8004f24:	f8c8 0008 	str.w	r0, [r8, #8]
 8004f28:	6003      	str	r3, [r0, #0]
 8004f2a:	f04f 0800 	mov.w	r8, #0
 8004f2e:	07eb      	lsls	r3, r5, #31
 8004f30:	d50a      	bpl.n	8004f48 <__pow5mult+0x74>
 8004f32:	4639      	mov	r1, r7
 8004f34:	4622      	mov	r2, r4
 8004f36:	4630      	mov	r0, r6
 8004f38:	f7ff ff3f 	bl	8004dba <__multiply>
 8004f3c:	4681      	mov	r9, r0
 8004f3e:	4639      	mov	r1, r7
 8004f40:	4630      	mov	r0, r6
 8004f42:	f7ff fe91 	bl	8004c68 <_Bfree>
 8004f46:	464f      	mov	r7, r9
 8004f48:	106d      	asrs	r5, r5, #1
 8004f4a:	d00b      	beq.n	8004f64 <__pow5mult+0x90>
 8004f4c:	6820      	ldr	r0, [r4, #0]
 8004f4e:	b938      	cbnz	r0, 8004f60 <__pow5mult+0x8c>
 8004f50:	4622      	mov	r2, r4
 8004f52:	4621      	mov	r1, r4
 8004f54:	4630      	mov	r0, r6
 8004f56:	f7ff ff30 	bl	8004dba <__multiply>
 8004f5a:	6020      	str	r0, [r4, #0]
 8004f5c:	f8c0 8000 	str.w	r8, [r0]
 8004f60:	4604      	mov	r4, r0
 8004f62:	e7e4      	b.n	8004f2e <__pow5mult+0x5a>
 8004f64:	4638      	mov	r0, r7
 8004f66:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004f6a:	bf00      	nop
 8004f6c:	08006668 	.word	0x08006668

08004f70 <__lshift>:
 8004f70:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004f74:	460c      	mov	r4, r1
 8004f76:	4607      	mov	r7, r0
 8004f78:	4616      	mov	r6, r2
 8004f7a:	6923      	ldr	r3, [r4, #16]
 8004f7c:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8004f80:	eb0a 0903 	add.w	r9, sl, r3
 8004f84:	6849      	ldr	r1, [r1, #4]
 8004f86:	68a3      	ldr	r3, [r4, #8]
 8004f88:	f109 0501 	add.w	r5, r9, #1
 8004f8c:	42ab      	cmp	r3, r5
 8004f8e:	db31      	blt.n	8004ff4 <__lshift+0x84>
 8004f90:	4638      	mov	r0, r7
 8004f92:	f7ff fe35 	bl	8004c00 <_Balloc>
 8004f96:	2200      	movs	r2, #0
 8004f98:	4680      	mov	r8, r0
 8004f9a:	4611      	mov	r1, r2
 8004f9c:	f100 0314 	add.w	r3, r0, #20
 8004fa0:	4552      	cmp	r2, sl
 8004fa2:	db2a      	blt.n	8004ffa <__lshift+0x8a>
 8004fa4:	6920      	ldr	r0, [r4, #16]
 8004fa6:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8004faa:	f104 0114 	add.w	r1, r4, #20
 8004fae:	f016 021f 	ands.w	r2, r6, #31
 8004fb2:	eb03 038a 	add.w	r3, r3, sl, lsl #2
 8004fb6:	eb01 0e80 	add.w	lr, r1, r0, lsl #2
 8004fba:	d022      	beq.n	8005002 <__lshift+0x92>
 8004fbc:	2000      	movs	r0, #0
 8004fbe:	f1c2 0c20 	rsb	ip, r2, #32
 8004fc2:	680e      	ldr	r6, [r1, #0]
 8004fc4:	4096      	lsls	r6, r2
 8004fc6:	4330      	orrs	r0, r6
 8004fc8:	f843 0b04 	str.w	r0, [r3], #4
 8004fcc:	f851 0b04 	ldr.w	r0, [r1], #4
 8004fd0:	458e      	cmp	lr, r1
 8004fd2:	fa20 f00c 	lsr.w	r0, r0, ip
 8004fd6:	d8f4      	bhi.n	8004fc2 <__lshift+0x52>
 8004fd8:	6018      	str	r0, [r3, #0]
 8004fda:	b108      	cbz	r0, 8004fe0 <__lshift+0x70>
 8004fdc:	f109 0502 	add.w	r5, r9, #2
 8004fe0:	3d01      	subs	r5, #1
 8004fe2:	4638      	mov	r0, r7
 8004fe4:	f8c8 5010 	str.w	r5, [r8, #16]
 8004fe8:	4621      	mov	r1, r4
 8004fea:	f7ff fe3d 	bl	8004c68 <_Bfree>
 8004fee:	4640      	mov	r0, r8
 8004ff0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004ff4:	3101      	adds	r1, #1
 8004ff6:	005b      	lsls	r3, r3, #1
 8004ff8:	e7c8      	b.n	8004f8c <__lshift+0x1c>
 8004ffa:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8004ffe:	3201      	adds	r2, #1
 8005000:	e7ce      	b.n	8004fa0 <__lshift+0x30>
 8005002:	3b04      	subs	r3, #4
 8005004:	f851 2b04 	ldr.w	r2, [r1], #4
 8005008:	458e      	cmp	lr, r1
 800500a:	f843 2f04 	str.w	r2, [r3, #4]!
 800500e:	d8f9      	bhi.n	8005004 <__lshift+0x94>
 8005010:	e7e6      	b.n	8004fe0 <__lshift+0x70>

08005012 <__mcmp>:
 8005012:	6903      	ldr	r3, [r0, #16]
 8005014:	690a      	ldr	r2, [r1, #16]
 8005016:	b530      	push	{r4, r5, lr}
 8005018:	1a9b      	subs	r3, r3, r2
 800501a:	d10c      	bne.n	8005036 <__mcmp+0x24>
 800501c:	0092      	lsls	r2, r2, #2
 800501e:	3014      	adds	r0, #20
 8005020:	3114      	adds	r1, #20
 8005022:	1884      	adds	r4, r0, r2
 8005024:	4411      	add	r1, r2
 8005026:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 800502a:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 800502e:	4295      	cmp	r5, r2
 8005030:	d003      	beq.n	800503a <__mcmp+0x28>
 8005032:	d305      	bcc.n	8005040 <__mcmp+0x2e>
 8005034:	2301      	movs	r3, #1
 8005036:	4618      	mov	r0, r3
 8005038:	bd30      	pop	{r4, r5, pc}
 800503a:	42a0      	cmp	r0, r4
 800503c:	d3f3      	bcc.n	8005026 <__mcmp+0x14>
 800503e:	e7fa      	b.n	8005036 <__mcmp+0x24>
 8005040:	f04f 33ff 	mov.w	r3, #4294967295
 8005044:	e7f7      	b.n	8005036 <__mcmp+0x24>

08005046 <__mdiff>:
 8005046:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800504a:	460d      	mov	r5, r1
 800504c:	4607      	mov	r7, r0
 800504e:	4611      	mov	r1, r2
 8005050:	4628      	mov	r0, r5
 8005052:	4614      	mov	r4, r2
 8005054:	f7ff ffdd 	bl	8005012 <__mcmp>
 8005058:	1e06      	subs	r6, r0, #0
 800505a:	d108      	bne.n	800506e <__mdiff+0x28>
 800505c:	4631      	mov	r1, r6
 800505e:	4638      	mov	r0, r7
 8005060:	f7ff fdce 	bl	8004c00 <_Balloc>
 8005064:	2301      	movs	r3, #1
 8005066:	6146      	str	r6, [r0, #20]
 8005068:	6103      	str	r3, [r0, #16]
 800506a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800506e:	bfa4      	itt	ge
 8005070:	4623      	movge	r3, r4
 8005072:	462c      	movge	r4, r5
 8005074:	4638      	mov	r0, r7
 8005076:	6861      	ldr	r1, [r4, #4]
 8005078:	bfa6      	itte	ge
 800507a:	461d      	movge	r5, r3
 800507c:	2600      	movge	r6, #0
 800507e:	2601      	movlt	r6, #1
 8005080:	f7ff fdbe 	bl	8004c00 <_Balloc>
 8005084:	f04f 0c00 	mov.w	ip, #0
 8005088:	60c6      	str	r6, [r0, #12]
 800508a:	692b      	ldr	r3, [r5, #16]
 800508c:	6926      	ldr	r6, [r4, #16]
 800508e:	f104 0214 	add.w	r2, r4, #20
 8005092:	f105 0914 	add.w	r9, r5, #20
 8005096:	eb02 0786 	add.w	r7, r2, r6, lsl #2
 800509a:	eb09 0883 	add.w	r8, r9, r3, lsl #2
 800509e:	f100 0114 	add.w	r1, r0, #20
 80050a2:	f852 ab04 	ldr.w	sl, [r2], #4
 80050a6:	f859 5b04 	ldr.w	r5, [r9], #4
 80050aa:	fa1f f38a 	uxth.w	r3, sl
 80050ae:	4463      	add	r3, ip
 80050b0:	b2ac      	uxth	r4, r5
 80050b2:	1b1b      	subs	r3, r3, r4
 80050b4:	0c2c      	lsrs	r4, r5, #16
 80050b6:	ebc4 441a 	rsb	r4, r4, sl, lsr #16
 80050ba:	eb04 4423 	add.w	r4, r4, r3, asr #16
 80050be:	b29b      	uxth	r3, r3
 80050c0:	ea4f 4c24 	mov.w	ip, r4, asr #16
 80050c4:	45c8      	cmp	r8, r9
 80050c6:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 80050ca:	4696      	mov	lr, r2
 80050cc:	f841 4b04 	str.w	r4, [r1], #4
 80050d0:	d8e7      	bhi.n	80050a2 <__mdiff+0x5c>
 80050d2:	45be      	cmp	lr, r7
 80050d4:	d305      	bcc.n	80050e2 <__mdiff+0x9c>
 80050d6:	f851 3d04 	ldr.w	r3, [r1, #-4]!
 80050da:	b18b      	cbz	r3, 8005100 <__mdiff+0xba>
 80050dc:	6106      	str	r6, [r0, #16]
 80050de:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80050e2:	f85e 4b04 	ldr.w	r4, [lr], #4
 80050e6:	b2a2      	uxth	r2, r4
 80050e8:	4462      	add	r2, ip
 80050ea:	1413      	asrs	r3, r2, #16
 80050ec:	eb03 4314 	add.w	r3, r3, r4, lsr #16
 80050f0:	b292      	uxth	r2, r2
 80050f2:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 80050f6:	ea4f 4c23 	mov.w	ip, r3, asr #16
 80050fa:	f841 2b04 	str.w	r2, [r1], #4
 80050fe:	e7e8      	b.n	80050d2 <__mdiff+0x8c>
 8005100:	3e01      	subs	r6, #1
 8005102:	e7e8      	b.n	80050d6 <__mdiff+0x90>

08005104 <__d2b>:
 8005104:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8005108:	461c      	mov	r4, r3
 800510a:	2101      	movs	r1, #1
 800510c:	4690      	mov	r8, r2
 800510e:	9e08      	ldr	r6, [sp, #32]
 8005110:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8005112:	f7ff fd75 	bl	8004c00 <_Balloc>
 8005116:	f3c4 0213 	ubfx	r2, r4, #0, #20
 800511a:	f3c4 540a 	ubfx	r4, r4, #20, #11
 800511e:	4607      	mov	r7, r0
 8005120:	bb34      	cbnz	r4, 8005170 <__d2b+0x6c>
 8005122:	9201      	str	r2, [sp, #4]
 8005124:	f1b8 0f00 	cmp.w	r8, #0
 8005128:	d027      	beq.n	800517a <__d2b+0x76>
 800512a:	a802      	add	r0, sp, #8
 800512c:	f840 8d08 	str.w	r8, [r0, #-8]!
 8005130:	f7ff fe0b 	bl	8004d4a <__lo0bits>
 8005134:	9900      	ldr	r1, [sp, #0]
 8005136:	b1f0      	cbz	r0, 8005176 <__d2b+0x72>
 8005138:	9a01      	ldr	r2, [sp, #4]
 800513a:	f1c0 0320 	rsb	r3, r0, #32
 800513e:	fa02 f303 	lsl.w	r3, r2, r3
 8005142:	430b      	orrs	r3, r1
 8005144:	40c2      	lsrs	r2, r0
 8005146:	617b      	str	r3, [r7, #20]
 8005148:	9201      	str	r2, [sp, #4]
 800514a:	9b01      	ldr	r3, [sp, #4]
 800514c:	2b00      	cmp	r3, #0
 800514e:	bf14      	ite	ne
 8005150:	2102      	movne	r1, #2
 8005152:	2101      	moveq	r1, #1
 8005154:	61bb      	str	r3, [r7, #24]
 8005156:	6139      	str	r1, [r7, #16]
 8005158:	b1c4      	cbz	r4, 800518c <__d2b+0x88>
 800515a:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
 800515e:	4404      	add	r4, r0
 8005160:	6034      	str	r4, [r6, #0]
 8005162:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8005166:	6028      	str	r0, [r5, #0]
 8005168:	4638      	mov	r0, r7
 800516a:	b002      	add	sp, #8
 800516c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005170:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8005174:	e7d5      	b.n	8005122 <__d2b+0x1e>
 8005176:	6179      	str	r1, [r7, #20]
 8005178:	e7e7      	b.n	800514a <__d2b+0x46>
 800517a:	a801      	add	r0, sp, #4
 800517c:	f7ff fde5 	bl	8004d4a <__lo0bits>
 8005180:	2101      	movs	r1, #1
 8005182:	9b01      	ldr	r3, [sp, #4]
 8005184:	6139      	str	r1, [r7, #16]
 8005186:	617b      	str	r3, [r7, #20]
 8005188:	3020      	adds	r0, #32
 800518a:	e7e5      	b.n	8005158 <__d2b+0x54>
 800518c:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8005190:	eb07 0381 	add.w	r3, r7, r1, lsl #2
 8005194:	6030      	str	r0, [r6, #0]
 8005196:	6918      	ldr	r0, [r3, #16]
 8005198:	f7ff fdb8 	bl	8004d0c <__hi0bits>
 800519c:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
 80051a0:	e7e1      	b.n	8005166 <__d2b+0x62>
	...

080051a4 <_sbrk_r>:
 80051a4:	b538      	push	{r3, r4, r5, lr}
 80051a6:	2300      	movs	r3, #0
 80051a8:	4c05      	ldr	r4, [pc, #20]	; (80051c0 <_sbrk_r+0x1c>)
 80051aa:	4605      	mov	r5, r0
 80051ac:	4608      	mov	r0, r1
 80051ae:	6023      	str	r3, [r4, #0]
 80051b0:	f001 f984 	bl	80064bc <_sbrk>
 80051b4:	1c43      	adds	r3, r0, #1
 80051b6:	d102      	bne.n	80051be <_sbrk_r+0x1a>
 80051b8:	6823      	ldr	r3, [r4, #0]
 80051ba:	b103      	cbz	r3, 80051be <_sbrk_r+0x1a>
 80051bc:	602b      	str	r3, [r5, #0]
 80051be:	bd38      	pop	{r3, r4, r5, pc}
 80051c0:	20000720 	.word	0x20000720

080051c4 <__ssprint_r>:
 80051c4:	6893      	ldr	r3, [r2, #8]
 80051c6:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80051ca:	4681      	mov	r9, r0
 80051cc:	460c      	mov	r4, r1
 80051ce:	4617      	mov	r7, r2
 80051d0:	2b00      	cmp	r3, #0
 80051d2:	d060      	beq.n	8005296 <__ssprint_r+0xd2>
 80051d4:	f04f 0b00 	mov.w	fp, #0
 80051d8:	465e      	mov	r6, fp
 80051da:	f8d2 a000 	ldr.w	sl, [r2]
 80051de:	b356      	cbz	r6, 8005236 <__ssprint_r+0x72>
 80051e0:	68a3      	ldr	r3, [r4, #8]
 80051e2:	429e      	cmp	r6, r3
 80051e4:	d344      	bcc.n	8005270 <__ssprint_r+0xac>
 80051e6:	89a2      	ldrh	r2, [r4, #12]
 80051e8:	f412 6f90 	tst.w	r2, #1152	; 0x480
 80051ec:	d03e      	beq.n	800526c <__ssprint_r+0xa8>
 80051ee:	2302      	movs	r3, #2
 80051f0:	6825      	ldr	r5, [r4, #0]
 80051f2:	6921      	ldr	r1, [r4, #16]
 80051f4:	eba5 0801 	sub.w	r8, r5, r1
 80051f8:	6965      	ldr	r5, [r4, #20]
 80051fa:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80051fe:	fb95 f5f3 	sdiv	r5, r5, r3
 8005202:	f108 0301 	add.w	r3, r8, #1
 8005206:	4433      	add	r3, r6
 8005208:	429d      	cmp	r5, r3
 800520a:	bf38      	it	cc
 800520c:	461d      	movcc	r5, r3
 800520e:	0553      	lsls	r3, r2, #21
 8005210:	d546      	bpl.n	80052a0 <__ssprint_r+0xdc>
 8005212:	4629      	mov	r1, r5
 8005214:	4648      	mov	r0, r9
 8005216:	f7ff fac1 	bl	800479c <_malloc_r>
 800521a:	b998      	cbnz	r0, 8005244 <__ssprint_r+0x80>
 800521c:	230c      	movs	r3, #12
 800521e:	f8c9 3000 	str.w	r3, [r9]
 8005222:	89a3      	ldrh	r3, [r4, #12]
 8005224:	f04f 30ff 	mov.w	r0, #4294967295
 8005228:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800522c:	81a3      	strh	r3, [r4, #12]
 800522e:	2300      	movs	r3, #0
 8005230:	60bb      	str	r3, [r7, #8]
 8005232:	607b      	str	r3, [r7, #4]
 8005234:	e031      	b.n	800529a <__ssprint_r+0xd6>
 8005236:	f8da b000 	ldr.w	fp, [sl]
 800523a:	f8da 6004 	ldr.w	r6, [sl, #4]
 800523e:	f10a 0a08 	add.w	sl, sl, #8
 8005242:	e7cc      	b.n	80051de <__ssprint_r+0x1a>
 8005244:	4642      	mov	r2, r8
 8005246:	6921      	ldr	r1, [r4, #16]
 8005248:	9001      	str	r0, [sp, #4]
 800524a:	f7ff fcc1 	bl	8004bd0 <memcpy>
 800524e:	89a2      	ldrh	r2, [r4, #12]
 8005250:	9b01      	ldr	r3, [sp, #4]
 8005252:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
 8005256:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800525a:	81a2      	strh	r2, [r4, #12]
 800525c:	6123      	str	r3, [r4, #16]
 800525e:	4443      	add	r3, r8
 8005260:	6023      	str	r3, [r4, #0]
 8005262:	4633      	mov	r3, r6
 8005264:	6165      	str	r5, [r4, #20]
 8005266:	eba5 0508 	sub.w	r5, r5, r8
 800526a:	60a5      	str	r5, [r4, #8]
 800526c:	429e      	cmp	r6, r3
 800526e:	d200      	bcs.n	8005272 <__ssprint_r+0xae>
 8005270:	4633      	mov	r3, r6
 8005272:	461a      	mov	r2, r3
 8005274:	4659      	mov	r1, fp
 8005276:	6820      	ldr	r0, [r4, #0]
 8005278:	9301      	str	r3, [sp, #4]
 800527a:	f000 f971 	bl	8005560 <memmove>
 800527e:	68a2      	ldr	r2, [r4, #8]
 8005280:	9b01      	ldr	r3, [sp, #4]
 8005282:	1ad2      	subs	r2, r2, r3
 8005284:	60a2      	str	r2, [r4, #8]
 8005286:	6822      	ldr	r2, [r4, #0]
 8005288:	4413      	add	r3, r2
 800528a:	6023      	str	r3, [r4, #0]
 800528c:	68bb      	ldr	r3, [r7, #8]
 800528e:	1b9e      	subs	r6, r3, r6
 8005290:	60be      	str	r6, [r7, #8]
 8005292:	2e00      	cmp	r6, #0
 8005294:	d1cf      	bne.n	8005236 <__ssprint_r+0x72>
 8005296:	2000      	movs	r0, #0
 8005298:	6078      	str	r0, [r7, #4]
 800529a:	b003      	add	sp, #12
 800529c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80052a0:	462a      	mov	r2, r5
 80052a2:	4648      	mov	r0, r9
 80052a4:	f000 f97e 	bl	80055a4 <_realloc_r>
 80052a8:	4603      	mov	r3, r0
 80052aa:	2800      	cmp	r0, #0
 80052ac:	d1d6      	bne.n	800525c <__ssprint_r+0x98>
 80052ae:	6921      	ldr	r1, [r4, #16]
 80052b0:	4648      	mov	r0, r9
 80052b2:	f000 f885 	bl	80053c0 <_free_r>
 80052b6:	e7b1      	b.n	800521c <__ssprint_r+0x58>

080052b8 <_calloc_r>:
 80052b8:	b510      	push	{r4, lr}
 80052ba:	4351      	muls	r1, r2
 80052bc:	f7ff fa6e 	bl	800479c <_malloc_r>
 80052c0:	4604      	mov	r4, r0
 80052c2:	b198      	cbz	r0, 80052ec <_calloc_r+0x34>
 80052c4:	f850 2c04 	ldr.w	r2, [r0, #-4]
 80052c8:	f022 0203 	bic.w	r2, r2, #3
 80052cc:	3a04      	subs	r2, #4
 80052ce:	2a24      	cmp	r2, #36	; 0x24
 80052d0:	d81b      	bhi.n	800530a <_calloc_r+0x52>
 80052d2:	2a13      	cmp	r2, #19
 80052d4:	d917      	bls.n	8005306 <_calloc_r+0x4e>
 80052d6:	2100      	movs	r1, #0
 80052d8:	2a1b      	cmp	r2, #27
 80052da:	6001      	str	r1, [r0, #0]
 80052dc:	6041      	str	r1, [r0, #4]
 80052de:	d807      	bhi.n	80052f0 <_calloc_r+0x38>
 80052e0:	f100 0308 	add.w	r3, r0, #8
 80052e4:	2200      	movs	r2, #0
 80052e6:	601a      	str	r2, [r3, #0]
 80052e8:	605a      	str	r2, [r3, #4]
 80052ea:	609a      	str	r2, [r3, #8]
 80052ec:	4620      	mov	r0, r4
 80052ee:	bd10      	pop	{r4, pc}
 80052f0:	2a24      	cmp	r2, #36	; 0x24
 80052f2:	6081      	str	r1, [r0, #8]
 80052f4:	60c1      	str	r1, [r0, #12]
 80052f6:	bf11      	iteee	ne
 80052f8:	f100 0310 	addne.w	r3, r0, #16
 80052fc:	6101      	streq	r1, [r0, #16]
 80052fe:	f100 0318 	addeq.w	r3, r0, #24
 8005302:	6141      	streq	r1, [r0, #20]
 8005304:	e7ee      	b.n	80052e4 <_calloc_r+0x2c>
 8005306:	4603      	mov	r3, r0
 8005308:	e7ec      	b.n	80052e4 <_calloc_r+0x2c>
 800530a:	2100      	movs	r1, #0
 800530c:	f000 f942 	bl	8005594 <memset>
 8005310:	e7ec      	b.n	80052ec <_calloc_r+0x34>
	...

08005314 <_malloc_trim_r>:
 8005314:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005318:	4689      	mov	r9, r1
 800531a:	4f25      	ldr	r7, [pc, #148]	; (80053b0 <_malloc_trim_r+0x9c>)
 800531c:	4606      	mov	r6, r0
 800531e:	f7ff fc63 	bl	8004be8 <__malloc_lock>
 8005322:	68bb      	ldr	r3, [r7, #8]
 8005324:	f8df 8094 	ldr.w	r8, [pc, #148]	; 80053bc <_malloc_trim_r+0xa8>
 8005328:	685d      	ldr	r5, [r3, #4]
 800532a:	f1a8 0411 	sub.w	r4, r8, #17
 800532e:	f025 0503 	bic.w	r5, r5, #3
 8005332:	eba4 0409 	sub.w	r4, r4, r9
 8005336:	442c      	add	r4, r5
 8005338:	fbb4 f4f8 	udiv	r4, r4, r8
 800533c:	3c01      	subs	r4, #1
 800533e:	fb08 f404 	mul.w	r4, r8, r4
 8005342:	4544      	cmp	r4, r8
 8005344:	da05      	bge.n	8005352 <_malloc_trim_r+0x3e>
 8005346:	4630      	mov	r0, r6
 8005348:	f7ff fc54 	bl	8004bf4 <__malloc_unlock>
 800534c:	2000      	movs	r0, #0
 800534e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005352:	2100      	movs	r1, #0
 8005354:	4630      	mov	r0, r6
 8005356:	f7ff ff25 	bl	80051a4 <_sbrk_r>
 800535a:	68bb      	ldr	r3, [r7, #8]
 800535c:	442b      	add	r3, r5
 800535e:	4298      	cmp	r0, r3
 8005360:	d1f1      	bne.n	8005346 <_malloc_trim_r+0x32>
 8005362:	4261      	negs	r1, r4
 8005364:	4630      	mov	r0, r6
 8005366:	f7ff ff1d 	bl	80051a4 <_sbrk_r>
 800536a:	3001      	adds	r0, #1
 800536c:	d110      	bne.n	8005390 <_malloc_trim_r+0x7c>
 800536e:	2100      	movs	r1, #0
 8005370:	4630      	mov	r0, r6
 8005372:	f7ff ff17 	bl	80051a4 <_sbrk_r>
 8005376:	68ba      	ldr	r2, [r7, #8]
 8005378:	1a83      	subs	r3, r0, r2
 800537a:	2b0f      	cmp	r3, #15
 800537c:	dde3      	ble.n	8005346 <_malloc_trim_r+0x32>
 800537e:	490d      	ldr	r1, [pc, #52]	; (80053b4 <_malloc_trim_r+0xa0>)
 8005380:	f043 0301 	orr.w	r3, r3, #1
 8005384:	6809      	ldr	r1, [r1, #0]
 8005386:	6053      	str	r3, [r2, #4]
 8005388:	1a40      	subs	r0, r0, r1
 800538a:	490b      	ldr	r1, [pc, #44]	; (80053b8 <_malloc_trim_r+0xa4>)
 800538c:	6008      	str	r0, [r1, #0]
 800538e:	e7da      	b.n	8005346 <_malloc_trim_r+0x32>
 8005390:	68bb      	ldr	r3, [r7, #8]
 8005392:	4a09      	ldr	r2, [pc, #36]	; (80053b8 <_malloc_trim_r+0xa4>)
 8005394:	1b2d      	subs	r5, r5, r4
 8005396:	f045 0501 	orr.w	r5, r5, #1
 800539a:	605d      	str	r5, [r3, #4]
 800539c:	6813      	ldr	r3, [r2, #0]
 800539e:	4630      	mov	r0, r6
 80053a0:	1b1c      	subs	r4, r3, r4
 80053a2:	6014      	str	r4, [r2, #0]
 80053a4:	f7ff fc26 	bl	8004bf4 <__malloc_unlock>
 80053a8:	2001      	movs	r0, #1
 80053aa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80053ae:	bf00      	nop
 80053b0:	20000108 	.word	0x20000108
 80053b4:	20000510 	.word	0x20000510
 80053b8:	200006ac 	.word	0x200006ac
 80053bc:	00000080 	.word	0x00000080

080053c0 <_free_r>:
 80053c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80053c4:	4604      	mov	r4, r0
 80053c6:	4688      	mov	r8, r1
 80053c8:	2900      	cmp	r1, #0
 80053ca:	f000 80ab 	beq.w	8005524 <_free_r+0x164>
 80053ce:	f7ff fc0b 	bl	8004be8 <__malloc_lock>
 80053d2:	f858 2c04 	ldr.w	r2, [r8, #-4]
 80053d6:	4d54      	ldr	r5, [pc, #336]	; (8005528 <_free_r+0x168>)
 80053d8:	f022 0001 	bic.w	r0, r2, #1
 80053dc:	f1a8 0308 	sub.w	r3, r8, #8
 80053e0:	181f      	adds	r7, r3, r0
 80053e2:	68a9      	ldr	r1, [r5, #8]
 80053e4:	687e      	ldr	r6, [r7, #4]
 80053e6:	428f      	cmp	r7, r1
 80053e8:	f026 0603 	bic.w	r6, r6, #3
 80053ec:	f002 0201 	and.w	r2, r2, #1
 80053f0:	d11b      	bne.n	800542a <_free_r+0x6a>
 80053f2:	4430      	add	r0, r6
 80053f4:	b93a      	cbnz	r2, 8005406 <_free_r+0x46>
 80053f6:	f858 2c08 	ldr.w	r2, [r8, #-8]
 80053fa:	1a9b      	subs	r3, r3, r2
 80053fc:	6899      	ldr	r1, [r3, #8]
 80053fe:	4410      	add	r0, r2
 8005400:	68da      	ldr	r2, [r3, #12]
 8005402:	60ca      	str	r2, [r1, #12]
 8005404:	6091      	str	r1, [r2, #8]
 8005406:	f040 0201 	orr.w	r2, r0, #1
 800540a:	605a      	str	r2, [r3, #4]
 800540c:	60ab      	str	r3, [r5, #8]
 800540e:	4b47      	ldr	r3, [pc, #284]	; (800552c <_free_r+0x16c>)
 8005410:	681b      	ldr	r3, [r3, #0]
 8005412:	4298      	cmp	r0, r3
 8005414:	d304      	bcc.n	8005420 <_free_r+0x60>
 8005416:	4b46      	ldr	r3, [pc, #280]	; (8005530 <_free_r+0x170>)
 8005418:	4620      	mov	r0, r4
 800541a:	6819      	ldr	r1, [r3, #0]
 800541c:	f7ff ff7a 	bl	8005314 <_malloc_trim_r>
 8005420:	4620      	mov	r0, r4
 8005422:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005426:	f7ff bbe5 	b.w	8004bf4 <__malloc_unlock>
 800542a:	607e      	str	r6, [r7, #4]
 800542c:	2a00      	cmp	r2, #0
 800542e:	d139      	bne.n	80054a4 <_free_r+0xe4>
 8005430:	f858 1c08 	ldr.w	r1, [r8, #-8]
 8005434:	f105 0e08 	add.w	lr, r5, #8
 8005438:	1a5b      	subs	r3, r3, r1
 800543a:	4408      	add	r0, r1
 800543c:	6899      	ldr	r1, [r3, #8]
 800543e:	4571      	cmp	r1, lr
 8005440:	d032      	beq.n	80054a8 <_free_r+0xe8>
 8005442:	f8d3 e00c 	ldr.w	lr, [r3, #12]
 8005446:	f8c1 e00c 	str.w	lr, [r1, #12]
 800544a:	f8ce 1008 	str.w	r1, [lr, #8]
 800544e:	19b9      	adds	r1, r7, r6
 8005450:	6849      	ldr	r1, [r1, #4]
 8005452:	07c9      	lsls	r1, r1, #31
 8005454:	d40a      	bmi.n	800546c <_free_r+0xac>
 8005456:	4430      	add	r0, r6
 8005458:	68b9      	ldr	r1, [r7, #8]
 800545a:	bb3a      	cbnz	r2, 80054ac <_free_r+0xec>
 800545c:	4e35      	ldr	r6, [pc, #212]	; (8005534 <_free_r+0x174>)
 800545e:	42b1      	cmp	r1, r6
 8005460:	d124      	bne.n	80054ac <_free_r+0xec>
 8005462:	2201      	movs	r2, #1
 8005464:	616b      	str	r3, [r5, #20]
 8005466:	612b      	str	r3, [r5, #16]
 8005468:	60d9      	str	r1, [r3, #12]
 800546a:	6099      	str	r1, [r3, #8]
 800546c:	f040 0101 	orr.w	r1, r0, #1
 8005470:	6059      	str	r1, [r3, #4]
 8005472:	5018      	str	r0, [r3, r0]
 8005474:	2a00      	cmp	r2, #0
 8005476:	d1d3      	bne.n	8005420 <_free_r+0x60>
 8005478:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 800547c:	d21a      	bcs.n	80054b4 <_free_r+0xf4>
 800547e:	2201      	movs	r2, #1
 8005480:	08c0      	lsrs	r0, r0, #3
 8005482:	1081      	asrs	r1, r0, #2
 8005484:	408a      	lsls	r2, r1
 8005486:	6869      	ldr	r1, [r5, #4]
 8005488:	3001      	adds	r0, #1
 800548a:	430a      	orrs	r2, r1
 800548c:	606a      	str	r2, [r5, #4]
 800548e:	f855 1030 	ldr.w	r1, [r5, r0, lsl #3]
 8005492:	eb05 02c0 	add.w	r2, r5, r0, lsl #3
 8005496:	3a08      	subs	r2, #8
 8005498:	60da      	str	r2, [r3, #12]
 800549a:	6099      	str	r1, [r3, #8]
 800549c:	f845 3030 	str.w	r3, [r5, r0, lsl #3]
 80054a0:	60cb      	str	r3, [r1, #12]
 80054a2:	e7bd      	b.n	8005420 <_free_r+0x60>
 80054a4:	2200      	movs	r2, #0
 80054a6:	e7d2      	b.n	800544e <_free_r+0x8e>
 80054a8:	2201      	movs	r2, #1
 80054aa:	e7d0      	b.n	800544e <_free_r+0x8e>
 80054ac:	68fe      	ldr	r6, [r7, #12]
 80054ae:	60ce      	str	r6, [r1, #12]
 80054b0:	60b1      	str	r1, [r6, #8]
 80054b2:	e7db      	b.n	800546c <_free_r+0xac>
 80054b4:	0a42      	lsrs	r2, r0, #9
 80054b6:	2a04      	cmp	r2, #4
 80054b8:	d813      	bhi.n	80054e2 <_free_r+0x122>
 80054ba:	0982      	lsrs	r2, r0, #6
 80054bc:	3238      	adds	r2, #56	; 0x38
 80054be:	1c51      	adds	r1, r2, #1
 80054c0:	f855 1031 	ldr.w	r1, [r5, r1, lsl #3]
 80054c4:	eb05 06c2 	add.w	r6, r5, r2, lsl #3
 80054c8:	428e      	cmp	r6, r1
 80054ca:	d124      	bne.n	8005516 <_free_r+0x156>
 80054cc:	2001      	movs	r0, #1
 80054ce:	1092      	asrs	r2, r2, #2
 80054d0:	fa00 f202 	lsl.w	r2, r0, r2
 80054d4:	6868      	ldr	r0, [r5, #4]
 80054d6:	4302      	orrs	r2, r0
 80054d8:	606a      	str	r2, [r5, #4]
 80054da:	60de      	str	r6, [r3, #12]
 80054dc:	6099      	str	r1, [r3, #8]
 80054de:	60b3      	str	r3, [r6, #8]
 80054e0:	e7de      	b.n	80054a0 <_free_r+0xe0>
 80054e2:	2a14      	cmp	r2, #20
 80054e4:	d801      	bhi.n	80054ea <_free_r+0x12a>
 80054e6:	325b      	adds	r2, #91	; 0x5b
 80054e8:	e7e9      	b.n	80054be <_free_r+0xfe>
 80054ea:	2a54      	cmp	r2, #84	; 0x54
 80054ec:	d802      	bhi.n	80054f4 <_free_r+0x134>
 80054ee:	0b02      	lsrs	r2, r0, #12
 80054f0:	326e      	adds	r2, #110	; 0x6e
 80054f2:	e7e4      	b.n	80054be <_free_r+0xfe>
 80054f4:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
 80054f8:	d802      	bhi.n	8005500 <_free_r+0x140>
 80054fa:	0bc2      	lsrs	r2, r0, #15
 80054fc:	3277      	adds	r2, #119	; 0x77
 80054fe:	e7de      	b.n	80054be <_free_r+0xfe>
 8005500:	f240 5154 	movw	r1, #1364	; 0x554
 8005504:	428a      	cmp	r2, r1
 8005506:	bf9a      	itte	ls
 8005508:	0c82      	lsrls	r2, r0, #18
 800550a:	327c      	addls	r2, #124	; 0x7c
 800550c:	227e      	movhi	r2, #126	; 0x7e
 800550e:	e7d6      	b.n	80054be <_free_r+0xfe>
 8005510:	6889      	ldr	r1, [r1, #8]
 8005512:	428e      	cmp	r6, r1
 8005514:	d004      	beq.n	8005520 <_free_r+0x160>
 8005516:	684a      	ldr	r2, [r1, #4]
 8005518:	f022 0203 	bic.w	r2, r2, #3
 800551c:	4290      	cmp	r0, r2
 800551e:	d3f7      	bcc.n	8005510 <_free_r+0x150>
 8005520:	68ce      	ldr	r6, [r1, #12]
 8005522:	e7da      	b.n	80054da <_free_r+0x11a>
 8005524:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005528:	20000108 	.word	0x20000108
 800552c:	20000514 	.word	0x20000514
 8005530:	200006dc 	.word	0x200006dc
 8005534:	20000110 	.word	0x20000110

08005538 <__retarget_lock_acquire_recursive>:
 8005538:	4770      	bx	lr

0800553a <__retarget_lock_release_recursive>:
 800553a:	4770      	bx	lr

0800553c <__ascii_mbtowc>:
 800553c:	b082      	sub	sp, #8
 800553e:	b901      	cbnz	r1, 8005542 <__ascii_mbtowc+0x6>
 8005540:	a901      	add	r1, sp, #4
 8005542:	b142      	cbz	r2, 8005556 <__ascii_mbtowc+0x1a>
 8005544:	b14b      	cbz	r3, 800555a <__ascii_mbtowc+0x1e>
 8005546:	7813      	ldrb	r3, [r2, #0]
 8005548:	600b      	str	r3, [r1, #0]
 800554a:	7812      	ldrb	r2, [r2, #0]
 800554c:	1c10      	adds	r0, r2, #0
 800554e:	bf18      	it	ne
 8005550:	2001      	movne	r0, #1
 8005552:	b002      	add	sp, #8
 8005554:	4770      	bx	lr
 8005556:	4610      	mov	r0, r2
 8005558:	e7fb      	b.n	8005552 <__ascii_mbtowc+0x16>
 800555a:	f06f 0001 	mvn.w	r0, #1
 800555e:	e7f8      	b.n	8005552 <__ascii_mbtowc+0x16>

08005560 <memmove>:
 8005560:	4288      	cmp	r0, r1
 8005562:	b510      	push	{r4, lr}
 8005564:	eb01 0302 	add.w	r3, r1, r2
 8005568:	d803      	bhi.n	8005572 <memmove+0x12>
 800556a:	1e42      	subs	r2, r0, #1
 800556c:	4299      	cmp	r1, r3
 800556e:	d10c      	bne.n	800558a <memmove+0x2a>
 8005570:	bd10      	pop	{r4, pc}
 8005572:	4298      	cmp	r0, r3
 8005574:	d2f9      	bcs.n	800556a <memmove+0xa>
 8005576:	1881      	adds	r1, r0, r2
 8005578:	1ad2      	subs	r2, r2, r3
 800557a:	42d3      	cmn	r3, r2
 800557c:	d100      	bne.n	8005580 <memmove+0x20>
 800557e:	bd10      	pop	{r4, pc}
 8005580:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8005584:	f801 4d01 	strb.w	r4, [r1, #-1]!
 8005588:	e7f7      	b.n	800557a <memmove+0x1a>
 800558a:	f811 4b01 	ldrb.w	r4, [r1], #1
 800558e:	f802 4f01 	strb.w	r4, [r2, #1]!
 8005592:	e7eb      	b.n	800556c <memmove+0xc>

08005594 <memset>:
 8005594:	4603      	mov	r3, r0
 8005596:	4402      	add	r2, r0
 8005598:	4293      	cmp	r3, r2
 800559a:	d100      	bne.n	800559e <memset+0xa>
 800559c:	4770      	bx	lr
 800559e:	f803 1b01 	strb.w	r1, [r3], #1
 80055a2:	e7f9      	b.n	8005598 <memset+0x4>

080055a4 <_realloc_r>:
 80055a4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80055a8:	4682      	mov	sl, r0
 80055aa:	460c      	mov	r4, r1
 80055ac:	b929      	cbnz	r1, 80055ba <_realloc_r+0x16>
 80055ae:	4611      	mov	r1, r2
 80055b0:	b003      	add	sp, #12
 80055b2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80055b6:	f7ff b8f1 	b.w	800479c <_malloc_r>
 80055ba:	9201      	str	r2, [sp, #4]
 80055bc:	f7ff fb14 	bl	8004be8 <__malloc_lock>
 80055c0:	9a01      	ldr	r2, [sp, #4]
 80055c2:	f854 5c04 	ldr.w	r5, [r4, #-4]
 80055c6:	f102 080b 	add.w	r8, r2, #11
 80055ca:	f1b8 0f16 	cmp.w	r8, #22
 80055ce:	f1a4 0908 	sub.w	r9, r4, #8
 80055d2:	f025 0603 	bic.w	r6, r5, #3
 80055d6:	d90a      	bls.n	80055ee <_realloc_r+0x4a>
 80055d8:	f038 0807 	bics.w	r8, r8, #7
 80055dc:	d509      	bpl.n	80055f2 <_realloc_r+0x4e>
 80055de:	230c      	movs	r3, #12
 80055e0:	2700      	movs	r7, #0
 80055e2:	f8ca 3000 	str.w	r3, [sl]
 80055e6:	4638      	mov	r0, r7
 80055e8:	b003      	add	sp, #12
 80055ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80055ee:	f04f 0810 	mov.w	r8, #16
 80055f2:	4590      	cmp	r8, r2
 80055f4:	d3f3      	bcc.n	80055de <_realloc_r+0x3a>
 80055f6:	45b0      	cmp	r8, r6
 80055f8:	f340 8148 	ble.w	800588c <_realloc_r+0x2e8>
 80055fc:	4ba9      	ldr	r3, [pc, #676]	; (80058a4 <_realloc_r+0x300>)
 80055fe:	eb09 0106 	add.w	r1, r9, r6
 8005602:	f8d3 e008 	ldr.w	lr, [r3, #8]
 8005606:	469b      	mov	fp, r3
 8005608:	4571      	cmp	r1, lr
 800560a:	684b      	ldr	r3, [r1, #4]
 800560c:	d005      	beq.n	800561a <_realloc_r+0x76>
 800560e:	f023 0001 	bic.w	r0, r3, #1
 8005612:	4408      	add	r0, r1
 8005614:	6840      	ldr	r0, [r0, #4]
 8005616:	07c7      	lsls	r7, r0, #31
 8005618:	d447      	bmi.n	80056aa <_realloc_r+0x106>
 800561a:	f023 0303 	bic.w	r3, r3, #3
 800561e:	4571      	cmp	r1, lr
 8005620:	eb06 0703 	add.w	r7, r6, r3
 8005624:	d119      	bne.n	800565a <_realloc_r+0xb6>
 8005626:	f108 0010 	add.w	r0, r8, #16
 800562a:	4287      	cmp	r7, r0
 800562c:	db3f      	blt.n	80056ae <_realloc_r+0x10a>
 800562e:	eba7 0708 	sub.w	r7, r7, r8
 8005632:	eb09 0308 	add.w	r3, r9, r8
 8005636:	f047 0701 	orr.w	r7, r7, #1
 800563a:	f8cb 3008 	str.w	r3, [fp, #8]
 800563e:	605f      	str	r7, [r3, #4]
 8005640:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8005644:	4650      	mov	r0, sl
 8005646:	f003 0301 	and.w	r3, r3, #1
 800564a:	ea43 0308 	orr.w	r3, r3, r8
 800564e:	f844 3c04 	str.w	r3, [r4, #-4]
 8005652:	f7ff facf 	bl	8004bf4 <__malloc_unlock>
 8005656:	4627      	mov	r7, r4
 8005658:	e7c5      	b.n	80055e6 <_realloc_r+0x42>
 800565a:	45b8      	cmp	r8, r7
 800565c:	dc27      	bgt.n	80056ae <_realloc_r+0x10a>
 800565e:	68cb      	ldr	r3, [r1, #12]
 8005660:	688a      	ldr	r2, [r1, #8]
 8005662:	60d3      	str	r3, [r2, #12]
 8005664:	609a      	str	r2, [r3, #8]
 8005666:	eba7 0008 	sub.w	r0, r7, r8
 800566a:	280f      	cmp	r0, #15
 800566c:	f8d9 3004 	ldr.w	r3, [r9, #4]
 8005670:	eb09 0207 	add.w	r2, r9, r7
 8005674:	f240 810c 	bls.w	8005890 <_realloc_r+0x2ec>
 8005678:	f003 0301 	and.w	r3, r3, #1
 800567c:	eb09 0108 	add.w	r1, r9, r8
 8005680:	ea43 0308 	orr.w	r3, r3, r8
 8005684:	f040 0001 	orr.w	r0, r0, #1
 8005688:	f8c9 3004 	str.w	r3, [r9, #4]
 800568c:	6048      	str	r0, [r1, #4]
 800568e:	6853      	ldr	r3, [r2, #4]
 8005690:	3108      	adds	r1, #8
 8005692:	f043 0301 	orr.w	r3, r3, #1
 8005696:	6053      	str	r3, [r2, #4]
 8005698:	4650      	mov	r0, sl
 800569a:	f7ff fe91 	bl	80053c0 <_free_r>
 800569e:	4650      	mov	r0, sl
 80056a0:	f7ff faa8 	bl	8004bf4 <__malloc_unlock>
 80056a4:	f109 0708 	add.w	r7, r9, #8
 80056a8:	e79d      	b.n	80055e6 <_realloc_r+0x42>
 80056aa:	2300      	movs	r3, #0
 80056ac:	4619      	mov	r1, r3
 80056ae:	07e8      	lsls	r0, r5, #31
 80056b0:	f100 8085 	bmi.w	80057be <_realloc_r+0x21a>
 80056b4:	f854 5c08 	ldr.w	r5, [r4, #-8]
 80056b8:	eba9 0505 	sub.w	r5, r9, r5
 80056bc:	6868      	ldr	r0, [r5, #4]
 80056be:	f020 0003 	bic.w	r0, r0, #3
 80056c2:	4430      	add	r0, r6
 80056c4:	2900      	cmp	r1, #0
 80056c6:	d077      	beq.n	80057b8 <_realloc_r+0x214>
 80056c8:	4571      	cmp	r1, lr
 80056ca:	d151      	bne.n	8005770 <_realloc_r+0x1cc>
 80056cc:	4403      	add	r3, r0
 80056ce:	f108 0110 	add.w	r1, r8, #16
 80056d2:	428b      	cmp	r3, r1
 80056d4:	db70      	blt.n	80057b8 <_realloc_r+0x214>
 80056d6:	462f      	mov	r7, r5
 80056d8:	68ea      	ldr	r2, [r5, #12]
 80056da:	f857 1f08 	ldr.w	r1, [r7, #8]!
 80056de:	60ca      	str	r2, [r1, #12]
 80056e0:	6091      	str	r1, [r2, #8]
 80056e2:	1f32      	subs	r2, r6, #4
 80056e4:	2a24      	cmp	r2, #36	; 0x24
 80056e6:	d83c      	bhi.n	8005762 <_realloc_r+0x1be>
 80056e8:	2a13      	cmp	r2, #19
 80056ea:	d937      	bls.n	800575c <_realloc_r+0x1b8>
 80056ec:	6821      	ldr	r1, [r4, #0]
 80056ee:	2a1b      	cmp	r2, #27
 80056f0:	60a9      	str	r1, [r5, #8]
 80056f2:	6861      	ldr	r1, [r4, #4]
 80056f4:	60e9      	str	r1, [r5, #12]
 80056f6:	d81c      	bhi.n	8005732 <_realloc_r+0x18e>
 80056f8:	f105 0210 	add.w	r2, r5, #16
 80056fc:	f104 0108 	add.w	r1, r4, #8
 8005700:	6808      	ldr	r0, [r1, #0]
 8005702:	6010      	str	r0, [r2, #0]
 8005704:	6848      	ldr	r0, [r1, #4]
 8005706:	6050      	str	r0, [r2, #4]
 8005708:	6889      	ldr	r1, [r1, #8]
 800570a:	6091      	str	r1, [r2, #8]
 800570c:	eba3 0308 	sub.w	r3, r3, r8
 8005710:	eb05 0208 	add.w	r2, r5, r8
 8005714:	f043 0301 	orr.w	r3, r3, #1
 8005718:	f8cb 2008 	str.w	r2, [fp, #8]
 800571c:	6053      	str	r3, [r2, #4]
 800571e:	686b      	ldr	r3, [r5, #4]
 8005720:	f003 0301 	and.w	r3, r3, #1
 8005724:	ea43 0308 	orr.w	r3, r3, r8
 8005728:	606b      	str	r3, [r5, #4]
 800572a:	4650      	mov	r0, sl
 800572c:	f7ff fa62 	bl	8004bf4 <__malloc_unlock>
 8005730:	e759      	b.n	80055e6 <_realloc_r+0x42>
 8005732:	68a1      	ldr	r1, [r4, #8]
 8005734:	2a24      	cmp	r2, #36	; 0x24
 8005736:	6129      	str	r1, [r5, #16]
 8005738:	68e1      	ldr	r1, [r4, #12]
 800573a:	bf18      	it	ne
 800573c:	f105 0218 	addne.w	r2, r5, #24
 8005740:	6169      	str	r1, [r5, #20]
 8005742:	bf09      	itett	eq
 8005744:	6922      	ldreq	r2, [r4, #16]
 8005746:	f104 0110 	addne.w	r1, r4, #16
 800574a:	61aa      	streq	r2, [r5, #24]
 800574c:	6960      	ldreq	r0, [r4, #20]
 800574e:	bf02      	ittt	eq
 8005750:	f105 0220 	addeq.w	r2, r5, #32
 8005754:	f104 0118 	addeq.w	r1, r4, #24
 8005758:	61e8      	streq	r0, [r5, #28]
 800575a:	e7d1      	b.n	8005700 <_realloc_r+0x15c>
 800575c:	463a      	mov	r2, r7
 800575e:	4621      	mov	r1, r4
 8005760:	e7ce      	b.n	8005700 <_realloc_r+0x15c>
 8005762:	4621      	mov	r1, r4
 8005764:	4638      	mov	r0, r7
 8005766:	9301      	str	r3, [sp, #4]
 8005768:	f7ff fefa 	bl	8005560 <memmove>
 800576c:	9b01      	ldr	r3, [sp, #4]
 800576e:	e7cd      	b.n	800570c <_realloc_r+0x168>
 8005770:	18c7      	adds	r7, r0, r3
 8005772:	45b8      	cmp	r8, r7
 8005774:	dc20      	bgt.n	80057b8 <_realloc_r+0x214>
 8005776:	68cb      	ldr	r3, [r1, #12]
 8005778:	688a      	ldr	r2, [r1, #8]
 800577a:	60d3      	str	r3, [r2, #12]
 800577c:	609a      	str	r2, [r3, #8]
 800577e:	4628      	mov	r0, r5
 8005780:	68eb      	ldr	r3, [r5, #12]
 8005782:	f850 2f08 	ldr.w	r2, [r0, #8]!
 8005786:	60d3      	str	r3, [r2, #12]
 8005788:	609a      	str	r2, [r3, #8]
 800578a:	1f32      	subs	r2, r6, #4
 800578c:	2a24      	cmp	r2, #36	; 0x24
 800578e:	d843      	bhi.n	8005818 <_realloc_r+0x274>
 8005790:	2a13      	cmp	r2, #19
 8005792:	d93f      	bls.n	8005814 <_realloc_r+0x270>
 8005794:	6823      	ldr	r3, [r4, #0]
 8005796:	2a1b      	cmp	r2, #27
 8005798:	60ab      	str	r3, [r5, #8]
 800579a:	6863      	ldr	r3, [r4, #4]
 800579c:	60eb      	str	r3, [r5, #12]
 800579e:	d824      	bhi.n	80057ea <_realloc_r+0x246>
 80057a0:	f105 0010 	add.w	r0, r5, #16
 80057a4:	f104 0308 	add.w	r3, r4, #8
 80057a8:	681a      	ldr	r2, [r3, #0]
 80057aa:	6002      	str	r2, [r0, #0]
 80057ac:	685a      	ldr	r2, [r3, #4]
 80057ae:	6042      	str	r2, [r0, #4]
 80057b0:	689b      	ldr	r3, [r3, #8]
 80057b2:	6083      	str	r3, [r0, #8]
 80057b4:	46a9      	mov	r9, r5
 80057b6:	e756      	b.n	8005666 <_realloc_r+0xc2>
 80057b8:	4580      	cmp	r8, r0
 80057ba:	4607      	mov	r7, r0
 80057bc:	dddf      	ble.n	800577e <_realloc_r+0x1da>
 80057be:	4611      	mov	r1, r2
 80057c0:	4650      	mov	r0, sl
 80057c2:	f7fe ffeb 	bl	800479c <_malloc_r>
 80057c6:	4607      	mov	r7, r0
 80057c8:	2800      	cmp	r0, #0
 80057ca:	d0ae      	beq.n	800572a <_realloc_r+0x186>
 80057cc:	f854 3c04 	ldr.w	r3, [r4, #-4]
 80057d0:	f1a0 0208 	sub.w	r2, r0, #8
 80057d4:	f023 0301 	bic.w	r3, r3, #1
 80057d8:	444b      	add	r3, r9
 80057da:	429a      	cmp	r2, r3
 80057dc:	d120      	bne.n	8005820 <_realloc_r+0x27c>
 80057de:	f850 7c04 	ldr.w	r7, [r0, #-4]
 80057e2:	f027 0703 	bic.w	r7, r7, #3
 80057e6:	4437      	add	r7, r6
 80057e8:	e73d      	b.n	8005666 <_realloc_r+0xc2>
 80057ea:	68a3      	ldr	r3, [r4, #8]
 80057ec:	2a24      	cmp	r2, #36	; 0x24
 80057ee:	612b      	str	r3, [r5, #16]
 80057f0:	68e3      	ldr	r3, [r4, #12]
 80057f2:	bf18      	it	ne
 80057f4:	f105 0018 	addne.w	r0, r5, #24
 80057f8:	616b      	str	r3, [r5, #20]
 80057fa:	bf09      	itett	eq
 80057fc:	6923      	ldreq	r3, [r4, #16]
 80057fe:	f104 0310 	addne.w	r3, r4, #16
 8005802:	61ab      	streq	r3, [r5, #24]
 8005804:	6962      	ldreq	r2, [r4, #20]
 8005806:	bf02      	ittt	eq
 8005808:	f105 0020 	addeq.w	r0, r5, #32
 800580c:	f104 0318 	addeq.w	r3, r4, #24
 8005810:	61ea      	streq	r2, [r5, #28]
 8005812:	e7c9      	b.n	80057a8 <_realloc_r+0x204>
 8005814:	4623      	mov	r3, r4
 8005816:	e7c7      	b.n	80057a8 <_realloc_r+0x204>
 8005818:	4621      	mov	r1, r4
 800581a:	f7ff fea1 	bl	8005560 <memmove>
 800581e:	e7c9      	b.n	80057b4 <_realloc_r+0x210>
 8005820:	1f32      	subs	r2, r6, #4
 8005822:	2a24      	cmp	r2, #36	; 0x24
 8005824:	d82e      	bhi.n	8005884 <_realloc_r+0x2e0>
 8005826:	2a13      	cmp	r2, #19
 8005828:	d929      	bls.n	800587e <_realloc_r+0x2da>
 800582a:	6823      	ldr	r3, [r4, #0]
 800582c:	2a1b      	cmp	r2, #27
 800582e:	6003      	str	r3, [r0, #0]
 8005830:	6863      	ldr	r3, [r4, #4]
 8005832:	6043      	str	r3, [r0, #4]
 8005834:	d80e      	bhi.n	8005854 <_realloc_r+0x2b0>
 8005836:	f100 0308 	add.w	r3, r0, #8
 800583a:	f104 0208 	add.w	r2, r4, #8
 800583e:	6811      	ldr	r1, [r2, #0]
 8005840:	6019      	str	r1, [r3, #0]
 8005842:	6851      	ldr	r1, [r2, #4]
 8005844:	6059      	str	r1, [r3, #4]
 8005846:	6892      	ldr	r2, [r2, #8]
 8005848:	609a      	str	r2, [r3, #8]
 800584a:	4621      	mov	r1, r4
 800584c:	4650      	mov	r0, sl
 800584e:	f7ff fdb7 	bl	80053c0 <_free_r>
 8005852:	e76a      	b.n	800572a <_realloc_r+0x186>
 8005854:	68a3      	ldr	r3, [r4, #8]
 8005856:	2a24      	cmp	r2, #36	; 0x24
 8005858:	6083      	str	r3, [r0, #8]
 800585a:	68e3      	ldr	r3, [r4, #12]
 800585c:	bf18      	it	ne
 800585e:	f104 0210 	addne.w	r2, r4, #16
 8005862:	60c3      	str	r3, [r0, #12]
 8005864:	bf09      	itett	eq
 8005866:	6923      	ldreq	r3, [r4, #16]
 8005868:	f100 0310 	addne.w	r3, r0, #16
 800586c:	6103      	streq	r3, [r0, #16]
 800586e:	6961      	ldreq	r1, [r4, #20]
 8005870:	bf02      	ittt	eq
 8005872:	f100 0318 	addeq.w	r3, r0, #24
 8005876:	f104 0218 	addeq.w	r2, r4, #24
 800587a:	6141      	streq	r1, [r0, #20]
 800587c:	e7df      	b.n	800583e <_realloc_r+0x29a>
 800587e:	4603      	mov	r3, r0
 8005880:	4622      	mov	r2, r4
 8005882:	e7dc      	b.n	800583e <_realloc_r+0x29a>
 8005884:	4621      	mov	r1, r4
 8005886:	f7ff fe6b 	bl	8005560 <memmove>
 800588a:	e7de      	b.n	800584a <_realloc_r+0x2a6>
 800588c:	4637      	mov	r7, r6
 800588e:	e6ea      	b.n	8005666 <_realloc_r+0xc2>
 8005890:	f003 0301 	and.w	r3, r3, #1
 8005894:	431f      	orrs	r7, r3
 8005896:	f8c9 7004 	str.w	r7, [r9, #4]
 800589a:	6853      	ldr	r3, [r2, #4]
 800589c:	f043 0301 	orr.w	r3, r3, #1
 80058a0:	6053      	str	r3, [r2, #4]
 80058a2:	e6fc      	b.n	800569e <_realloc_r+0xfa>
 80058a4:	20000108 	.word	0x20000108

080058a8 <__ascii_wctomb>:
 80058a8:	b149      	cbz	r1, 80058be <__ascii_wctomb+0x16>
 80058aa:	2aff      	cmp	r2, #255	; 0xff
 80058ac:	bf8b      	itete	hi
 80058ae:	238a      	movhi	r3, #138	; 0x8a
 80058b0:	700a      	strbls	r2, [r1, #0]
 80058b2:	6003      	strhi	r3, [r0, #0]
 80058b4:	2001      	movls	r0, #1
 80058b6:	bf88      	it	hi
 80058b8:	f04f 30ff 	movhi.w	r0, #4294967295
 80058bc:	4770      	bx	lr
 80058be:	4608      	mov	r0, r1
 80058c0:	4770      	bx	lr
	...

080058c4 <powf>:
 80058c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80058c8:	b08b      	sub	sp, #44	; 0x2c
 80058ca:	4605      	mov	r5, r0
 80058cc:	460c      	mov	r4, r1
 80058ce:	f000 f965 	bl	8005b9c <__ieee754_powf>
 80058d2:	f8df 82c4 	ldr.w	r8, [pc, #708]	; 8005b98 <powf+0x2d4>
 80058d6:	4606      	mov	r6, r0
 80058d8:	f998 9000 	ldrsb.w	r9, [r8]
 80058dc:	4647      	mov	r7, r8
 80058de:	f1b9 3fff 	cmp.w	r9, #4294967295
 80058e2:	d060      	beq.n	80059a6 <powf+0xe2>
 80058e4:	4621      	mov	r1, r4
 80058e6:	4620      	mov	r0, r4
 80058e8:	f7fb fbee 	bl	80010c8 <__aeabi_fcmpun>
 80058ec:	4683      	mov	fp, r0
 80058ee:	2800      	cmp	r0, #0
 80058f0:	d159      	bne.n	80059a6 <powf+0xe2>
 80058f2:	4629      	mov	r1, r5
 80058f4:	4628      	mov	r0, r5
 80058f6:	f7fb fbe7 	bl	80010c8 <__aeabi_fcmpun>
 80058fa:	2100      	movs	r1, #0
 80058fc:	4682      	mov	sl, r0
 80058fe:	b300      	cbz	r0, 8005942 <powf+0x7e>
 8005900:	4620      	mov	r0, r4
 8005902:	f7fb fbaf 	bl	8001064 <__aeabi_fcmpeq>
 8005906:	2800      	cmp	r0, #0
 8005908:	d04d      	beq.n	80059a6 <powf+0xe2>
 800590a:	2301      	movs	r3, #1
 800590c:	9300      	str	r3, [sp, #0]
 800590e:	4b9c      	ldr	r3, [pc, #624]	; (8005b80 <powf+0x2bc>)
 8005910:	4628      	mov	r0, r5
 8005912:	9301      	str	r3, [sp, #4]
 8005914:	f8cd b020 	str.w	fp, [sp, #32]
 8005918:	f7fa fd86 	bl	8000428 <__aeabi_f2d>
 800591c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8005920:	4620      	mov	r0, r4
 8005922:	f7fa fd81 	bl	8000428 <__aeabi_f2d>
 8005926:	2200      	movs	r2, #0
 8005928:	4b96      	ldr	r3, [pc, #600]	; (8005b84 <powf+0x2c0>)
 800592a:	f1b9 0f02 	cmp.w	r9, #2
 800592e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8005932:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8005936:	d031      	beq.n	800599c <powf+0xd8>
 8005938:	4668      	mov	r0, sp
 800593a:	f000 fccd 	bl	80062d8 <matherr>
 800593e:	bb38      	cbnz	r0, 8005990 <powf+0xcc>
 8005940:	e05d      	b.n	80059fe <powf+0x13a>
 8005942:	4628      	mov	r0, r5
 8005944:	f7fb fb8e 	bl	8001064 <__aeabi_fcmpeq>
 8005948:	2800      	cmp	r0, #0
 800594a:	d05d      	beq.n	8005a08 <powf+0x144>
 800594c:	2100      	movs	r1, #0
 800594e:	4620      	mov	r0, r4
 8005950:	f7fb fb88 	bl	8001064 <__aeabi_fcmpeq>
 8005954:	4607      	mov	r7, r0
 8005956:	2800      	cmp	r0, #0
 8005958:	d029      	beq.n	80059ae <powf+0xea>
 800595a:	2301      	movs	r3, #1
 800595c:	9300      	str	r3, [sp, #0]
 800595e:	4b88      	ldr	r3, [pc, #544]	; (8005b80 <powf+0x2bc>)
 8005960:	4628      	mov	r0, r5
 8005962:	9301      	str	r3, [sp, #4]
 8005964:	f8cd a020 	str.w	sl, [sp, #32]
 8005968:	f7fa fd5e 	bl	8000428 <__aeabi_f2d>
 800596c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8005970:	4620      	mov	r0, r4
 8005972:	f7fa fd59 	bl	8000428 <__aeabi_f2d>
 8005976:	2200      	movs	r2, #0
 8005978:	2300      	movs	r3, #0
 800597a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800597e:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8005982:	f1b9 0f00 	cmp.w	r9, #0
 8005986:	d0d7      	beq.n	8005938 <powf+0x74>
 8005988:	2200      	movs	r2, #0
 800598a:	4b7e      	ldr	r3, [pc, #504]	; (8005b84 <powf+0x2c0>)
 800598c:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8005990:	9b08      	ldr	r3, [sp, #32]
 8005992:	b11b      	cbz	r3, 800599c <powf+0xd8>
 8005994:	f000 fd8c 	bl	80064b0 <__errno>
 8005998:	9b08      	ldr	r3, [sp, #32]
 800599a:	6003      	str	r3, [r0, #0]
 800599c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80059a0:	f7fb f86e 	bl	8000a80 <__aeabi_d2f>
 80059a4:	4606      	mov	r6, r0
 80059a6:	4630      	mov	r0, r6
 80059a8:	b00b      	add	sp, #44	; 0x2c
 80059aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80059ae:	4620      	mov	r0, r4
 80059b0:	f000 fd1f 	bl	80063f2 <finitef>
 80059b4:	2800      	cmp	r0, #0
 80059b6:	d0f6      	beq.n	80059a6 <powf+0xe2>
 80059b8:	2100      	movs	r1, #0
 80059ba:	4620      	mov	r0, r4
 80059bc:	f7fb fb5c 	bl	8001078 <__aeabi_fcmplt>
 80059c0:	2800      	cmp	r0, #0
 80059c2:	d0f0      	beq.n	80059a6 <powf+0xe2>
 80059c4:	2301      	movs	r3, #1
 80059c6:	9300      	str	r3, [sp, #0]
 80059c8:	4b6d      	ldr	r3, [pc, #436]	; (8005b80 <powf+0x2bc>)
 80059ca:	4628      	mov	r0, r5
 80059cc:	9301      	str	r3, [sp, #4]
 80059ce:	9708      	str	r7, [sp, #32]
 80059d0:	f7fa fd2a 	bl	8000428 <__aeabi_f2d>
 80059d4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80059d8:	4620      	mov	r0, r4
 80059da:	f7fa fd25 	bl	8000428 <__aeabi_f2d>
 80059de:	f998 3000 	ldrsb.w	r3, [r8]
 80059e2:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80059e6:	b923      	cbnz	r3, 80059f2 <powf+0x12e>
 80059e8:	2200      	movs	r2, #0
 80059ea:	2300      	movs	r3, #0
 80059ec:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80059f0:	e7a2      	b.n	8005938 <powf+0x74>
 80059f2:	2000      	movs	r0, #0
 80059f4:	4964      	ldr	r1, [pc, #400]	; (8005b88 <powf+0x2c4>)
 80059f6:	2b02      	cmp	r3, #2
 80059f8:	e9cd 0106 	strd	r0, r1, [sp, #24]
 80059fc:	d19c      	bne.n	8005938 <powf+0x74>
 80059fe:	f000 fd57 	bl	80064b0 <__errno>
 8005a02:	2321      	movs	r3, #33	; 0x21
 8005a04:	6003      	str	r3, [r0, #0]
 8005a06:	e7c3      	b.n	8005990 <powf+0xcc>
 8005a08:	4630      	mov	r0, r6
 8005a0a:	f000 fcf2 	bl	80063f2 <finitef>
 8005a0e:	4680      	mov	r8, r0
 8005a10:	2800      	cmp	r0, #0
 8005a12:	f040 8087 	bne.w	8005b24 <powf+0x260>
 8005a16:	4628      	mov	r0, r5
 8005a18:	f000 fceb 	bl	80063f2 <finitef>
 8005a1c:	2800      	cmp	r0, #0
 8005a1e:	f000 8081 	beq.w	8005b24 <powf+0x260>
 8005a22:	4620      	mov	r0, r4
 8005a24:	f000 fce5 	bl	80063f2 <finitef>
 8005a28:	2800      	cmp	r0, #0
 8005a2a:	d07b      	beq.n	8005b24 <powf+0x260>
 8005a2c:	4631      	mov	r1, r6
 8005a2e:	4630      	mov	r0, r6
 8005a30:	f7fb fb4a 	bl	80010c8 <__aeabi_fcmpun>
 8005a34:	f997 6000 	ldrsb.w	r6, [r7]
 8005a38:	4b51      	ldr	r3, [pc, #324]	; (8005b80 <powf+0x2bc>)
 8005a3a:	b1d0      	cbz	r0, 8005a72 <powf+0x1ae>
 8005a3c:	2201      	movs	r2, #1
 8005a3e:	4628      	mov	r0, r5
 8005a40:	e88d 000c 	stmia.w	sp, {r2, r3}
 8005a44:	f8cd 8020 	str.w	r8, [sp, #32]
 8005a48:	f7fa fcee 	bl	8000428 <__aeabi_f2d>
 8005a4c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8005a50:	4620      	mov	r0, r4
 8005a52:	f7fa fce9 	bl	8000428 <__aeabi_f2d>
 8005a56:	2200      	movs	r2, #0
 8005a58:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8005a5c:	2300      	movs	r3, #0
 8005a5e:	2e00      	cmp	r6, #0
 8005a60:	d0c4      	beq.n	80059ec <powf+0x128>
 8005a62:	4610      	mov	r0, r2
 8005a64:	4619      	mov	r1, r3
 8005a66:	f7fa fe5d 	bl	8000724 <__aeabi_ddiv>
 8005a6a:	2e02      	cmp	r6, #2
 8005a6c:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8005a70:	e7c4      	b.n	80059fc <powf+0x138>
 8005a72:	2203      	movs	r2, #3
 8005a74:	9008      	str	r0, [sp, #32]
 8005a76:	4628      	mov	r0, r5
 8005a78:	e88d 000c 	stmia.w	sp, {r2, r3}
 8005a7c:	f7fa fcd4 	bl	8000428 <__aeabi_f2d>
 8005a80:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8005a84:	4620      	mov	r0, r4
 8005a86:	f7fa fccf 	bl	8000428 <__aeabi_f2d>
 8005a8a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8005a8e:	bb4e      	cbnz	r6, 8005ae4 <powf+0x220>
 8005a90:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 8005a94:	4b3d      	ldr	r3, [pc, #244]	; (8005b8c <powf+0x2c8>)
 8005a96:	2100      	movs	r1, #0
 8005a98:	4628      	mov	r0, r5
 8005a9a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8005a9e:	f7fb faeb 	bl	8001078 <__aeabi_fcmplt>
 8005aa2:	2800      	cmp	r0, #0
 8005aa4:	d064      	beq.n	8005b70 <powf+0x2ac>
 8005aa6:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
 8005aaa:	4620      	mov	r0, r4
 8005aac:	f7fb f946 	bl	8000d3c <__aeabi_fmul>
 8005ab0:	f7fa fcba 	bl	8000428 <__aeabi_f2d>
 8005ab4:	4604      	mov	r4, r0
 8005ab6:	460d      	mov	r5, r1
 8005ab8:	f000 fc10 	bl	80062dc <rint>
 8005abc:	4602      	mov	r2, r0
 8005abe:	460b      	mov	r3, r1
 8005ac0:	4620      	mov	r0, r4
 8005ac2:	4629      	mov	r1, r5
 8005ac4:	f7fa ff6c 	bl	80009a0 <__aeabi_dcmpeq>
 8005ac8:	b920      	cbnz	r0, 8005ad4 <powf+0x210>
 8005aca:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 8005ace:	4b30      	ldr	r3, [pc, #192]	; (8005b90 <powf+0x2cc>)
 8005ad0:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8005ad4:	f997 3000 	ldrsb.w	r3, [r7]
 8005ad8:	2b02      	cmp	r3, #2
 8005ada:	d149      	bne.n	8005b70 <powf+0x2ac>
 8005adc:	f000 fce8 	bl	80064b0 <__errno>
 8005ae0:	2322      	movs	r3, #34	; 0x22
 8005ae2:	e78f      	b.n	8005a04 <powf+0x140>
 8005ae4:	2200      	movs	r2, #0
 8005ae6:	4b2b      	ldr	r3, [pc, #172]	; (8005b94 <powf+0x2d0>)
 8005ae8:	2100      	movs	r1, #0
 8005aea:	4628      	mov	r0, r5
 8005aec:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8005af0:	f7fb fac2 	bl	8001078 <__aeabi_fcmplt>
 8005af4:	2800      	cmp	r0, #0
 8005af6:	d0ed      	beq.n	8005ad4 <powf+0x210>
 8005af8:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
 8005afc:	4620      	mov	r0, r4
 8005afe:	f7fb f91d 	bl	8000d3c <__aeabi_fmul>
 8005b02:	f7fa fc91 	bl	8000428 <__aeabi_f2d>
 8005b06:	4604      	mov	r4, r0
 8005b08:	460d      	mov	r5, r1
 8005b0a:	f000 fbe7 	bl	80062dc <rint>
 8005b0e:	4602      	mov	r2, r0
 8005b10:	460b      	mov	r3, r1
 8005b12:	4620      	mov	r0, r4
 8005b14:	4629      	mov	r1, r5
 8005b16:	f7fa ff43 	bl	80009a0 <__aeabi_dcmpeq>
 8005b1a:	2800      	cmp	r0, #0
 8005b1c:	d1da      	bne.n	8005ad4 <powf+0x210>
 8005b1e:	2200      	movs	r2, #0
 8005b20:	4b19      	ldr	r3, [pc, #100]	; (8005b88 <powf+0x2c4>)
 8005b22:	e7d5      	b.n	8005ad0 <powf+0x20c>
 8005b24:	2100      	movs	r1, #0
 8005b26:	4630      	mov	r0, r6
 8005b28:	f7fb fa9c 	bl	8001064 <__aeabi_fcmpeq>
 8005b2c:	2800      	cmp	r0, #0
 8005b2e:	f43f af3a 	beq.w	80059a6 <powf+0xe2>
 8005b32:	4628      	mov	r0, r5
 8005b34:	f000 fc5d 	bl	80063f2 <finitef>
 8005b38:	2800      	cmp	r0, #0
 8005b3a:	f43f af34 	beq.w	80059a6 <powf+0xe2>
 8005b3e:	4620      	mov	r0, r4
 8005b40:	f000 fc57 	bl	80063f2 <finitef>
 8005b44:	2800      	cmp	r0, #0
 8005b46:	f43f af2e 	beq.w	80059a6 <powf+0xe2>
 8005b4a:	2304      	movs	r3, #4
 8005b4c:	9300      	str	r3, [sp, #0]
 8005b4e:	4b0c      	ldr	r3, [pc, #48]	; (8005b80 <powf+0x2bc>)
 8005b50:	4628      	mov	r0, r5
 8005b52:	9301      	str	r3, [sp, #4]
 8005b54:	2300      	movs	r3, #0
 8005b56:	9308      	str	r3, [sp, #32]
 8005b58:	f7fa fc66 	bl	8000428 <__aeabi_f2d>
 8005b5c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8005b60:	4620      	mov	r0, r4
 8005b62:	f7fa fc61 	bl	8000428 <__aeabi_f2d>
 8005b66:	2200      	movs	r2, #0
 8005b68:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8005b6c:	2300      	movs	r3, #0
 8005b6e:	e7af      	b.n	8005ad0 <powf+0x20c>
 8005b70:	4668      	mov	r0, sp
 8005b72:	f000 fbb1 	bl	80062d8 <matherr>
 8005b76:	2800      	cmp	r0, #0
 8005b78:	f47f af0a 	bne.w	8005990 <powf+0xcc>
 8005b7c:	e7ae      	b.n	8005adc <powf+0x218>
 8005b7e:	bf00      	nop
 8005b80:	0800677f 	.word	0x0800677f
 8005b84:	3ff00000 	.word	0x3ff00000
 8005b88:	fff00000 	.word	0xfff00000
 8005b8c:	47efffff 	.word	0x47efffff
 8005b90:	c7efffff 	.word	0xc7efffff
 8005b94:	7ff00000 	.word	0x7ff00000
 8005b98:	20000684 	.word	0x20000684

08005b9c <__ieee754_powf>:
 8005b9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005ba0:	b087      	sub	sp, #28
 8005ba2:	9101      	str	r1, [sp, #4]
 8005ba4:	9c01      	ldr	r4, [sp, #4]
 8005ba6:	4681      	mov	r9, r0
 8005ba8:	f034 4700 	bics.w	r7, r4, #2147483648	; 0x80000000
 8005bac:	f000 8325 	beq.w	80061fa <__ieee754_powf+0x65e>
 8005bb0:	f020 4600 	bic.w	r6, r0, #2147483648	; 0x80000000
 8005bb4:	f1b6 4fff 	cmp.w	r6, #2139095040	; 0x7f800000
 8005bb8:	4680      	mov	r8, r0
 8005bba:	dc06      	bgt.n	8005bca <__ieee754_powf+0x2e>
 8005bbc:	f1b7 4fff 	cmp.w	r7, #2139095040	; 0x7f800000
 8005bc0:	dd09      	ble.n	8005bd6 <__ieee754_powf+0x3a>
 8005bc2:	f1b6 5f7e 	cmp.w	r6, #1065353216	; 0x3f800000
 8005bc6:	f000 8318 	beq.w	80061fa <__ieee754_powf+0x65e>
 8005bca:	4885      	ldr	r0, [pc, #532]	; (8005de0 <__ieee754_powf+0x244>)
 8005bcc:	b007      	add	sp, #28
 8005bce:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005bd2:	f000 bc17 	b.w	8006404 <nanf>
 8005bd6:	2800      	cmp	r0, #0
 8005bd8:	da1d      	bge.n	8005c16 <__ieee754_powf+0x7a>
 8005bda:	f1b7 4f97 	cmp.w	r7, #1266679808	; 0x4b800000
 8005bde:	da2b      	bge.n	8005c38 <__ieee754_powf+0x9c>
 8005be0:	f1b7 5f7e 	cmp.w	r7, #1065353216	; 0x3f800000
 8005be4:	db30      	blt.n	8005c48 <__ieee754_powf+0xac>
 8005be6:	15fb      	asrs	r3, r7, #23
 8005be8:	f1c3 0396 	rsb	r3, r3, #150	; 0x96
 8005bec:	fa47 f503 	asr.w	r5, r7, r3
 8005bf0:	fa05 f303 	lsl.w	r3, r5, r3
 8005bf4:	429f      	cmp	r7, r3
 8005bf6:	d127      	bne.n	8005c48 <__ieee754_powf+0xac>
 8005bf8:	f005 0501 	and.w	r5, r5, #1
 8005bfc:	f1c5 0502 	rsb	r5, r5, #2
 8005c00:	f1b7 5f7e 	cmp.w	r7, #1065353216	; 0x3f800000
 8005c04:	d122      	bne.n	8005c4c <__ieee754_powf+0xb0>
 8005c06:	2c00      	cmp	r4, #0
 8005c08:	4649      	mov	r1, r9
 8005c0a:	da11      	bge.n	8005c30 <__ieee754_powf+0x94>
 8005c0c:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
 8005c10:	f7fb f948 	bl	8000ea4 <__aeabi_fdiv>
 8005c14:	e021      	b.n	8005c5a <__ieee754_powf+0xbe>
 8005c16:	2500      	movs	r5, #0
 8005c18:	f1b7 4fff 	cmp.w	r7, #2139095040	; 0x7f800000
 8005c1c:	d1f0      	bne.n	8005c00 <__ieee754_powf+0x64>
 8005c1e:	f1b6 5f7e 	cmp.w	r6, #1065353216	; 0x3f800000
 8005c22:	f000 82ea 	beq.w	80061fa <__ieee754_powf+0x65e>
 8005c26:	dd09      	ble.n	8005c3c <__ieee754_powf+0xa0>
 8005c28:	2c00      	cmp	r4, #0
 8005c2a:	f280 82e9 	bge.w	8006200 <__ieee754_powf+0x664>
 8005c2e:	2100      	movs	r1, #0
 8005c30:	4608      	mov	r0, r1
 8005c32:	b007      	add	sp, #28
 8005c34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005c38:	2502      	movs	r5, #2
 8005c3a:	e7ed      	b.n	8005c18 <__ieee754_powf+0x7c>
 8005c3c:	2c00      	cmp	r4, #0
 8005c3e:	daf6      	bge.n	8005c2e <__ieee754_powf+0x92>
 8005c40:	9b01      	ldr	r3, [sp, #4]
 8005c42:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 8005c46:	e7f3      	b.n	8005c30 <__ieee754_powf+0x94>
 8005c48:	2500      	movs	r5, #0
 8005c4a:	e7d9      	b.n	8005c00 <__ieee754_powf+0x64>
 8005c4c:	f1b4 4f80 	cmp.w	r4, #1073741824	; 0x40000000
 8005c50:	d105      	bne.n	8005c5e <__ieee754_powf+0xc2>
 8005c52:	4649      	mov	r1, r9
 8005c54:	4608      	mov	r0, r1
 8005c56:	f7fb f871 	bl	8000d3c <__aeabi_fmul>
 8005c5a:	4601      	mov	r1, r0
 8005c5c:	e7e8      	b.n	8005c30 <__ieee754_powf+0x94>
 8005c5e:	f1b4 5f7c 	cmp.w	r4, #1056964608	; 0x3f000000
 8005c62:	4648      	mov	r0, r9
 8005c64:	d107      	bne.n	8005c76 <__ieee754_powf+0xda>
 8005c66:	f1b8 0f00 	cmp.w	r8, #0
 8005c6a:	db04      	blt.n	8005c76 <__ieee754_powf+0xda>
 8005c6c:	b007      	add	sp, #28
 8005c6e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005c72:	f000 badf 	b.w	8006234 <__ieee754_sqrtf>
 8005c76:	f000 fbb9 	bl	80063ec <fabsf>
 8005c7a:	4601      	mov	r1, r0
 8005c7c:	b126      	cbz	r6, 8005c88 <__ieee754_powf+0xec>
 8005c7e:	f028 4340 	bic.w	r3, r8, #3221225472	; 0xc0000000
 8005c82:	f1b3 5f7e 	cmp.w	r3, #1065353216	; 0x3f800000
 8005c86:	d118      	bne.n	8005cba <__ieee754_powf+0x11e>
 8005c88:	2c00      	cmp	r4, #0
 8005c8a:	da04      	bge.n	8005c96 <__ieee754_powf+0xfa>
 8005c8c:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
 8005c90:	f7fb f908 	bl	8000ea4 <__aeabi_fdiv>
 8005c94:	4601      	mov	r1, r0
 8005c96:	f1b8 0f00 	cmp.w	r8, #0
 8005c9a:	dac9      	bge.n	8005c30 <__ieee754_powf+0x94>
 8005c9c:	f1a6 507e 	sub.w	r0, r6, #1065353216	; 0x3f800000
 8005ca0:	ea50 0305 	orrs.w	r3, r0, r5
 8005ca4:	d104      	bne.n	8005cb0 <__ieee754_powf+0x114>
 8005ca6:	4608      	mov	r0, r1
 8005ca8:	f7fa ff3e 	bl	8000b28 <__aeabi_fsub>
 8005cac:	4601      	mov	r1, r0
 8005cae:	e7af      	b.n	8005c10 <__ieee754_powf+0x74>
 8005cb0:	2d01      	cmp	r5, #1
 8005cb2:	d1bd      	bne.n	8005c30 <__ieee754_powf+0x94>
 8005cb4:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8005cb8:	e7ba      	b.n	8005c30 <__ieee754_powf+0x94>
 8005cba:	ea4f 78d8 	mov.w	r8, r8, lsr #31
 8005cbe:	f108 33ff 	add.w	r3, r8, #4294967295
 8005cc2:	9303      	str	r3, [sp, #12]
 8005cc4:	432b      	orrs	r3, r5
 8005cc6:	d101      	bne.n	8005ccc <__ieee754_powf+0x130>
 8005cc8:	4649      	mov	r1, r9
 8005cca:	e7ec      	b.n	8005ca6 <__ieee754_powf+0x10a>
 8005ccc:	f1b7 4f9a 	cmp.w	r7, #1291845632	; 0x4d000000
 8005cd0:	f340 8098 	ble.w	8005e04 <__ieee754_powf+0x268>
 8005cd4:	4b43      	ldr	r3, [pc, #268]	; (8005de4 <__ieee754_powf+0x248>)
 8005cd6:	429e      	cmp	r6, r3
 8005cd8:	dc03      	bgt.n	8005ce2 <__ieee754_powf+0x146>
 8005cda:	2c00      	cmp	r4, #0
 8005cdc:	daa7      	bge.n	8005c2e <__ieee754_powf+0x92>
 8005cde:	4942      	ldr	r1, [pc, #264]	; (8005de8 <__ieee754_powf+0x24c>)
 8005ce0:	e7b8      	b.n	8005c54 <__ieee754_powf+0xb8>
 8005ce2:	4b42      	ldr	r3, [pc, #264]	; (8005dec <__ieee754_powf+0x250>)
 8005ce4:	429e      	cmp	r6, r3
 8005ce6:	dd02      	ble.n	8005cee <__ieee754_powf+0x152>
 8005ce8:	2c00      	cmp	r4, #0
 8005cea:	dcf8      	bgt.n	8005cde <__ieee754_powf+0x142>
 8005cec:	e79f      	b.n	8005c2e <__ieee754_powf+0x92>
 8005cee:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
 8005cf2:	f7fa ff19 	bl	8000b28 <__aeabi_fsub>
 8005cf6:	493e      	ldr	r1, [pc, #248]	; (8005df0 <__ieee754_powf+0x254>)
 8005cf8:	4606      	mov	r6, r0
 8005cfa:	f7fb f81f 	bl	8000d3c <__aeabi_fmul>
 8005cfe:	493d      	ldr	r1, [pc, #244]	; (8005df4 <__ieee754_powf+0x258>)
 8005d00:	4607      	mov	r7, r0
 8005d02:	4630      	mov	r0, r6
 8005d04:	f7fb f81a 	bl	8000d3c <__aeabi_fmul>
 8005d08:	f04f 517a 	mov.w	r1, #1048576000	; 0x3e800000
 8005d0c:	4680      	mov	r8, r0
 8005d0e:	4630      	mov	r0, r6
 8005d10:	f7fb f814 	bl	8000d3c <__aeabi_fmul>
 8005d14:	4601      	mov	r1, r0
 8005d16:	4838      	ldr	r0, [pc, #224]	; (8005df8 <__ieee754_powf+0x25c>)
 8005d18:	f7fa ff06 	bl	8000b28 <__aeabi_fsub>
 8005d1c:	4631      	mov	r1, r6
 8005d1e:	f7fb f80d 	bl	8000d3c <__aeabi_fmul>
 8005d22:	4601      	mov	r1, r0
 8005d24:	f04f 507c 	mov.w	r0, #1056964608	; 0x3f000000
 8005d28:	f7fa fefe 	bl	8000b28 <__aeabi_fsub>
 8005d2c:	4631      	mov	r1, r6
 8005d2e:	4681      	mov	r9, r0
 8005d30:	4630      	mov	r0, r6
 8005d32:	f7fb f803 	bl	8000d3c <__aeabi_fmul>
 8005d36:	4601      	mov	r1, r0
 8005d38:	4648      	mov	r0, r9
 8005d3a:	f7fa ffff 	bl	8000d3c <__aeabi_fmul>
 8005d3e:	492f      	ldr	r1, [pc, #188]	; (8005dfc <__ieee754_powf+0x260>)
 8005d40:	f7fa fffc 	bl	8000d3c <__aeabi_fmul>
 8005d44:	4601      	mov	r1, r0
 8005d46:	4640      	mov	r0, r8
 8005d48:	f7fa feee 	bl	8000b28 <__aeabi_fsub>
 8005d4c:	4601      	mov	r1, r0
 8005d4e:	4606      	mov	r6, r0
 8005d50:	4638      	mov	r0, r7
 8005d52:	f7fa feeb 	bl	8000b2c <__addsf3>
 8005d56:	f420 6a7f 	bic.w	sl, r0, #4080	; 0xff0
 8005d5a:	f02a 0a0f 	bic.w	sl, sl, #15
 8005d5e:	4639      	mov	r1, r7
 8005d60:	4650      	mov	r0, sl
 8005d62:	f7fa fee1 	bl	8000b28 <__aeabi_fsub>
 8005d66:	4601      	mov	r1, r0
 8005d68:	4630      	mov	r0, r6
 8005d6a:	f7fa fedd 	bl	8000b28 <__aeabi_fsub>
 8005d6e:	f424 647f 	bic.w	r4, r4, #4080	; 0xff0
 8005d72:	9b03      	ldr	r3, [sp, #12]
 8005d74:	3d01      	subs	r5, #1
 8005d76:	f024 040f 	bic.w	r4, r4, #15
 8005d7a:	432b      	orrs	r3, r5
 8005d7c:	4606      	mov	r6, r0
 8005d7e:	4621      	mov	r1, r4
 8005d80:	9801      	ldr	r0, [sp, #4]
 8005d82:	bf0c      	ite	eq
 8005d84:	4d1e      	ldreq	r5, [pc, #120]	; (8005e00 <__ieee754_powf+0x264>)
 8005d86:	f04f 557e 	movne.w	r5, #1065353216	; 0x3f800000
 8005d8a:	f7fa fecd 	bl	8000b28 <__aeabi_fsub>
 8005d8e:	4651      	mov	r1, sl
 8005d90:	f7fa ffd4 	bl	8000d3c <__aeabi_fmul>
 8005d94:	9901      	ldr	r1, [sp, #4]
 8005d96:	4607      	mov	r7, r0
 8005d98:	4630      	mov	r0, r6
 8005d9a:	f7fa ffcf 	bl	8000d3c <__aeabi_fmul>
 8005d9e:	4601      	mov	r1, r0
 8005da0:	4638      	mov	r0, r7
 8005da2:	f7fa fec3 	bl	8000b2c <__addsf3>
 8005da6:	4621      	mov	r1, r4
 8005da8:	4606      	mov	r6, r0
 8005daa:	4650      	mov	r0, sl
 8005dac:	f7fa ffc6 	bl	8000d3c <__aeabi_fmul>
 8005db0:	4601      	mov	r1, r0
 8005db2:	4607      	mov	r7, r0
 8005db4:	4681      	mov	r9, r0
 8005db6:	4630      	mov	r0, r6
 8005db8:	f7fa feb8 	bl	8000b2c <__addsf3>
 8005dbc:	2800      	cmp	r0, #0
 8005dbe:	4682      	mov	sl, r0
 8005dc0:	4680      	mov	r8, r0
 8005dc2:	f020 4400 	bic.w	r4, r0, #2147483648	; 0x80000000
 8005dc6:	f340 81fb 	ble.w	80061c0 <__ieee754_powf+0x624>
 8005dca:	f1b4 4f86 	cmp.w	r4, #1124073472	; 0x43000000
 8005dce:	f340 8149 	ble.w	8006064 <__ieee754_powf+0x4c8>
 8005dd2:	4905      	ldr	r1, [pc, #20]	; (8005de8 <__ieee754_powf+0x24c>)
 8005dd4:	4628      	mov	r0, r5
 8005dd6:	f7fa ffb1 	bl	8000d3c <__aeabi_fmul>
 8005dda:	4903      	ldr	r1, [pc, #12]	; (8005de8 <__ieee754_powf+0x24c>)
 8005ddc:	e73b      	b.n	8005c56 <__ieee754_powf+0xba>
 8005dde:	bf00      	nop
 8005de0:	0800667d 	.word	0x0800667d
 8005de4:	3f7ffff7 	.word	0x3f7ffff7
 8005de8:	7149f2ca 	.word	0x7149f2ca
 8005dec:	3f800007 	.word	0x3f800007
 8005df0:	3fb8aa00 	.word	0x3fb8aa00
 8005df4:	36eca570 	.word	0x36eca570
 8005df8:	3eaaaaab 	.word	0x3eaaaaab
 8005dfc:	3fb8aa3b 	.word	0x3fb8aa3b
 8005e00:	bf800000 	.word	0xbf800000
 8005e04:	f5b6 0f00 	cmp.w	r6, #8388608	; 0x800000
 8005e08:	f280 810a 	bge.w	8006020 <__ieee754_powf+0x484>
 8005e0c:	f04f 4197 	mov.w	r1, #1266679808	; 0x4b800000
 8005e10:	f7fa ff94 	bl	8000d3c <__aeabi_fmul>
 8005e14:	f06f 0217 	mvn.w	r2, #23
 8005e18:	4606      	mov	r6, r0
 8005e1a:	15f3      	asrs	r3, r6, #23
 8005e1c:	3b7f      	subs	r3, #127	; 0x7f
 8005e1e:	441a      	add	r2, r3
 8005e20:	4b81      	ldr	r3, [pc, #516]	; (8006028 <__ieee754_powf+0x48c>)
 8005e22:	f3c6 0016 	ubfx	r0, r6, #0, #23
 8005e26:	4298      	cmp	r0, r3
 8005e28:	f040 567e 	orr.w	r6, r0, #1065353216	; 0x3f800000
 8005e2c:	dd06      	ble.n	8005e3c <__ieee754_powf+0x2a0>
 8005e2e:	4b7f      	ldr	r3, [pc, #508]	; (800602c <__ieee754_powf+0x490>)
 8005e30:	4298      	cmp	r0, r3
 8005e32:	f340 80f7 	ble.w	8006024 <__ieee754_powf+0x488>
 8005e36:	3201      	adds	r2, #1
 8005e38:	f5a6 0600 	sub.w	r6, r6, #8388608	; 0x800000
 8005e3c:	2700      	movs	r7, #0
 8005e3e:	4b7c      	ldr	r3, [pc, #496]	; (8006030 <__ieee754_powf+0x494>)
 8005e40:	4630      	mov	r0, r6
 8005e42:	f853 3027 	ldr.w	r3, [r3, r7, lsl #2]
 8005e46:	9205      	str	r2, [sp, #20]
 8005e48:	4619      	mov	r1, r3
 8005e4a:	9302      	str	r3, [sp, #8]
 8005e4c:	f7fa fe6c 	bl	8000b28 <__aeabi_fsub>
 8005e50:	9902      	ldr	r1, [sp, #8]
 8005e52:	4683      	mov	fp, r0
 8005e54:	4630      	mov	r0, r6
 8005e56:	f7fa fe69 	bl	8000b2c <__addsf3>
 8005e5a:	4601      	mov	r1, r0
 8005e5c:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
 8005e60:	f7fb f820 	bl	8000ea4 <__aeabi_fdiv>
 8005e64:	4601      	mov	r1, r0
 8005e66:	9004      	str	r0, [sp, #16]
 8005e68:	4658      	mov	r0, fp
 8005e6a:	f7fa ff67 	bl	8000d3c <__aeabi_fmul>
 8005e6e:	46b2      	mov	sl, r6
 8005e70:	1076      	asrs	r6, r6, #1
 8005e72:	f046 5600 	orr.w	r6, r6, #536870912	; 0x20000000
 8005e76:	f420 687f 	bic.w	r8, r0, #4080	; 0xff0
 8005e7a:	f506 2680 	add.w	r6, r6, #262144	; 0x40000
 8005e7e:	f028 080f 	bic.w	r8, r8, #15
 8005e82:	eb06 5647 	add.w	r6, r6, r7, lsl #21
 8005e86:	4681      	mov	r9, r0
 8005e88:	4631      	mov	r1, r6
 8005e8a:	4640      	mov	r0, r8
 8005e8c:	f7fa ff56 	bl	8000d3c <__aeabi_fmul>
 8005e90:	4601      	mov	r1, r0
 8005e92:	4658      	mov	r0, fp
 8005e94:	f7fa fe48 	bl	8000b28 <__aeabi_fsub>
 8005e98:	9902      	ldr	r1, [sp, #8]
 8005e9a:	4683      	mov	fp, r0
 8005e9c:	4630      	mov	r0, r6
 8005e9e:	f7fa fe43 	bl	8000b28 <__aeabi_fsub>
 8005ea2:	4601      	mov	r1, r0
 8005ea4:	4650      	mov	r0, sl
 8005ea6:	f7fa fe3f 	bl	8000b28 <__aeabi_fsub>
 8005eaa:	4641      	mov	r1, r8
 8005eac:	f7fa ff46 	bl	8000d3c <__aeabi_fmul>
 8005eb0:	4601      	mov	r1, r0
 8005eb2:	4658      	mov	r0, fp
 8005eb4:	f7fa fe38 	bl	8000b28 <__aeabi_fsub>
 8005eb8:	9b04      	ldr	r3, [sp, #16]
 8005eba:	4619      	mov	r1, r3
 8005ebc:	f7fa ff3e 	bl	8000d3c <__aeabi_fmul>
 8005ec0:	4649      	mov	r1, r9
 8005ec2:	4683      	mov	fp, r0
 8005ec4:	4648      	mov	r0, r9
 8005ec6:	f7fa ff39 	bl	8000d3c <__aeabi_fmul>
 8005eca:	4606      	mov	r6, r0
 8005ecc:	4959      	ldr	r1, [pc, #356]	; (8006034 <__ieee754_powf+0x498>)
 8005ece:	f7fa ff35 	bl	8000d3c <__aeabi_fmul>
 8005ed2:	4959      	ldr	r1, [pc, #356]	; (8006038 <__ieee754_powf+0x49c>)
 8005ed4:	f7fa fe2a 	bl	8000b2c <__addsf3>
 8005ed8:	4631      	mov	r1, r6
 8005eda:	f7fa ff2f 	bl	8000d3c <__aeabi_fmul>
 8005ede:	4957      	ldr	r1, [pc, #348]	; (800603c <__ieee754_powf+0x4a0>)
 8005ee0:	f7fa fe24 	bl	8000b2c <__addsf3>
 8005ee4:	4631      	mov	r1, r6
 8005ee6:	f7fa ff29 	bl	8000d3c <__aeabi_fmul>
 8005eea:	4955      	ldr	r1, [pc, #340]	; (8006040 <__ieee754_powf+0x4a4>)
 8005eec:	f7fa fe1e 	bl	8000b2c <__addsf3>
 8005ef0:	4631      	mov	r1, r6
 8005ef2:	f7fa ff23 	bl	8000d3c <__aeabi_fmul>
 8005ef6:	4953      	ldr	r1, [pc, #332]	; (8006044 <__ieee754_powf+0x4a8>)
 8005ef8:	f7fa fe18 	bl	8000b2c <__addsf3>
 8005efc:	4631      	mov	r1, r6
 8005efe:	f7fa ff1d 	bl	8000d3c <__aeabi_fmul>
 8005f02:	4951      	ldr	r1, [pc, #324]	; (8006048 <__ieee754_powf+0x4ac>)
 8005f04:	f7fa fe12 	bl	8000b2c <__addsf3>
 8005f08:	4631      	mov	r1, r6
 8005f0a:	4682      	mov	sl, r0
 8005f0c:	4630      	mov	r0, r6
 8005f0e:	f7fa ff15 	bl	8000d3c <__aeabi_fmul>
 8005f12:	4601      	mov	r1, r0
 8005f14:	4650      	mov	r0, sl
 8005f16:	f7fa ff11 	bl	8000d3c <__aeabi_fmul>
 8005f1a:	4606      	mov	r6, r0
 8005f1c:	4649      	mov	r1, r9
 8005f1e:	4640      	mov	r0, r8
 8005f20:	f7fa fe04 	bl	8000b2c <__addsf3>
 8005f24:	4659      	mov	r1, fp
 8005f26:	f7fa ff09 	bl	8000d3c <__aeabi_fmul>
 8005f2a:	4631      	mov	r1, r6
 8005f2c:	f7fa fdfe 	bl	8000b2c <__addsf3>
 8005f30:	4641      	mov	r1, r8
 8005f32:	4682      	mov	sl, r0
 8005f34:	4640      	mov	r0, r8
 8005f36:	f7fa ff01 	bl	8000d3c <__aeabi_fmul>
 8005f3a:	4944      	ldr	r1, [pc, #272]	; (800604c <__ieee754_powf+0x4b0>)
 8005f3c:	9002      	str	r0, [sp, #8]
 8005f3e:	f7fa fdf5 	bl	8000b2c <__addsf3>
 8005f42:	4651      	mov	r1, sl
 8005f44:	f7fa fdf2 	bl	8000b2c <__addsf3>
 8005f48:	f420 667f 	bic.w	r6, r0, #4080	; 0xff0
 8005f4c:	f026 060f 	bic.w	r6, r6, #15
 8005f50:	4631      	mov	r1, r6
 8005f52:	4640      	mov	r0, r8
 8005f54:	f7fa fef2 	bl	8000d3c <__aeabi_fmul>
 8005f58:	493c      	ldr	r1, [pc, #240]	; (800604c <__ieee754_powf+0x4b0>)
 8005f5a:	4680      	mov	r8, r0
 8005f5c:	4630      	mov	r0, r6
 8005f5e:	f7fa fde3 	bl	8000b28 <__aeabi_fsub>
 8005f62:	9b02      	ldr	r3, [sp, #8]
 8005f64:	4619      	mov	r1, r3
 8005f66:	f7fa fddf 	bl	8000b28 <__aeabi_fsub>
 8005f6a:	4601      	mov	r1, r0
 8005f6c:	4650      	mov	r0, sl
 8005f6e:	f7fa fddb 	bl	8000b28 <__aeabi_fsub>
 8005f72:	4649      	mov	r1, r9
 8005f74:	f7fa fee2 	bl	8000d3c <__aeabi_fmul>
 8005f78:	4659      	mov	r1, fp
 8005f7a:	4681      	mov	r9, r0
 8005f7c:	4630      	mov	r0, r6
 8005f7e:	f7fa fedd 	bl	8000d3c <__aeabi_fmul>
 8005f82:	4601      	mov	r1, r0
 8005f84:	4648      	mov	r0, r9
 8005f86:	f7fa fdd1 	bl	8000b2c <__addsf3>
 8005f8a:	4682      	mov	sl, r0
 8005f8c:	4601      	mov	r1, r0
 8005f8e:	4640      	mov	r0, r8
 8005f90:	f7fa fdcc 	bl	8000b2c <__addsf3>
 8005f94:	f420 697f 	bic.w	r9, r0, #4080	; 0xff0
 8005f98:	f029 090f 	bic.w	r9, r9, #15
 8005f9c:	492c      	ldr	r1, [pc, #176]	; (8006050 <__ieee754_powf+0x4b4>)
 8005f9e:	4648      	mov	r0, r9
 8005fa0:	f7fa fecc 	bl	8000d3c <__aeabi_fmul>
 8005fa4:	4641      	mov	r1, r8
 8005fa6:	4606      	mov	r6, r0
 8005fa8:	4648      	mov	r0, r9
 8005faa:	f7fa fdbd 	bl	8000b28 <__aeabi_fsub>
 8005fae:	4601      	mov	r1, r0
 8005fb0:	4650      	mov	r0, sl
 8005fb2:	f7fa fdb9 	bl	8000b28 <__aeabi_fsub>
 8005fb6:	4927      	ldr	r1, [pc, #156]	; (8006054 <__ieee754_powf+0x4b8>)
 8005fb8:	f7fa fec0 	bl	8000d3c <__aeabi_fmul>
 8005fbc:	4926      	ldr	r1, [pc, #152]	; (8006058 <__ieee754_powf+0x4bc>)
 8005fbe:	4680      	mov	r8, r0
 8005fc0:	4648      	mov	r0, r9
 8005fc2:	f7fa febb 	bl	8000d3c <__aeabi_fmul>
 8005fc6:	4601      	mov	r1, r0
 8005fc8:	4640      	mov	r0, r8
 8005fca:	f7fa fdaf 	bl	8000b2c <__addsf3>
 8005fce:	4b23      	ldr	r3, [pc, #140]	; (800605c <__ieee754_powf+0x4c0>)
 8005fd0:	f853 1027 	ldr.w	r1, [r3, r7, lsl #2]
 8005fd4:	f7fa fdaa 	bl	8000b2c <__addsf3>
 8005fd8:	9a05      	ldr	r2, [sp, #20]
 8005fda:	4680      	mov	r8, r0
 8005fdc:	4610      	mov	r0, r2
 8005fde:	f7fa fe59 	bl	8000c94 <__aeabi_i2f>
 8005fe2:	4681      	mov	r9, r0
 8005fe4:	4b1e      	ldr	r3, [pc, #120]	; (8006060 <__ieee754_powf+0x4c4>)
 8005fe6:	4641      	mov	r1, r8
 8005fe8:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 8005fec:	4630      	mov	r0, r6
 8005fee:	f7fa fd9d 	bl	8000b2c <__addsf3>
 8005ff2:	4639      	mov	r1, r7
 8005ff4:	f7fa fd9a 	bl	8000b2c <__addsf3>
 8005ff8:	4649      	mov	r1, r9
 8005ffa:	f7fa fd97 	bl	8000b2c <__addsf3>
 8005ffe:	f420 6a7f 	bic.w	sl, r0, #4080	; 0xff0
 8006002:	f02a 0a0f 	bic.w	sl, sl, #15
 8006006:	4649      	mov	r1, r9
 8006008:	4650      	mov	r0, sl
 800600a:	f7fa fd8d 	bl	8000b28 <__aeabi_fsub>
 800600e:	4639      	mov	r1, r7
 8006010:	f7fa fd8a 	bl	8000b28 <__aeabi_fsub>
 8006014:	4631      	mov	r1, r6
 8006016:	f7fa fd87 	bl	8000b28 <__aeabi_fsub>
 800601a:	4601      	mov	r1, r0
 800601c:	4640      	mov	r0, r8
 800601e:	e6a4      	b.n	8005d6a <__ieee754_powf+0x1ce>
 8006020:	2200      	movs	r2, #0
 8006022:	e6fa      	b.n	8005e1a <__ieee754_powf+0x27e>
 8006024:	2701      	movs	r7, #1
 8006026:	e70a      	b.n	8005e3e <__ieee754_powf+0x2a2>
 8006028:	001cc471 	.word	0x001cc471
 800602c:	005db3d6 	.word	0x005db3d6
 8006030:	08006784 	.word	0x08006784
 8006034:	3e53f142 	.word	0x3e53f142
 8006038:	3e6c3255 	.word	0x3e6c3255
 800603c:	3e8ba305 	.word	0x3e8ba305
 8006040:	3eaaaaab 	.word	0x3eaaaaab
 8006044:	3edb6db7 	.word	0x3edb6db7
 8006048:	3f19999a 	.word	0x3f19999a
 800604c:	40400000 	.word	0x40400000
 8006050:	3f763800 	.word	0x3f763800
 8006054:	3f76384f 	.word	0x3f76384f
 8006058:	369dc3a0 	.word	0x369dc3a0
 800605c:	08006794 	.word	0x08006794
 8006060:	0800678c 	.word	0x0800678c
 8006064:	f040 80c1 	bne.w	80061ea <__ieee754_powf+0x64e>
 8006068:	4966      	ldr	r1, [pc, #408]	; (8006204 <__ieee754_powf+0x668>)
 800606a:	4630      	mov	r0, r6
 800606c:	f7fa fd5e 	bl	8000b2c <__addsf3>
 8006070:	4639      	mov	r1, r7
 8006072:	4681      	mov	r9, r0
 8006074:	4650      	mov	r0, sl
 8006076:	f7fa fd57 	bl	8000b28 <__aeabi_fsub>
 800607a:	4601      	mov	r1, r0
 800607c:	4648      	mov	r0, r9
 800607e:	f7fb f819 	bl	80010b4 <__aeabi_fcmpgt>
 8006082:	2800      	cmp	r0, #0
 8006084:	f47f aea5 	bne.w	8005dd2 <__ieee754_powf+0x236>
 8006088:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
 800608c:	15e4      	asrs	r4, r4, #23
 800608e:	3c7e      	subs	r4, #126	; 0x7e
 8006090:	4123      	asrs	r3, r4
 8006092:	4443      	add	r3, r8
 8006094:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8006098:	495b      	ldr	r1, [pc, #364]	; (8006208 <__ieee754_powf+0x66c>)
 800609a:	3a7f      	subs	r2, #127	; 0x7f
 800609c:	f3c3 0416 	ubfx	r4, r3, #0, #23
 80060a0:	4111      	asrs	r1, r2
 80060a2:	f444 0400 	orr.w	r4, r4, #8388608	; 0x800000
 80060a6:	f1c2 0217 	rsb	r2, r2, #23
 80060aa:	4114      	asrs	r4, r2
 80060ac:	f1b8 0f00 	cmp.w	r8, #0
 80060b0:	ea23 0101 	bic.w	r1, r3, r1
 80060b4:	4638      	mov	r0, r7
 80060b6:	bfb8      	it	lt
 80060b8:	4264      	neglt	r4, r4
 80060ba:	f7fa fd35 	bl	8000b28 <__aeabi_fsub>
 80060be:	4681      	mov	r9, r0
 80060c0:	4631      	mov	r1, r6
 80060c2:	4648      	mov	r0, r9
 80060c4:	f7fa fd32 	bl	8000b2c <__addsf3>
 80060c8:	f420 677f 	bic.w	r7, r0, #4080	; 0xff0
 80060cc:	f027 070f 	bic.w	r7, r7, #15
 80060d0:	494e      	ldr	r1, [pc, #312]	; (800620c <__ieee754_powf+0x670>)
 80060d2:	4638      	mov	r0, r7
 80060d4:	f7fa fe32 	bl	8000d3c <__aeabi_fmul>
 80060d8:	4649      	mov	r1, r9
 80060da:	4680      	mov	r8, r0
 80060dc:	4638      	mov	r0, r7
 80060de:	f7fa fd23 	bl	8000b28 <__aeabi_fsub>
 80060e2:	4601      	mov	r1, r0
 80060e4:	4630      	mov	r0, r6
 80060e6:	f7fa fd1f 	bl	8000b28 <__aeabi_fsub>
 80060ea:	4949      	ldr	r1, [pc, #292]	; (8006210 <__ieee754_powf+0x674>)
 80060ec:	f7fa fe26 	bl	8000d3c <__aeabi_fmul>
 80060f0:	4948      	ldr	r1, [pc, #288]	; (8006214 <__ieee754_powf+0x678>)
 80060f2:	4606      	mov	r6, r0
 80060f4:	4638      	mov	r0, r7
 80060f6:	f7fa fe21 	bl	8000d3c <__aeabi_fmul>
 80060fa:	4601      	mov	r1, r0
 80060fc:	4630      	mov	r0, r6
 80060fe:	f7fa fd15 	bl	8000b2c <__addsf3>
 8006102:	4607      	mov	r7, r0
 8006104:	4601      	mov	r1, r0
 8006106:	4640      	mov	r0, r8
 8006108:	f7fa fd10 	bl	8000b2c <__addsf3>
 800610c:	4641      	mov	r1, r8
 800610e:	4606      	mov	r6, r0
 8006110:	f7fa fd0a 	bl	8000b28 <__aeabi_fsub>
 8006114:	4601      	mov	r1, r0
 8006116:	4638      	mov	r0, r7
 8006118:	f7fa fd06 	bl	8000b28 <__aeabi_fsub>
 800611c:	4631      	mov	r1, r6
 800611e:	4680      	mov	r8, r0
 8006120:	4630      	mov	r0, r6
 8006122:	f7fa fe0b 	bl	8000d3c <__aeabi_fmul>
 8006126:	4607      	mov	r7, r0
 8006128:	493b      	ldr	r1, [pc, #236]	; (8006218 <__ieee754_powf+0x67c>)
 800612a:	f7fa fe07 	bl	8000d3c <__aeabi_fmul>
 800612e:	493b      	ldr	r1, [pc, #236]	; (800621c <__ieee754_powf+0x680>)
 8006130:	f7fa fcfa 	bl	8000b28 <__aeabi_fsub>
 8006134:	4639      	mov	r1, r7
 8006136:	f7fa fe01 	bl	8000d3c <__aeabi_fmul>
 800613a:	4939      	ldr	r1, [pc, #228]	; (8006220 <__ieee754_powf+0x684>)
 800613c:	f7fa fcf6 	bl	8000b2c <__addsf3>
 8006140:	4639      	mov	r1, r7
 8006142:	f7fa fdfb 	bl	8000d3c <__aeabi_fmul>
 8006146:	4937      	ldr	r1, [pc, #220]	; (8006224 <__ieee754_powf+0x688>)
 8006148:	f7fa fcee 	bl	8000b28 <__aeabi_fsub>
 800614c:	4639      	mov	r1, r7
 800614e:	f7fa fdf5 	bl	8000d3c <__aeabi_fmul>
 8006152:	4935      	ldr	r1, [pc, #212]	; (8006228 <__ieee754_powf+0x68c>)
 8006154:	f7fa fcea 	bl	8000b2c <__addsf3>
 8006158:	4639      	mov	r1, r7
 800615a:	f7fa fdef 	bl	8000d3c <__aeabi_fmul>
 800615e:	4601      	mov	r1, r0
 8006160:	4630      	mov	r0, r6
 8006162:	f7fa fce1 	bl	8000b28 <__aeabi_fsub>
 8006166:	4607      	mov	r7, r0
 8006168:	4601      	mov	r1, r0
 800616a:	4630      	mov	r0, r6
 800616c:	f7fa fde6 	bl	8000d3c <__aeabi_fmul>
 8006170:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 8006174:	4681      	mov	r9, r0
 8006176:	4638      	mov	r0, r7
 8006178:	f7fa fcd6 	bl	8000b28 <__aeabi_fsub>
 800617c:	4601      	mov	r1, r0
 800617e:	4648      	mov	r0, r9
 8006180:	f7fa fe90 	bl	8000ea4 <__aeabi_fdiv>
 8006184:	4641      	mov	r1, r8
 8006186:	4607      	mov	r7, r0
 8006188:	4630      	mov	r0, r6
 800618a:	f7fa fdd7 	bl	8000d3c <__aeabi_fmul>
 800618e:	4641      	mov	r1, r8
 8006190:	f7fa fccc 	bl	8000b2c <__addsf3>
 8006194:	4601      	mov	r1, r0
 8006196:	4638      	mov	r0, r7
 8006198:	f7fa fcc6 	bl	8000b28 <__aeabi_fsub>
 800619c:	4631      	mov	r1, r6
 800619e:	f7fa fcc3 	bl	8000b28 <__aeabi_fsub>
 80061a2:	4601      	mov	r1, r0
 80061a4:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
 80061a8:	f7fa fcbe 	bl	8000b28 <__aeabi_fsub>
 80061ac:	eb00 53c4 	add.w	r3, r0, r4, lsl #23
 80061b0:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 80061b4:	da1f      	bge.n	80061f6 <__ieee754_powf+0x65a>
 80061b6:	4621      	mov	r1, r4
 80061b8:	f000 f928 	bl	800640c <scalbnf>
 80061bc:	4629      	mov	r1, r5
 80061be:	e54a      	b.n	8005c56 <__ieee754_powf+0xba>
 80061c0:	4b1a      	ldr	r3, [pc, #104]	; (800622c <__ieee754_powf+0x690>)
 80061c2:	429c      	cmp	r4, r3
 80061c4:	dd05      	ble.n	80061d2 <__ieee754_powf+0x636>
 80061c6:	491a      	ldr	r1, [pc, #104]	; (8006230 <__ieee754_powf+0x694>)
 80061c8:	4628      	mov	r0, r5
 80061ca:	f7fa fdb7 	bl	8000d3c <__aeabi_fmul>
 80061ce:	4918      	ldr	r1, [pc, #96]	; (8006230 <__ieee754_powf+0x694>)
 80061d0:	e541      	b.n	8005c56 <__ieee754_powf+0xba>
 80061d2:	d10a      	bne.n	80061ea <__ieee754_powf+0x64e>
 80061d4:	4639      	mov	r1, r7
 80061d6:	f7fa fca7 	bl	8000b28 <__aeabi_fsub>
 80061da:	4601      	mov	r1, r0
 80061dc:	4630      	mov	r0, r6
 80061de:	f7fa ff55 	bl	800108c <__aeabi_fcmple>
 80061e2:	2800      	cmp	r0, #0
 80061e4:	f43f af50 	beq.w	8006088 <__ieee754_powf+0x4ec>
 80061e8:	e7ed      	b.n	80061c6 <__ieee754_powf+0x62a>
 80061ea:	f1b4 5f7c 	cmp.w	r4, #1056964608	; 0x3f000000
 80061ee:	f73f af4b 	bgt.w	8006088 <__ieee754_powf+0x4ec>
 80061f2:	2400      	movs	r4, #0
 80061f4:	e764      	b.n	80060c0 <__ieee754_powf+0x524>
 80061f6:	4618      	mov	r0, r3
 80061f8:	e7e0      	b.n	80061bc <__ieee754_powf+0x620>
 80061fa:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
 80061fe:	e517      	b.n	8005c30 <__ieee754_powf+0x94>
 8006200:	9901      	ldr	r1, [sp, #4]
 8006202:	e515      	b.n	8005c30 <__ieee754_powf+0x94>
 8006204:	3338aa3c 	.word	0x3338aa3c
 8006208:	007fffff 	.word	0x007fffff
 800620c:	3f317200 	.word	0x3f317200
 8006210:	3f317218 	.word	0x3f317218
 8006214:	35bfbe8c 	.word	0x35bfbe8c
 8006218:	3331bb4c 	.word	0x3331bb4c
 800621c:	35ddea0e 	.word	0x35ddea0e
 8006220:	388ab355 	.word	0x388ab355
 8006224:	3b360b61 	.word	0x3b360b61
 8006228:	3e2aaaab 	.word	0x3e2aaaab
 800622c:	43160000 	.word	0x43160000
 8006230:	0da24260 	.word	0x0da24260

08006234 <__ieee754_sqrtf>:
 8006234:	f020 4200 	bic.w	r2, r0, #2147483648	; 0x80000000
 8006238:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 800623c:	b570      	push	{r4, r5, r6, lr}
 800623e:	4603      	mov	r3, r0
 8006240:	4604      	mov	r4, r0
 8006242:	d309      	bcc.n	8006258 <__ieee754_sqrtf+0x24>
 8006244:	4601      	mov	r1, r0
 8006246:	f7fa fd79 	bl	8000d3c <__aeabi_fmul>
 800624a:	4601      	mov	r1, r0
 800624c:	4620      	mov	r0, r4
 800624e:	f7fa fc6d 	bl	8000b2c <__addsf3>
 8006252:	4604      	mov	r4, r0
 8006254:	4620      	mov	r0, r4
 8006256:	bd70      	pop	{r4, r5, r6, pc}
 8006258:	2a00      	cmp	r2, #0
 800625a:	d0fb      	beq.n	8006254 <__ieee754_sqrtf+0x20>
 800625c:	2800      	cmp	r0, #0
 800625e:	da06      	bge.n	800626e <__ieee754_sqrtf+0x3a>
 8006260:	4601      	mov	r1, r0
 8006262:	f7fa fc61 	bl	8000b28 <__aeabi_fsub>
 8006266:	4601      	mov	r1, r0
 8006268:	f7fa fe1c 	bl	8000ea4 <__aeabi_fdiv>
 800626c:	e7f1      	b.n	8006252 <__ieee754_sqrtf+0x1e>
 800626e:	f5b2 0f00 	cmp.w	r2, #8388608	; 0x800000
 8006272:	ea4f 54e0 	mov.w	r4, r0, asr #23
 8006276:	d204      	bcs.n	8006282 <__ieee754_sqrtf+0x4e>
 8006278:	2200      	movs	r2, #0
 800627a:	0219      	lsls	r1, r3, #8
 800627c:	d529      	bpl.n	80062d2 <__ieee754_sqrtf+0x9e>
 800627e:	3a01      	subs	r2, #1
 8006280:	1aa4      	subs	r4, r4, r2
 8006282:	3c7f      	subs	r4, #127	; 0x7f
 8006284:	07e2      	lsls	r2, r4, #31
 8006286:	f04f 0200 	mov.w	r2, #0
 800628a:	ea4f 0164 	mov.w	r1, r4, asr #1
 800628e:	4616      	mov	r6, r2
 8006290:	f04f 0419 	mov.w	r4, #25
 8006294:	f04f 7080 	mov.w	r0, #16777216	; 0x1000000
 8006298:	f3c3 0316 	ubfx	r3, r3, #0, #23
 800629c:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80062a0:	bf48      	it	mi
 80062a2:	005b      	lslmi	r3, r3, #1
 80062a4:	005b      	lsls	r3, r3, #1
 80062a6:	1835      	adds	r5, r6, r0
 80062a8:	429d      	cmp	r5, r3
 80062aa:	bfde      	ittt	le
 80062ac:	182e      	addle	r6, r5, r0
 80062ae:	1b5b      	suble	r3, r3, r5
 80062b0:	1812      	addle	r2, r2, r0
 80062b2:	3c01      	subs	r4, #1
 80062b4:	ea4f 0343 	mov.w	r3, r3, lsl #1
 80062b8:	ea4f 0050 	mov.w	r0, r0, lsr #1
 80062bc:	d1f3      	bne.n	80062a6 <__ieee754_sqrtf+0x72>
 80062be:	b113      	cbz	r3, 80062c6 <__ieee754_sqrtf+0x92>
 80062c0:	3201      	adds	r2, #1
 80062c2:	f022 0201 	bic.w	r2, r2, #1
 80062c6:	1054      	asrs	r4, r2, #1
 80062c8:	f104 547c 	add.w	r4, r4, #1056964608	; 0x3f000000
 80062cc:	eb04 54c1 	add.w	r4, r4, r1, lsl #23
 80062d0:	e7c0      	b.n	8006254 <__ieee754_sqrtf+0x20>
 80062d2:	005b      	lsls	r3, r3, #1
 80062d4:	3201      	adds	r2, #1
 80062d6:	e7d0      	b.n	800627a <__ieee754_sqrtf+0x46>

080062d8 <matherr>:
 80062d8:	2000      	movs	r0, #0
 80062da:	4770      	bx	lr

080062dc <rint>:
 80062dc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80062de:	f3c1 5e0a 	ubfx	lr, r1, #20, #11
 80062e2:	f2ae 37ff 	subw	r7, lr, #1023	; 0x3ff
 80062e6:	2f13      	cmp	r7, #19
 80062e8:	4602      	mov	r2, r0
 80062ea:	460b      	mov	r3, r1
 80062ec:	4684      	mov	ip, r0
 80062ee:	460c      	mov	r4, r1
 80062f0:	4605      	mov	r5, r0
 80062f2:	ea4f 76d1 	mov.w	r6, r1, lsr #31
 80062f6:	dc56      	bgt.n	80063a6 <rint+0xca>
 80062f8:	2f00      	cmp	r7, #0
 80062fa:	da29      	bge.n	8006350 <rint+0x74>
 80062fc:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8006300:	4301      	orrs	r1, r0
 8006302:	d021      	beq.n	8006348 <rint+0x6c>
 8006304:	f3c3 0513 	ubfx	r5, r3, #0, #20
 8006308:	4305      	orrs	r5, r0
 800630a:	426b      	negs	r3, r5
 800630c:	432b      	orrs	r3, r5
 800630e:	0b1b      	lsrs	r3, r3, #12
 8006310:	0c64      	lsrs	r4, r4, #17
 8006312:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8006316:	0464      	lsls	r4, r4, #17
 8006318:	ea43 0104 	orr.w	r1, r3, r4
 800631c:	4b31      	ldr	r3, [pc, #196]	; (80063e4 <rint+0x108>)
 800631e:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 8006322:	e9d3 4500 	ldrd	r4, r5, [r3]
 8006326:	4622      	mov	r2, r4
 8006328:	462b      	mov	r3, r5
 800632a:	f7f9 ff1f 	bl	800016c <__adddf3>
 800632e:	e9cd 0100 	strd	r0, r1, [sp]
 8006332:	e9dd 0100 	ldrd	r0, r1, [sp]
 8006336:	4622      	mov	r2, r4
 8006338:	462b      	mov	r3, r5
 800633a:	f7f9 ff15 	bl	8000168 <__aeabi_dsub>
 800633e:	4602      	mov	r2, r0
 8006340:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8006344:	ea41 73c6 	orr.w	r3, r1, r6, lsl #31
 8006348:	4610      	mov	r0, r2
 800634a:	4619      	mov	r1, r3
 800634c:	b003      	add	sp, #12
 800634e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006350:	4925      	ldr	r1, [pc, #148]	; (80063e8 <rint+0x10c>)
 8006352:	4139      	asrs	r1, r7
 8006354:	ea03 0001 	and.w	r0, r3, r1
 8006358:	4310      	orrs	r0, r2
 800635a:	d0f5      	beq.n	8006348 <rint+0x6c>
 800635c:	084b      	lsrs	r3, r1, #1
 800635e:	ea04 0203 	and.w	r2, r4, r3
 8006362:	ea52 050c 	orrs.w	r5, r2, ip
 8006366:	d00a      	beq.n	800637e <rint+0xa2>
 8006368:	ea24 0303 	bic.w	r3, r4, r3
 800636c:	f44f 2480 	mov.w	r4, #262144	; 0x40000
 8006370:	2f13      	cmp	r7, #19
 8006372:	bf0c      	ite	eq
 8006374:	f04f 4500 	moveq.w	r5, #2147483648	; 0x80000000
 8006378:	2500      	movne	r5, #0
 800637a:	413c      	asrs	r4, r7
 800637c:	431c      	orrs	r4, r3
 800637e:	4b19      	ldr	r3, [pc, #100]	; (80063e4 <rint+0x108>)
 8006380:	4621      	mov	r1, r4
 8006382:	eb03 06c6 	add.w	r6, r3, r6, lsl #3
 8006386:	4628      	mov	r0, r5
 8006388:	e9d6 4500 	ldrd	r4, r5, [r6]
 800638c:	4622      	mov	r2, r4
 800638e:	462b      	mov	r3, r5
 8006390:	f7f9 feec 	bl	800016c <__adddf3>
 8006394:	e9cd 0100 	strd	r0, r1, [sp]
 8006398:	e9dd 0100 	ldrd	r0, r1, [sp]
 800639c:	4622      	mov	r2, r4
 800639e:	462b      	mov	r3, r5
 80063a0:	f7f9 fee2 	bl	8000168 <__aeabi_dsub>
 80063a4:	e006      	b.n	80063b4 <rint+0xd8>
 80063a6:	2f33      	cmp	r7, #51	; 0x33
 80063a8:	dd07      	ble.n	80063ba <rint+0xde>
 80063aa:	f5b7 6f80 	cmp.w	r7, #1024	; 0x400
 80063ae:	d1cb      	bne.n	8006348 <rint+0x6c>
 80063b0:	f7f9 fedc 	bl	800016c <__adddf3>
 80063b4:	4602      	mov	r2, r0
 80063b6:	460b      	mov	r3, r1
 80063b8:	e7c6      	b.n	8006348 <rint+0x6c>
 80063ba:	f04f 31ff 	mov.w	r1, #4294967295
 80063be:	f2ae 4e13 	subw	lr, lr, #1043	; 0x413
 80063c2:	fa21 f10e 	lsr.w	r1, r1, lr
 80063c6:	4208      	tst	r0, r1
 80063c8:	d0be      	beq.n	8006348 <rint+0x6c>
 80063ca:	084b      	lsrs	r3, r1, #1
 80063cc:	4218      	tst	r0, r3
 80063ce:	bf1f      	itttt	ne
 80063d0:	f04f 4580 	movne.w	r5, #1073741824	; 0x40000000
 80063d4:	ea20 0303 	bicne.w	r3, r0, r3
 80063d8:	fa45 fe0e 	asrne.w	lr, r5, lr
 80063dc:	ea4e 0503 	orrne.w	r5, lr, r3
 80063e0:	e7cd      	b.n	800637e <rint+0xa2>
 80063e2:	bf00      	nop
 80063e4:	080067a0 	.word	0x080067a0
 80063e8:	000fffff 	.word	0x000fffff

080063ec <fabsf>:
 80063ec:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
 80063f0:	4770      	bx	lr

080063f2 <finitef>:
 80063f2:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
 80063f6:	f1b0 4fff 	cmp.w	r0, #2139095040	; 0x7f800000
 80063fa:	bfac      	ite	ge
 80063fc:	2000      	movge	r0, #0
 80063fe:	2001      	movlt	r0, #1
 8006400:	4770      	bx	lr
	...

08006404 <nanf>:
 8006404:	4800      	ldr	r0, [pc, #0]	; (8006408 <nanf+0x4>)
 8006406:	4770      	bx	lr
 8006408:	7fc00000 	.word	0x7fc00000

0800640c <scalbnf>:
 800640c:	f030 4300 	bics.w	r3, r0, #2147483648	; 0x80000000
 8006410:	b510      	push	{r4, lr}
 8006412:	4602      	mov	r2, r0
 8006414:	460c      	mov	r4, r1
 8006416:	d028      	beq.n	800646a <scalbnf+0x5e>
 8006418:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 800641c:	d304      	bcc.n	8006428 <scalbnf+0x1c>
 800641e:	4601      	mov	r1, r0
 8006420:	f7fa fb84 	bl	8000b2c <__addsf3>
 8006424:	4602      	mov	r2, r0
 8006426:	e020      	b.n	800646a <scalbnf+0x5e>
 8006428:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 800642c:	d215      	bcs.n	800645a <scalbnf+0x4e>
 800642e:	f04f 4198 	mov.w	r1, #1275068416	; 0x4c000000
 8006432:	f7fa fc83 	bl	8000d3c <__aeabi_fmul>
 8006436:	4b18      	ldr	r3, [pc, #96]	; (8006498 <scalbnf+0x8c>)
 8006438:	4602      	mov	r2, r0
 800643a:	429c      	cmp	r4, r3
 800643c:	db22      	blt.n	8006484 <scalbnf+0x78>
 800643e:	f3c0 53c7 	ubfx	r3, r0, #23, #8
 8006442:	3b19      	subs	r3, #25
 8006444:	4423      	add	r3, r4
 8006446:	2bfe      	cmp	r3, #254	; 0xfe
 8006448:	dd09      	ble.n	800645e <scalbnf+0x52>
 800644a:	4611      	mov	r1, r2
 800644c:	4813      	ldr	r0, [pc, #76]	; (800649c <scalbnf+0x90>)
 800644e:	f000 f829 	bl	80064a4 <copysignf>
 8006452:	4912      	ldr	r1, [pc, #72]	; (800649c <scalbnf+0x90>)
 8006454:	f7fa fc72 	bl	8000d3c <__aeabi_fmul>
 8006458:	e7e4      	b.n	8006424 <scalbnf+0x18>
 800645a:	0ddb      	lsrs	r3, r3, #23
 800645c:	e7f2      	b.n	8006444 <scalbnf+0x38>
 800645e:	2b00      	cmp	r3, #0
 8006460:	dd05      	ble.n	800646e <scalbnf+0x62>
 8006462:	f020 40ff 	bic.w	r0, r0, #2139095040	; 0x7f800000
 8006466:	ea40 52c3 	orr.w	r2, r0, r3, lsl #23
 800646a:	4610      	mov	r0, r2
 800646c:	bd10      	pop	{r4, pc}
 800646e:	f113 0f16 	cmn.w	r3, #22
 8006472:	da09      	bge.n	8006488 <scalbnf+0x7c>
 8006474:	f24c 3350 	movw	r3, #50000	; 0xc350
 8006478:	429c      	cmp	r4, r3
 800647a:	4611      	mov	r1, r2
 800647c:	dce6      	bgt.n	800644c <scalbnf+0x40>
 800647e:	4808      	ldr	r0, [pc, #32]	; (80064a0 <scalbnf+0x94>)
 8006480:	f000 f810 	bl	80064a4 <copysignf>
 8006484:	4906      	ldr	r1, [pc, #24]	; (80064a0 <scalbnf+0x94>)
 8006486:	e7e5      	b.n	8006454 <scalbnf+0x48>
 8006488:	3319      	adds	r3, #25
 800648a:	f020 40ff 	bic.w	r0, r0, #2139095040	; 0x7f800000
 800648e:	f04f 514c 	mov.w	r1, #855638016	; 0x33000000
 8006492:	ea40 50c3 	orr.w	r0, r0, r3, lsl #23
 8006496:	e7dd      	b.n	8006454 <scalbnf+0x48>
 8006498:	ffff3cb0 	.word	0xffff3cb0
 800649c:	7149f2ca 	.word	0x7149f2ca
 80064a0:	0da24260 	.word	0x0da24260

080064a4 <copysignf>:
 80064a4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80064a8:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
 80064ac:	4308      	orrs	r0, r1
 80064ae:	4770      	bx	lr

080064b0 <__errno>:
 80064b0:	4b01      	ldr	r3, [pc, #4]	; (80064b8 <__errno+0x8>)
 80064b2:	6818      	ldr	r0, [r3, #0]
 80064b4:	4770      	bx	lr
 80064b6:	bf00      	nop
 80064b8:	20000014 	.word	0x20000014

080064bc <_sbrk>:
 80064bc:	4b04      	ldr	r3, [pc, #16]	; (80064d0 <_sbrk+0x14>)
 80064be:	4602      	mov	r2, r0
 80064c0:	6819      	ldr	r1, [r3, #0]
 80064c2:	b909      	cbnz	r1, 80064c8 <_sbrk+0xc>
 80064c4:	4903      	ldr	r1, [pc, #12]	; (80064d4 <_sbrk+0x18>)
 80064c6:	6019      	str	r1, [r3, #0]
 80064c8:	6818      	ldr	r0, [r3, #0]
 80064ca:	4402      	add	r2, r0
 80064cc:	601a      	str	r2, [r3, #0]
 80064ce:	4770      	bx	lr
 80064d0:	200006e0 	.word	0x200006e0
 80064d4:	20000724 	.word	0x20000724

080064d8 <_init>:
 80064d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80064da:	bf00      	nop
 80064dc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80064de:	bc08      	pop	{r3}
 80064e0:	469e      	mov	lr, r3
 80064e2:	4770      	bx	lr

080064e4 <_fini>:
 80064e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80064e6:	bf00      	nop
 80064e8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80064ea:	bc08      	pop	{r3}
 80064ec:	469e      	mov	lr, r3
 80064ee:	4770      	bx	lr
