
lab3exc3.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000043a8  08000110  08000110  00010110  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000280  080044b8  080044b8  000144b8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM          00000008  08004738  08004738  00014738  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .init_array   00000004  08004740  08004740  00014740  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .fini_array   00000004  08004744  08004744  00014744  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .data         00000684  20000000  08004748  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .bss          00000064  20000684  08004dcc  00020684  2**2
                  ALLOC
  8 ._user_heap_stack 00000100  200006e8  08004dcc  000206e8  2**0
                  ALLOC
  9 .ARM.attributes 00000029  00000000  00000000  00020684  2**0
                  CONTENTS, READONLY
 10 .debug_info   00002d42  00000000  00000000  000206ad  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 00000a2d  00000000  00000000  000233ef  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_aranges 000003d0  00000000  00000000  00023e20  2**3
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000358  00000000  00000000  000241f0  2**3
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   0000173b  00000000  00000000  00024548  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    000013ca  00000000  00000000  00025c83  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .comment      0000007c  00000000  00000000  0002704d  2**0
                  CONTENTS, READONLY
 17 .debug_frame  00001998  00000000  00000000  000270cc  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	; (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	; (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	; (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	20000684 	.word	0x20000684
 800012c:	00000000 	.word	0x00000000
 8000130:	080044a0 	.word	0x080044a0

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	; (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	; (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	; (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	20000688 	.word	0x20000688
 800014c:	080044a0 	.word	0x080044a0

08000150 <strlen>:
 8000150:	4603      	mov	r3, r0
 8000152:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000156:	2a00      	cmp	r2, #0
 8000158:	d1fb      	bne.n	8000152 <strlen+0x2>
 800015a:	1a18      	subs	r0, r3, r0
 800015c:	3801      	subs	r0, #1
 800015e:	4770      	bx	lr

08000160 <__aeabi_drsub>:
 8000160:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000164:	e002      	b.n	800016c <__adddf3>
 8000166:	bf00      	nop

08000168 <__aeabi_dsub>:
 8000168:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800016c <__adddf3>:
 800016c:	b530      	push	{r4, r5, lr}
 800016e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000172:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000176:	ea94 0f05 	teq	r4, r5
 800017a:	bf08      	it	eq
 800017c:	ea90 0f02 	teqeq	r0, r2
 8000180:	bf1f      	itttt	ne
 8000182:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000186:	ea55 0c02 	orrsne.w	ip, r5, r2
 800018a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800018e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000192:	f000 80e2 	beq.w	800035a <__adddf3+0x1ee>
 8000196:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800019a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800019e:	bfb8      	it	lt
 80001a0:	426d      	neglt	r5, r5
 80001a2:	dd0c      	ble.n	80001be <__adddf3+0x52>
 80001a4:	442c      	add	r4, r5
 80001a6:	ea80 0202 	eor.w	r2, r0, r2
 80001aa:	ea81 0303 	eor.w	r3, r1, r3
 80001ae:	ea82 0000 	eor.w	r0, r2, r0
 80001b2:	ea83 0101 	eor.w	r1, r3, r1
 80001b6:	ea80 0202 	eor.w	r2, r0, r2
 80001ba:	ea81 0303 	eor.w	r3, r1, r3
 80001be:	2d36      	cmp	r5, #54	; 0x36
 80001c0:	bf88      	it	hi
 80001c2:	bd30      	pophi	{r4, r5, pc}
 80001c4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80001c8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80001cc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80001d0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80001d4:	d002      	beq.n	80001dc <__adddf3+0x70>
 80001d6:	4240      	negs	r0, r0
 80001d8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80001dc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 80001e0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80001e4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80001e8:	d002      	beq.n	80001f0 <__adddf3+0x84>
 80001ea:	4252      	negs	r2, r2
 80001ec:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80001f0:	ea94 0f05 	teq	r4, r5
 80001f4:	f000 80a7 	beq.w	8000346 <__adddf3+0x1da>
 80001f8:	f1a4 0401 	sub.w	r4, r4, #1
 80001fc:	f1d5 0e20 	rsbs	lr, r5, #32
 8000200:	db0d      	blt.n	800021e <__adddf3+0xb2>
 8000202:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000206:	fa22 f205 	lsr.w	r2, r2, r5
 800020a:	1880      	adds	r0, r0, r2
 800020c:	f141 0100 	adc.w	r1, r1, #0
 8000210:	fa03 f20e 	lsl.w	r2, r3, lr
 8000214:	1880      	adds	r0, r0, r2
 8000216:	fa43 f305 	asr.w	r3, r3, r5
 800021a:	4159      	adcs	r1, r3
 800021c:	e00e      	b.n	800023c <__adddf3+0xd0>
 800021e:	f1a5 0520 	sub.w	r5, r5, #32
 8000222:	f10e 0e20 	add.w	lr, lr, #32
 8000226:	2a01      	cmp	r2, #1
 8000228:	fa03 fc0e 	lsl.w	ip, r3, lr
 800022c:	bf28      	it	cs
 800022e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000232:	fa43 f305 	asr.w	r3, r3, r5
 8000236:	18c0      	adds	r0, r0, r3
 8000238:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800023c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000240:	d507      	bpl.n	8000252 <__adddf3+0xe6>
 8000242:	f04f 0e00 	mov.w	lr, #0
 8000246:	f1dc 0c00 	rsbs	ip, ip, #0
 800024a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800024e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000252:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000256:	d31b      	bcc.n	8000290 <__adddf3+0x124>
 8000258:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800025c:	d30c      	bcc.n	8000278 <__adddf3+0x10c>
 800025e:	0849      	lsrs	r1, r1, #1
 8000260:	ea5f 0030 	movs.w	r0, r0, rrx
 8000264:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000268:	f104 0401 	add.w	r4, r4, #1
 800026c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000270:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000274:	f080 809a 	bcs.w	80003ac <__adddf3+0x240>
 8000278:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800027c:	bf08      	it	eq
 800027e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000282:	f150 0000 	adcs.w	r0, r0, #0
 8000286:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800028a:	ea41 0105 	orr.w	r1, r1, r5
 800028e:	bd30      	pop	{r4, r5, pc}
 8000290:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000294:	4140      	adcs	r0, r0
 8000296:	eb41 0101 	adc.w	r1, r1, r1
 800029a:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 800029e:	f1a4 0401 	sub.w	r4, r4, #1
 80002a2:	d1e9      	bne.n	8000278 <__adddf3+0x10c>
 80002a4:	f091 0f00 	teq	r1, #0
 80002a8:	bf04      	itt	eq
 80002aa:	4601      	moveq	r1, r0
 80002ac:	2000      	moveq	r0, #0
 80002ae:	fab1 f381 	clz	r3, r1
 80002b2:	bf08      	it	eq
 80002b4:	3320      	addeq	r3, #32
 80002b6:	f1a3 030b 	sub.w	r3, r3, #11
 80002ba:	f1b3 0220 	subs.w	r2, r3, #32
 80002be:	da0c      	bge.n	80002da <__adddf3+0x16e>
 80002c0:	320c      	adds	r2, #12
 80002c2:	dd08      	ble.n	80002d6 <__adddf3+0x16a>
 80002c4:	f102 0c14 	add.w	ip, r2, #20
 80002c8:	f1c2 020c 	rsb	r2, r2, #12
 80002cc:	fa01 f00c 	lsl.w	r0, r1, ip
 80002d0:	fa21 f102 	lsr.w	r1, r1, r2
 80002d4:	e00c      	b.n	80002f0 <__adddf3+0x184>
 80002d6:	f102 0214 	add.w	r2, r2, #20
 80002da:	bfd8      	it	le
 80002dc:	f1c2 0c20 	rsble	ip, r2, #32
 80002e0:	fa01 f102 	lsl.w	r1, r1, r2
 80002e4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80002e8:	bfdc      	itt	le
 80002ea:	ea41 010c 	orrle.w	r1, r1, ip
 80002ee:	4090      	lslle	r0, r2
 80002f0:	1ae4      	subs	r4, r4, r3
 80002f2:	bfa2      	ittt	ge
 80002f4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80002f8:	4329      	orrge	r1, r5
 80002fa:	bd30      	popge	{r4, r5, pc}
 80002fc:	ea6f 0404 	mvn.w	r4, r4
 8000300:	3c1f      	subs	r4, #31
 8000302:	da1c      	bge.n	800033e <__adddf3+0x1d2>
 8000304:	340c      	adds	r4, #12
 8000306:	dc0e      	bgt.n	8000326 <__adddf3+0x1ba>
 8000308:	f104 0414 	add.w	r4, r4, #20
 800030c:	f1c4 0220 	rsb	r2, r4, #32
 8000310:	fa20 f004 	lsr.w	r0, r0, r4
 8000314:	fa01 f302 	lsl.w	r3, r1, r2
 8000318:	ea40 0003 	orr.w	r0, r0, r3
 800031c:	fa21 f304 	lsr.w	r3, r1, r4
 8000320:	ea45 0103 	orr.w	r1, r5, r3
 8000324:	bd30      	pop	{r4, r5, pc}
 8000326:	f1c4 040c 	rsb	r4, r4, #12
 800032a:	f1c4 0220 	rsb	r2, r4, #32
 800032e:	fa20 f002 	lsr.w	r0, r0, r2
 8000332:	fa01 f304 	lsl.w	r3, r1, r4
 8000336:	ea40 0003 	orr.w	r0, r0, r3
 800033a:	4629      	mov	r1, r5
 800033c:	bd30      	pop	{r4, r5, pc}
 800033e:	fa21 f004 	lsr.w	r0, r1, r4
 8000342:	4629      	mov	r1, r5
 8000344:	bd30      	pop	{r4, r5, pc}
 8000346:	f094 0f00 	teq	r4, #0
 800034a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800034e:	bf06      	itte	eq
 8000350:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000354:	3401      	addeq	r4, #1
 8000356:	3d01      	subne	r5, #1
 8000358:	e74e      	b.n	80001f8 <__adddf3+0x8c>
 800035a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800035e:	bf18      	it	ne
 8000360:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000364:	d029      	beq.n	80003ba <__adddf3+0x24e>
 8000366:	ea94 0f05 	teq	r4, r5
 800036a:	bf08      	it	eq
 800036c:	ea90 0f02 	teqeq	r0, r2
 8000370:	d005      	beq.n	800037e <__adddf3+0x212>
 8000372:	ea54 0c00 	orrs.w	ip, r4, r0
 8000376:	bf04      	itt	eq
 8000378:	4619      	moveq	r1, r3
 800037a:	4610      	moveq	r0, r2
 800037c:	bd30      	pop	{r4, r5, pc}
 800037e:	ea91 0f03 	teq	r1, r3
 8000382:	bf1e      	ittt	ne
 8000384:	2100      	movne	r1, #0
 8000386:	2000      	movne	r0, #0
 8000388:	bd30      	popne	{r4, r5, pc}
 800038a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800038e:	d105      	bne.n	800039c <__adddf3+0x230>
 8000390:	0040      	lsls	r0, r0, #1
 8000392:	4149      	adcs	r1, r1
 8000394:	bf28      	it	cs
 8000396:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800039a:	bd30      	pop	{r4, r5, pc}
 800039c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80003a0:	bf3c      	itt	cc
 80003a2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80003a6:	bd30      	popcc	{r4, r5, pc}
 80003a8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003ac:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80003b0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80003b4:	f04f 0000 	mov.w	r0, #0
 80003b8:	bd30      	pop	{r4, r5, pc}
 80003ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003be:	bf1a      	itte	ne
 80003c0:	4619      	movne	r1, r3
 80003c2:	4610      	movne	r0, r2
 80003c4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80003c8:	bf1c      	itt	ne
 80003ca:	460b      	movne	r3, r1
 80003cc:	4602      	movne	r2, r0
 80003ce:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80003d2:	bf06      	itte	eq
 80003d4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80003d8:	ea91 0f03 	teqeq	r1, r3
 80003dc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80003e0:	bd30      	pop	{r4, r5, pc}
 80003e2:	bf00      	nop

080003e4 <__aeabi_ui2d>:
 80003e4:	f090 0f00 	teq	r0, #0
 80003e8:	bf04      	itt	eq
 80003ea:	2100      	moveq	r1, #0
 80003ec:	4770      	bxeq	lr
 80003ee:	b530      	push	{r4, r5, lr}
 80003f0:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80003f4:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80003f8:	f04f 0500 	mov.w	r5, #0
 80003fc:	f04f 0100 	mov.w	r1, #0
 8000400:	e750      	b.n	80002a4 <__adddf3+0x138>
 8000402:	bf00      	nop

08000404 <__aeabi_i2d>:
 8000404:	f090 0f00 	teq	r0, #0
 8000408:	bf04      	itt	eq
 800040a:	2100      	moveq	r1, #0
 800040c:	4770      	bxeq	lr
 800040e:	b530      	push	{r4, r5, lr}
 8000410:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000414:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000418:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800041c:	bf48      	it	mi
 800041e:	4240      	negmi	r0, r0
 8000420:	f04f 0100 	mov.w	r1, #0
 8000424:	e73e      	b.n	80002a4 <__adddf3+0x138>
 8000426:	bf00      	nop

08000428 <__aeabi_f2d>:
 8000428:	0042      	lsls	r2, r0, #1
 800042a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800042e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000432:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000436:	bf1f      	itttt	ne
 8000438:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800043c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000440:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000444:	4770      	bxne	lr
 8000446:	f092 0f00 	teq	r2, #0
 800044a:	bf14      	ite	ne
 800044c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000450:	4770      	bxeq	lr
 8000452:	b530      	push	{r4, r5, lr}
 8000454:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000458:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800045c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000460:	e720      	b.n	80002a4 <__adddf3+0x138>
 8000462:	bf00      	nop

08000464 <__aeabi_ul2d>:
 8000464:	ea50 0201 	orrs.w	r2, r0, r1
 8000468:	bf08      	it	eq
 800046a:	4770      	bxeq	lr
 800046c:	b530      	push	{r4, r5, lr}
 800046e:	f04f 0500 	mov.w	r5, #0
 8000472:	e00a      	b.n	800048a <__aeabi_l2d+0x16>

08000474 <__aeabi_l2d>:
 8000474:	ea50 0201 	orrs.w	r2, r0, r1
 8000478:	bf08      	it	eq
 800047a:	4770      	bxeq	lr
 800047c:	b530      	push	{r4, r5, lr}
 800047e:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8000482:	d502      	bpl.n	800048a <__aeabi_l2d+0x16>
 8000484:	4240      	negs	r0, r0
 8000486:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800048a:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800048e:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000492:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000496:	f43f aedc 	beq.w	8000252 <__adddf3+0xe6>
 800049a:	f04f 0203 	mov.w	r2, #3
 800049e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004a2:	bf18      	it	ne
 80004a4:	3203      	addne	r2, #3
 80004a6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004aa:	bf18      	it	ne
 80004ac:	3203      	addne	r2, #3
 80004ae:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004b2:	f1c2 0320 	rsb	r3, r2, #32
 80004b6:	fa00 fc03 	lsl.w	ip, r0, r3
 80004ba:	fa20 f002 	lsr.w	r0, r0, r2
 80004be:	fa01 fe03 	lsl.w	lr, r1, r3
 80004c2:	ea40 000e 	orr.w	r0, r0, lr
 80004c6:	fa21 f102 	lsr.w	r1, r1, r2
 80004ca:	4414      	add	r4, r2
 80004cc:	e6c1      	b.n	8000252 <__adddf3+0xe6>
 80004ce:	bf00      	nop

080004d0 <__aeabi_dmul>:
 80004d0:	b570      	push	{r4, r5, r6, lr}
 80004d2:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80004d6:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80004da:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80004de:	bf1d      	ittte	ne
 80004e0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80004e4:	ea94 0f0c 	teqne	r4, ip
 80004e8:	ea95 0f0c 	teqne	r5, ip
 80004ec:	f000 f8de 	bleq	80006ac <__aeabi_dmul+0x1dc>
 80004f0:	442c      	add	r4, r5
 80004f2:	ea81 0603 	eor.w	r6, r1, r3
 80004f6:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80004fa:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80004fe:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8000502:	bf18      	it	ne
 8000504:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000508:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800050c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000510:	d038      	beq.n	8000584 <__aeabi_dmul+0xb4>
 8000512:	fba0 ce02 	umull	ip, lr, r0, r2
 8000516:	f04f 0500 	mov.w	r5, #0
 800051a:	fbe1 e502 	umlal	lr, r5, r1, r2
 800051e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 8000522:	fbe0 e503 	umlal	lr, r5, r0, r3
 8000526:	f04f 0600 	mov.w	r6, #0
 800052a:	fbe1 5603 	umlal	r5, r6, r1, r3
 800052e:	f09c 0f00 	teq	ip, #0
 8000532:	bf18      	it	ne
 8000534:	f04e 0e01 	orrne.w	lr, lr, #1
 8000538:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 800053c:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000540:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 8000544:	d204      	bcs.n	8000550 <__aeabi_dmul+0x80>
 8000546:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 800054a:	416d      	adcs	r5, r5
 800054c:	eb46 0606 	adc.w	r6, r6, r6
 8000550:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000554:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000558:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 800055c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000560:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8000564:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000568:	bf88      	it	hi
 800056a:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 800056e:	d81e      	bhi.n	80005ae <__aeabi_dmul+0xde>
 8000570:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 8000574:	bf08      	it	eq
 8000576:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 800057a:	f150 0000 	adcs.w	r0, r0, #0
 800057e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000582:	bd70      	pop	{r4, r5, r6, pc}
 8000584:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000588:	ea46 0101 	orr.w	r1, r6, r1
 800058c:	ea40 0002 	orr.w	r0, r0, r2
 8000590:	ea81 0103 	eor.w	r1, r1, r3
 8000594:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000598:	bfc2      	ittt	gt
 800059a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800059e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80005a2:	bd70      	popgt	{r4, r5, r6, pc}
 80005a4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80005a8:	f04f 0e00 	mov.w	lr, #0
 80005ac:	3c01      	subs	r4, #1
 80005ae:	f300 80ab 	bgt.w	8000708 <__aeabi_dmul+0x238>
 80005b2:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80005b6:	bfde      	ittt	le
 80005b8:	2000      	movle	r0, #0
 80005ba:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80005be:	bd70      	pople	{r4, r5, r6, pc}
 80005c0:	f1c4 0400 	rsb	r4, r4, #0
 80005c4:	3c20      	subs	r4, #32
 80005c6:	da35      	bge.n	8000634 <__aeabi_dmul+0x164>
 80005c8:	340c      	adds	r4, #12
 80005ca:	dc1b      	bgt.n	8000604 <__aeabi_dmul+0x134>
 80005cc:	f104 0414 	add.w	r4, r4, #20
 80005d0:	f1c4 0520 	rsb	r5, r4, #32
 80005d4:	fa00 f305 	lsl.w	r3, r0, r5
 80005d8:	fa20 f004 	lsr.w	r0, r0, r4
 80005dc:	fa01 f205 	lsl.w	r2, r1, r5
 80005e0:	ea40 0002 	orr.w	r0, r0, r2
 80005e4:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80005e8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005ec:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80005f0:	fa21 f604 	lsr.w	r6, r1, r4
 80005f4:	eb42 0106 	adc.w	r1, r2, r6
 80005f8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80005fc:	bf08      	it	eq
 80005fe:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000602:	bd70      	pop	{r4, r5, r6, pc}
 8000604:	f1c4 040c 	rsb	r4, r4, #12
 8000608:	f1c4 0520 	rsb	r5, r4, #32
 800060c:	fa00 f304 	lsl.w	r3, r0, r4
 8000610:	fa20 f005 	lsr.w	r0, r0, r5
 8000614:	fa01 f204 	lsl.w	r2, r1, r4
 8000618:	ea40 0002 	orr.w	r0, r0, r2
 800061c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000620:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000624:	f141 0100 	adc.w	r1, r1, #0
 8000628:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800062c:	bf08      	it	eq
 800062e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000632:	bd70      	pop	{r4, r5, r6, pc}
 8000634:	f1c4 0520 	rsb	r5, r4, #32
 8000638:	fa00 f205 	lsl.w	r2, r0, r5
 800063c:	ea4e 0e02 	orr.w	lr, lr, r2
 8000640:	fa20 f304 	lsr.w	r3, r0, r4
 8000644:	fa01 f205 	lsl.w	r2, r1, r5
 8000648:	ea43 0302 	orr.w	r3, r3, r2
 800064c:	fa21 f004 	lsr.w	r0, r1, r4
 8000650:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000654:	fa21 f204 	lsr.w	r2, r1, r4
 8000658:	ea20 0002 	bic.w	r0, r0, r2
 800065c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000660:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000664:	bf08      	it	eq
 8000666:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800066a:	bd70      	pop	{r4, r5, r6, pc}
 800066c:	f094 0f00 	teq	r4, #0
 8000670:	d10f      	bne.n	8000692 <__aeabi_dmul+0x1c2>
 8000672:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 8000676:	0040      	lsls	r0, r0, #1
 8000678:	eb41 0101 	adc.w	r1, r1, r1
 800067c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000680:	bf08      	it	eq
 8000682:	3c01      	subeq	r4, #1
 8000684:	d0f7      	beq.n	8000676 <__aeabi_dmul+0x1a6>
 8000686:	ea41 0106 	orr.w	r1, r1, r6
 800068a:	f095 0f00 	teq	r5, #0
 800068e:	bf18      	it	ne
 8000690:	4770      	bxne	lr
 8000692:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000696:	0052      	lsls	r2, r2, #1
 8000698:	eb43 0303 	adc.w	r3, r3, r3
 800069c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80006a0:	bf08      	it	eq
 80006a2:	3d01      	subeq	r5, #1
 80006a4:	d0f7      	beq.n	8000696 <__aeabi_dmul+0x1c6>
 80006a6:	ea43 0306 	orr.w	r3, r3, r6
 80006aa:	4770      	bx	lr
 80006ac:	ea94 0f0c 	teq	r4, ip
 80006b0:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80006b4:	bf18      	it	ne
 80006b6:	ea95 0f0c 	teqne	r5, ip
 80006ba:	d00c      	beq.n	80006d6 <__aeabi_dmul+0x206>
 80006bc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006c0:	bf18      	it	ne
 80006c2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006c6:	d1d1      	bne.n	800066c <__aeabi_dmul+0x19c>
 80006c8:	ea81 0103 	eor.w	r1, r1, r3
 80006cc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006d0:	f04f 0000 	mov.w	r0, #0
 80006d4:	bd70      	pop	{r4, r5, r6, pc}
 80006d6:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006da:	bf06      	itte	eq
 80006dc:	4610      	moveq	r0, r2
 80006de:	4619      	moveq	r1, r3
 80006e0:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006e4:	d019      	beq.n	800071a <__aeabi_dmul+0x24a>
 80006e6:	ea94 0f0c 	teq	r4, ip
 80006ea:	d102      	bne.n	80006f2 <__aeabi_dmul+0x222>
 80006ec:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80006f0:	d113      	bne.n	800071a <__aeabi_dmul+0x24a>
 80006f2:	ea95 0f0c 	teq	r5, ip
 80006f6:	d105      	bne.n	8000704 <__aeabi_dmul+0x234>
 80006f8:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80006fc:	bf1c      	itt	ne
 80006fe:	4610      	movne	r0, r2
 8000700:	4619      	movne	r1, r3
 8000702:	d10a      	bne.n	800071a <__aeabi_dmul+0x24a>
 8000704:	ea81 0103 	eor.w	r1, r1, r3
 8000708:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800070c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000710:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000714:	f04f 0000 	mov.w	r0, #0
 8000718:	bd70      	pop	{r4, r5, r6, pc}
 800071a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800071e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 8000722:	bd70      	pop	{r4, r5, r6, pc}

08000724 <__aeabi_ddiv>:
 8000724:	b570      	push	{r4, r5, r6, lr}
 8000726:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800072a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800072e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000732:	bf1d      	ittte	ne
 8000734:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000738:	ea94 0f0c 	teqne	r4, ip
 800073c:	ea95 0f0c 	teqne	r5, ip
 8000740:	f000 f8a7 	bleq	8000892 <__aeabi_ddiv+0x16e>
 8000744:	eba4 0405 	sub.w	r4, r4, r5
 8000748:	ea81 0e03 	eor.w	lr, r1, r3
 800074c:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000750:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000754:	f000 8088 	beq.w	8000868 <__aeabi_ddiv+0x144>
 8000758:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800075c:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000760:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 8000764:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000768:	ea4f 2202 	mov.w	r2, r2, lsl #8
 800076c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000770:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 8000774:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000778:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 800077c:	429d      	cmp	r5, r3
 800077e:	bf08      	it	eq
 8000780:	4296      	cmpeq	r6, r2
 8000782:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 8000786:	f504 7440 	add.w	r4, r4, #768	; 0x300
 800078a:	d202      	bcs.n	8000792 <__aeabi_ddiv+0x6e>
 800078c:	085b      	lsrs	r3, r3, #1
 800078e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000792:	1ab6      	subs	r6, r6, r2
 8000794:	eb65 0503 	sbc.w	r5, r5, r3
 8000798:	085b      	lsrs	r3, r3, #1
 800079a:	ea4f 0232 	mov.w	r2, r2, rrx
 800079e:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80007a2:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80007a6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007aa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007ae:	bf22      	ittt	cs
 80007b0:	1ab6      	subcs	r6, r6, r2
 80007b2:	4675      	movcs	r5, lr
 80007b4:	ea40 000c 	orrcs.w	r0, r0, ip
 80007b8:	085b      	lsrs	r3, r3, #1
 80007ba:	ea4f 0232 	mov.w	r2, r2, rrx
 80007be:	ebb6 0e02 	subs.w	lr, r6, r2
 80007c2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007c6:	bf22      	ittt	cs
 80007c8:	1ab6      	subcs	r6, r6, r2
 80007ca:	4675      	movcs	r5, lr
 80007cc:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80007d0:	085b      	lsrs	r3, r3, #1
 80007d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007d6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007da:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007de:	bf22      	ittt	cs
 80007e0:	1ab6      	subcs	r6, r6, r2
 80007e2:	4675      	movcs	r5, lr
 80007e4:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80007e8:	085b      	lsrs	r3, r3, #1
 80007ea:	ea4f 0232 	mov.w	r2, r2, rrx
 80007ee:	ebb6 0e02 	subs.w	lr, r6, r2
 80007f2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007f6:	bf22      	ittt	cs
 80007f8:	1ab6      	subcs	r6, r6, r2
 80007fa:	4675      	movcs	r5, lr
 80007fc:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000800:	ea55 0e06 	orrs.w	lr, r5, r6
 8000804:	d018      	beq.n	8000838 <__aeabi_ddiv+0x114>
 8000806:	ea4f 1505 	mov.w	r5, r5, lsl #4
 800080a:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 800080e:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8000812:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000816:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 800081a:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800081e:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 8000822:	d1c0      	bne.n	80007a6 <__aeabi_ddiv+0x82>
 8000824:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000828:	d10b      	bne.n	8000842 <__aeabi_ddiv+0x11e>
 800082a:	ea41 0100 	orr.w	r1, r1, r0
 800082e:	f04f 0000 	mov.w	r0, #0
 8000832:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8000836:	e7b6      	b.n	80007a6 <__aeabi_ddiv+0x82>
 8000838:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 800083c:	bf04      	itt	eq
 800083e:	4301      	orreq	r1, r0
 8000840:	2000      	moveq	r0, #0
 8000842:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000846:	bf88      	it	hi
 8000848:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 800084c:	f63f aeaf 	bhi.w	80005ae <__aeabi_dmul+0xde>
 8000850:	ebb5 0c03 	subs.w	ip, r5, r3
 8000854:	bf04      	itt	eq
 8000856:	ebb6 0c02 	subseq.w	ip, r6, r2
 800085a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800085e:	f150 0000 	adcs.w	r0, r0, #0
 8000862:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000866:	bd70      	pop	{r4, r5, r6, pc}
 8000868:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 800086c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000870:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8000874:	bfc2      	ittt	gt
 8000876:	ebd4 050c 	rsbsgt	r5, r4, ip
 800087a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800087e:	bd70      	popgt	{r4, r5, r6, pc}
 8000880:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000884:	f04f 0e00 	mov.w	lr, #0
 8000888:	3c01      	subs	r4, #1
 800088a:	e690      	b.n	80005ae <__aeabi_dmul+0xde>
 800088c:	ea45 0e06 	orr.w	lr, r5, r6
 8000890:	e68d      	b.n	80005ae <__aeabi_dmul+0xde>
 8000892:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000896:	ea94 0f0c 	teq	r4, ip
 800089a:	bf08      	it	eq
 800089c:	ea95 0f0c 	teqeq	r5, ip
 80008a0:	f43f af3b 	beq.w	800071a <__aeabi_dmul+0x24a>
 80008a4:	ea94 0f0c 	teq	r4, ip
 80008a8:	d10a      	bne.n	80008c0 <__aeabi_ddiv+0x19c>
 80008aa:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008ae:	f47f af34 	bne.w	800071a <__aeabi_dmul+0x24a>
 80008b2:	ea95 0f0c 	teq	r5, ip
 80008b6:	f47f af25 	bne.w	8000704 <__aeabi_dmul+0x234>
 80008ba:	4610      	mov	r0, r2
 80008bc:	4619      	mov	r1, r3
 80008be:	e72c      	b.n	800071a <__aeabi_dmul+0x24a>
 80008c0:	ea95 0f0c 	teq	r5, ip
 80008c4:	d106      	bne.n	80008d4 <__aeabi_ddiv+0x1b0>
 80008c6:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008ca:	f43f aefd 	beq.w	80006c8 <__aeabi_dmul+0x1f8>
 80008ce:	4610      	mov	r0, r2
 80008d0:	4619      	mov	r1, r3
 80008d2:	e722      	b.n	800071a <__aeabi_dmul+0x24a>
 80008d4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008d8:	bf18      	it	ne
 80008da:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80008de:	f47f aec5 	bne.w	800066c <__aeabi_dmul+0x19c>
 80008e2:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80008e6:	f47f af0d 	bne.w	8000704 <__aeabi_dmul+0x234>
 80008ea:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80008ee:	f47f aeeb 	bne.w	80006c8 <__aeabi_dmul+0x1f8>
 80008f2:	e712      	b.n	800071a <__aeabi_dmul+0x24a>

080008f4 <__gedf2>:
 80008f4:	f04f 3cff 	mov.w	ip, #4294967295
 80008f8:	e006      	b.n	8000908 <__cmpdf2+0x4>
 80008fa:	bf00      	nop

080008fc <__ledf2>:
 80008fc:	f04f 0c01 	mov.w	ip, #1
 8000900:	e002      	b.n	8000908 <__cmpdf2+0x4>
 8000902:	bf00      	nop

08000904 <__cmpdf2>:
 8000904:	f04f 0c01 	mov.w	ip, #1
 8000908:	f84d cd04 	str.w	ip, [sp, #-4]!
 800090c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000910:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000914:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000918:	bf18      	it	ne
 800091a:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 800091e:	d01b      	beq.n	8000958 <__cmpdf2+0x54>
 8000920:	b001      	add	sp, #4
 8000922:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000926:	bf0c      	ite	eq
 8000928:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 800092c:	ea91 0f03 	teqne	r1, r3
 8000930:	bf02      	ittt	eq
 8000932:	ea90 0f02 	teqeq	r0, r2
 8000936:	2000      	moveq	r0, #0
 8000938:	4770      	bxeq	lr
 800093a:	f110 0f00 	cmn.w	r0, #0
 800093e:	ea91 0f03 	teq	r1, r3
 8000942:	bf58      	it	pl
 8000944:	4299      	cmppl	r1, r3
 8000946:	bf08      	it	eq
 8000948:	4290      	cmpeq	r0, r2
 800094a:	bf2c      	ite	cs
 800094c:	17d8      	asrcs	r0, r3, #31
 800094e:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000952:	f040 0001 	orr.w	r0, r0, #1
 8000956:	4770      	bx	lr
 8000958:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 800095c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000960:	d102      	bne.n	8000968 <__cmpdf2+0x64>
 8000962:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000966:	d107      	bne.n	8000978 <__cmpdf2+0x74>
 8000968:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 800096c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000970:	d1d6      	bne.n	8000920 <__cmpdf2+0x1c>
 8000972:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000976:	d0d3      	beq.n	8000920 <__cmpdf2+0x1c>
 8000978:	f85d 0b04 	ldr.w	r0, [sp], #4
 800097c:	4770      	bx	lr
 800097e:	bf00      	nop

08000980 <__aeabi_cdrcmple>:
 8000980:	4684      	mov	ip, r0
 8000982:	4610      	mov	r0, r2
 8000984:	4662      	mov	r2, ip
 8000986:	468c      	mov	ip, r1
 8000988:	4619      	mov	r1, r3
 800098a:	4663      	mov	r3, ip
 800098c:	e000      	b.n	8000990 <__aeabi_cdcmpeq>
 800098e:	bf00      	nop

08000990 <__aeabi_cdcmpeq>:
 8000990:	b501      	push	{r0, lr}
 8000992:	f7ff ffb7 	bl	8000904 <__cmpdf2>
 8000996:	2800      	cmp	r0, #0
 8000998:	bf48      	it	mi
 800099a:	f110 0f00 	cmnmi.w	r0, #0
 800099e:	bd01      	pop	{r0, pc}

080009a0 <__aeabi_dcmpeq>:
 80009a0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009a4:	f7ff fff4 	bl	8000990 <__aeabi_cdcmpeq>
 80009a8:	bf0c      	ite	eq
 80009aa:	2001      	moveq	r0, #1
 80009ac:	2000      	movne	r0, #0
 80009ae:	f85d fb08 	ldr.w	pc, [sp], #8
 80009b2:	bf00      	nop

080009b4 <__aeabi_dcmplt>:
 80009b4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009b8:	f7ff ffea 	bl	8000990 <__aeabi_cdcmpeq>
 80009bc:	bf34      	ite	cc
 80009be:	2001      	movcc	r0, #1
 80009c0:	2000      	movcs	r0, #0
 80009c2:	f85d fb08 	ldr.w	pc, [sp], #8
 80009c6:	bf00      	nop

080009c8 <__aeabi_dcmple>:
 80009c8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009cc:	f7ff ffe0 	bl	8000990 <__aeabi_cdcmpeq>
 80009d0:	bf94      	ite	ls
 80009d2:	2001      	movls	r0, #1
 80009d4:	2000      	movhi	r0, #0
 80009d6:	f85d fb08 	ldr.w	pc, [sp], #8
 80009da:	bf00      	nop

080009dc <__aeabi_dcmpge>:
 80009dc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009e0:	f7ff ffce 	bl	8000980 <__aeabi_cdrcmple>
 80009e4:	bf94      	ite	ls
 80009e6:	2001      	movls	r0, #1
 80009e8:	2000      	movhi	r0, #0
 80009ea:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ee:	bf00      	nop

080009f0 <__aeabi_dcmpgt>:
 80009f0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009f4:	f7ff ffc4 	bl	8000980 <__aeabi_cdrcmple>
 80009f8:	bf34      	ite	cc
 80009fa:	2001      	movcc	r0, #1
 80009fc:	2000      	movcs	r0, #0
 80009fe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a02:	bf00      	nop

08000a04 <__aeabi_dcmpun>:
 8000a04:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a08:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a0c:	d102      	bne.n	8000a14 <__aeabi_dcmpun+0x10>
 8000a0e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a12:	d10a      	bne.n	8000a2a <__aeabi_dcmpun+0x26>
 8000a14:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a18:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a1c:	d102      	bne.n	8000a24 <__aeabi_dcmpun+0x20>
 8000a1e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a22:	d102      	bne.n	8000a2a <__aeabi_dcmpun+0x26>
 8000a24:	f04f 0000 	mov.w	r0, #0
 8000a28:	4770      	bx	lr
 8000a2a:	f04f 0001 	mov.w	r0, #1
 8000a2e:	4770      	bx	lr

08000a30 <__aeabi_d2iz>:
 8000a30:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a34:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000a38:	d215      	bcs.n	8000a66 <__aeabi_d2iz+0x36>
 8000a3a:	d511      	bpl.n	8000a60 <__aeabi_d2iz+0x30>
 8000a3c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000a40:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a44:	d912      	bls.n	8000a6c <__aeabi_d2iz+0x3c>
 8000a46:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a4a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000a4e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a52:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000a56:	fa23 f002 	lsr.w	r0, r3, r2
 8000a5a:	bf18      	it	ne
 8000a5c:	4240      	negne	r0, r0
 8000a5e:	4770      	bx	lr
 8000a60:	f04f 0000 	mov.w	r0, #0
 8000a64:	4770      	bx	lr
 8000a66:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a6a:	d105      	bne.n	8000a78 <__aeabi_d2iz+0x48>
 8000a6c:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000a70:	bf08      	it	eq
 8000a72:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000a76:	4770      	bx	lr
 8000a78:	f04f 0000 	mov.w	r0, #0
 8000a7c:	4770      	bx	lr
 8000a7e:	bf00      	nop

08000a80 <__aeabi_uldivmod>:
 8000a80:	b953      	cbnz	r3, 8000a98 <__aeabi_uldivmod+0x18>
 8000a82:	b94a      	cbnz	r2, 8000a98 <__aeabi_uldivmod+0x18>
 8000a84:	2900      	cmp	r1, #0
 8000a86:	bf08      	it	eq
 8000a88:	2800      	cmpeq	r0, #0
 8000a8a:	bf1c      	itt	ne
 8000a8c:	f04f 31ff 	movne.w	r1, #4294967295
 8000a90:	f04f 30ff 	movne.w	r0, #4294967295
 8000a94:	f000 b97a 	b.w	8000d8c <__aeabi_idiv0>
 8000a98:	f1ad 0c08 	sub.w	ip, sp, #8
 8000a9c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000aa0:	f000 f806 	bl	8000ab0 <__udivmoddi4>
 8000aa4:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000aa8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000aac:	b004      	add	sp, #16
 8000aae:	4770      	bx	lr

08000ab0 <__udivmoddi4>:
 8000ab0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000ab4:	468c      	mov	ip, r1
 8000ab6:	460e      	mov	r6, r1
 8000ab8:	4604      	mov	r4, r0
 8000aba:	9d08      	ldr	r5, [sp, #32]
 8000abc:	2b00      	cmp	r3, #0
 8000abe:	d150      	bne.n	8000b62 <__udivmoddi4+0xb2>
 8000ac0:	428a      	cmp	r2, r1
 8000ac2:	4617      	mov	r7, r2
 8000ac4:	d96c      	bls.n	8000ba0 <__udivmoddi4+0xf0>
 8000ac6:	fab2 fe82 	clz	lr, r2
 8000aca:	f1be 0f00 	cmp.w	lr, #0
 8000ace:	d00b      	beq.n	8000ae8 <__udivmoddi4+0x38>
 8000ad0:	f1ce 0c20 	rsb	ip, lr, #32
 8000ad4:	fa01 f60e 	lsl.w	r6, r1, lr
 8000ad8:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000adc:	fa02 f70e 	lsl.w	r7, r2, lr
 8000ae0:	ea4c 0c06 	orr.w	ip, ip, r6
 8000ae4:	fa00 f40e 	lsl.w	r4, r0, lr
 8000ae8:	0c3a      	lsrs	r2, r7, #16
 8000aea:	fbbc f9f2 	udiv	r9, ip, r2
 8000aee:	b2bb      	uxth	r3, r7
 8000af0:	fb02 cc19 	mls	ip, r2, r9, ip
 8000af4:	fb09 fa03 	mul.w	sl, r9, r3
 8000af8:	ea4f 4814 	mov.w	r8, r4, lsr #16
 8000afc:	ea48 460c 	orr.w	r6, r8, ip, lsl #16
 8000b00:	45b2      	cmp	sl, r6
 8000b02:	d90a      	bls.n	8000b1a <__udivmoddi4+0x6a>
 8000b04:	19f6      	adds	r6, r6, r7
 8000b06:	f109 31ff 	add.w	r1, r9, #4294967295
 8000b0a:	f080 8125 	bcs.w	8000d58 <__udivmoddi4+0x2a8>
 8000b0e:	45b2      	cmp	sl, r6
 8000b10:	f240 8122 	bls.w	8000d58 <__udivmoddi4+0x2a8>
 8000b14:	f1a9 0902 	sub.w	r9, r9, #2
 8000b18:	443e      	add	r6, r7
 8000b1a:	eba6 060a 	sub.w	r6, r6, sl
 8000b1e:	fbb6 f0f2 	udiv	r0, r6, r2
 8000b22:	fb02 6610 	mls	r6, r2, r0, r6
 8000b26:	fb00 f303 	mul.w	r3, r0, r3
 8000b2a:	b2a4      	uxth	r4, r4
 8000b2c:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 8000b30:	42a3      	cmp	r3, r4
 8000b32:	d909      	bls.n	8000b48 <__udivmoddi4+0x98>
 8000b34:	19e4      	adds	r4, r4, r7
 8000b36:	f100 32ff 	add.w	r2, r0, #4294967295
 8000b3a:	f080 810b 	bcs.w	8000d54 <__udivmoddi4+0x2a4>
 8000b3e:	42a3      	cmp	r3, r4
 8000b40:	f240 8108 	bls.w	8000d54 <__udivmoddi4+0x2a4>
 8000b44:	3802      	subs	r0, #2
 8000b46:	443c      	add	r4, r7
 8000b48:	2100      	movs	r1, #0
 8000b4a:	1ae4      	subs	r4, r4, r3
 8000b4c:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000b50:	2d00      	cmp	r5, #0
 8000b52:	d062      	beq.n	8000c1a <__udivmoddi4+0x16a>
 8000b54:	2300      	movs	r3, #0
 8000b56:	fa24 f40e 	lsr.w	r4, r4, lr
 8000b5a:	602c      	str	r4, [r5, #0]
 8000b5c:	606b      	str	r3, [r5, #4]
 8000b5e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000b62:	428b      	cmp	r3, r1
 8000b64:	d907      	bls.n	8000b76 <__udivmoddi4+0xc6>
 8000b66:	2d00      	cmp	r5, #0
 8000b68:	d055      	beq.n	8000c16 <__udivmoddi4+0x166>
 8000b6a:	2100      	movs	r1, #0
 8000b6c:	e885 0041 	stmia.w	r5, {r0, r6}
 8000b70:	4608      	mov	r0, r1
 8000b72:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000b76:	fab3 f183 	clz	r1, r3
 8000b7a:	2900      	cmp	r1, #0
 8000b7c:	f040 808f 	bne.w	8000c9e <__udivmoddi4+0x1ee>
 8000b80:	42b3      	cmp	r3, r6
 8000b82:	d302      	bcc.n	8000b8a <__udivmoddi4+0xda>
 8000b84:	4282      	cmp	r2, r0
 8000b86:	f200 80fc 	bhi.w	8000d82 <__udivmoddi4+0x2d2>
 8000b8a:	1a84      	subs	r4, r0, r2
 8000b8c:	eb66 0603 	sbc.w	r6, r6, r3
 8000b90:	2001      	movs	r0, #1
 8000b92:	46b4      	mov	ip, r6
 8000b94:	2d00      	cmp	r5, #0
 8000b96:	d040      	beq.n	8000c1a <__udivmoddi4+0x16a>
 8000b98:	e885 1010 	stmia.w	r5, {r4, ip}
 8000b9c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ba0:	b912      	cbnz	r2, 8000ba8 <__udivmoddi4+0xf8>
 8000ba2:	2701      	movs	r7, #1
 8000ba4:	fbb7 f7f2 	udiv	r7, r7, r2
 8000ba8:	fab7 fe87 	clz	lr, r7
 8000bac:	f1be 0f00 	cmp.w	lr, #0
 8000bb0:	d135      	bne.n	8000c1e <__udivmoddi4+0x16e>
 8000bb2:	2101      	movs	r1, #1
 8000bb4:	1bf6      	subs	r6, r6, r7
 8000bb6:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 8000bba:	fa1f f887 	uxth.w	r8, r7
 8000bbe:	fbb6 f2fc 	udiv	r2, r6, ip
 8000bc2:	fb0c 6612 	mls	r6, ip, r2, r6
 8000bc6:	fb08 f002 	mul.w	r0, r8, r2
 8000bca:	0c23      	lsrs	r3, r4, #16
 8000bcc:	ea43 4606 	orr.w	r6, r3, r6, lsl #16
 8000bd0:	42b0      	cmp	r0, r6
 8000bd2:	d907      	bls.n	8000be4 <__udivmoddi4+0x134>
 8000bd4:	19f6      	adds	r6, r6, r7
 8000bd6:	f102 33ff 	add.w	r3, r2, #4294967295
 8000bda:	d202      	bcs.n	8000be2 <__udivmoddi4+0x132>
 8000bdc:	42b0      	cmp	r0, r6
 8000bde:	f200 80d2 	bhi.w	8000d86 <__udivmoddi4+0x2d6>
 8000be2:	461a      	mov	r2, r3
 8000be4:	1a36      	subs	r6, r6, r0
 8000be6:	fbb6 f0fc 	udiv	r0, r6, ip
 8000bea:	fb0c 6610 	mls	r6, ip, r0, r6
 8000bee:	fb08 f800 	mul.w	r8, r8, r0
 8000bf2:	b2a3      	uxth	r3, r4
 8000bf4:	ea43 4406 	orr.w	r4, r3, r6, lsl #16
 8000bf8:	45a0      	cmp	r8, r4
 8000bfa:	d907      	bls.n	8000c0c <__udivmoddi4+0x15c>
 8000bfc:	19e4      	adds	r4, r4, r7
 8000bfe:	f100 33ff 	add.w	r3, r0, #4294967295
 8000c02:	d202      	bcs.n	8000c0a <__udivmoddi4+0x15a>
 8000c04:	45a0      	cmp	r8, r4
 8000c06:	f200 80b9 	bhi.w	8000d7c <__udivmoddi4+0x2cc>
 8000c0a:	4618      	mov	r0, r3
 8000c0c:	eba4 0408 	sub.w	r4, r4, r8
 8000c10:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8000c14:	e79c      	b.n	8000b50 <__udivmoddi4+0xa0>
 8000c16:	4629      	mov	r1, r5
 8000c18:	4628      	mov	r0, r5
 8000c1a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c1e:	fa07 f70e 	lsl.w	r7, r7, lr
 8000c22:	f1ce 0320 	rsb	r3, lr, #32
 8000c26:	fa26 f203 	lsr.w	r2, r6, r3
 8000c2a:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 8000c2e:	fbb2 f1fc 	udiv	r1, r2, ip
 8000c32:	fa1f f887 	uxth.w	r8, r7
 8000c36:	fb0c 2211 	mls	r2, ip, r1, r2
 8000c3a:	fa06 f60e 	lsl.w	r6, r6, lr
 8000c3e:	fa20 f303 	lsr.w	r3, r0, r3
 8000c42:	fb01 f908 	mul.w	r9, r1, r8
 8000c46:	4333      	orrs	r3, r6
 8000c48:	0c1e      	lsrs	r6, r3, #16
 8000c4a:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
 8000c4e:	45b1      	cmp	r9, r6
 8000c50:	fa00 f40e 	lsl.w	r4, r0, lr
 8000c54:	d909      	bls.n	8000c6a <__udivmoddi4+0x1ba>
 8000c56:	19f6      	adds	r6, r6, r7
 8000c58:	f101 32ff 	add.w	r2, r1, #4294967295
 8000c5c:	f080 808c 	bcs.w	8000d78 <__udivmoddi4+0x2c8>
 8000c60:	45b1      	cmp	r9, r6
 8000c62:	f240 8089 	bls.w	8000d78 <__udivmoddi4+0x2c8>
 8000c66:	3902      	subs	r1, #2
 8000c68:	443e      	add	r6, r7
 8000c6a:	eba6 0609 	sub.w	r6, r6, r9
 8000c6e:	fbb6 f0fc 	udiv	r0, r6, ip
 8000c72:	fb0c 6210 	mls	r2, ip, r0, r6
 8000c76:	fb00 f908 	mul.w	r9, r0, r8
 8000c7a:	b29e      	uxth	r6, r3
 8000c7c:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
 8000c80:	45b1      	cmp	r9, r6
 8000c82:	d907      	bls.n	8000c94 <__udivmoddi4+0x1e4>
 8000c84:	19f6      	adds	r6, r6, r7
 8000c86:	f100 33ff 	add.w	r3, r0, #4294967295
 8000c8a:	d271      	bcs.n	8000d70 <__udivmoddi4+0x2c0>
 8000c8c:	45b1      	cmp	r9, r6
 8000c8e:	d96f      	bls.n	8000d70 <__udivmoddi4+0x2c0>
 8000c90:	3802      	subs	r0, #2
 8000c92:	443e      	add	r6, r7
 8000c94:	eba6 0609 	sub.w	r6, r6, r9
 8000c98:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000c9c:	e78f      	b.n	8000bbe <__udivmoddi4+0x10e>
 8000c9e:	f1c1 0720 	rsb	r7, r1, #32
 8000ca2:	fa22 f807 	lsr.w	r8, r2, r7
 8000ca6:	408b      	lsls	r3, r1
 8000ca8:	ea48 0303 	orr.w	r3, r8, r3
 8000cac:	fa26 f407 	lsr.w	r4, r6, r7
 8000cb0:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 8000cb4:	fbb4 f9fe 	udiv	r9, r4, lr
 8000cb8:	fa1f fc83 	uxth.w	ip, r3
 8000cbc:	fb0e 4419 	mls	r4, lr, r9, r4
 8000cc0:	408e      	lsls	r6, r1
 8000cc2:	fa20 f807 	lsr.w	r8, r0, r7
 8000cc6:	fb09 fa0c 	mul.w	sl, r9, ip
 8000cca:	ea48 0806 	orr.w	r8, r8, r6
 8000cce:	ea4f 4618 	mov.w	r6, r8, lsr #16
 8000cd2:	ea46 4404 	orr.w	r4, r6, r4, lsl #16
 8000cd6:	45a2      	cmp	sl, r4
 8000cd8:	fa02 f201 	lsl.w	r2, r2, r1
 8000cdc:	fa00 f601 	lsl.w	r6, r0, r1
 8000ce0:	d908      	bls.n	8000cf4 <__udivmoddi4+0x244>
 8000ce2:	18e4      	adds	r4, r4, r3
 8000ce4:	f109 30ff 	add.w	r0, r9, #4294967295
 8000ce8:	d244      	bcs.n	8000d74 <__udivmoddi4+0x2c4>
 8000cea:	45a2      	cmp	sl, r4
 8000cec:	d942      	bls.n	8000d74 <__udivmoddi4+0x2c4>
 8000cee:	f1a9 0902 	sub.w	r9, r9, #2
 8000cf2:	441c      	add	r4, r3
 8000cf4:	eba4 040a 	sub.w	r4, r4, sl
 8000cf8:	fbb4 f0fe 	udiv	r0, r4, lr
 8000cfc:	fb0e 4410 	mls	r4, lr, r0, r4
 8000d00:	fb00 fc0c 	mul.w	ip, r0, ip
 8000d04:	fa1f f888 	uxth.w	r8, r8
 8000d08:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
 8000d0c:	45a4      	cmp	ip, r4
 8000d0e:	d907      	bls.n	8000d20 <__udivmoddi4+0x270>
 8000d10:	18e4      	adds	r4, r4, r3
 8000d12:	f100 3eff 	add.w	lr, r0, #4294967295
 8000d16:	d229      	bcs.n	8000d6c <__udivmoddi4+0x2bc>
 8000d18:	45a4      	cmp	ip, r4
 8000d1a:	d927      	bls.n	8000d6c <__udivmoddi4+0x2bc>
 8000d1c:	3802      	subs	r0, #2
 8000d1e:	441c      	add	r4, r3
 8000d20:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000d24:	fba0 8902 	umull	r8, r9, r0, r2
 8000d28:	eba4 0c0c 	sub.w	ip, r4, ip
 8000d2c:	45cc      	cmp	ip, r9
 8000d2e:	46c2      	mov	sl, r8
 8000d30:	46ce      	mov	lr, r9
 8000d32:	d315      	bcc.n	8000d60 <__udivmoddi4+0x2b0>
 8000d34:	d012      	beq.n	8000d5c <__udivmoddi4+0x2ac>
 8000d36:	b155      	cbz	r5, 8000d4e <__udivmoddi4+0x29e>
 8000d38:	ebb6 030a 	subs.w	r3, r6, sl
 8000d3c:	eb6c 060e 	sbc.w	r6, ip, lr
 8000d40:	fa06 f707 	lsl.w	r7, r6, r7
 8000d44:	40cb      	lsrs	r3, r1
 8000d46:	431f      	orrs	r7, r3
 8000d48:	40ce      	lsrs	r6, r1
 8000d4a:	602f      	str	r7, [r5, #0]
 8000d4c:	606e      	str	r6, [r5, #4]
 8000d4e:	2100      	movs	r1, #0
 8000d50:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d54:	4610      	mov	r0, r2
 8000d56:	e6f7      	b.n	8000b48 <__udivmoddi4+0x98>
 8000d58:	4689      	mov	r9, r1
 8000d5a:	e6de      	b.n	8000b1a <__udivmoddi4+0x6a>
 8000d5c:	4546      	cmp	r6, r8
 8000d5e:	d2ea      	bcs.n	8000d36 <__udivmoddi4+0x286>
 8000d60:	ebb8 0a02 	subs.w	sl, r8, r2
 8000d64:	eb69 0e03 	sbc.w	lr, r9, r3
 8000d68:	3801      	subs	r0, #1
 8000d6a:	e7e4      	b.n	8000d36 <__udivmoddi4+0x286>
 8000d6c:	4670      	mov	r0, lr
 8000d6e:	e7d7      	b.n	8000d20 <__udivmoddi4+0x270>
 8000d70:	4618      	mov	r0, r3
 8000d72:	e78f      	b.n	8000c94 <__udivmoddi4+0x1e4>
 8000d74:	4681      	mov	r9, r0
 8000d76:	e7bd      	b.n	8000cf4 <__udivmoddi4+0x244>
 8000d78:	4611      	mov	r1, r2
 8000d7a:	e776      	b.n	8000c6a <__udivmoddi4+0x1ba>
 8000d7c:	3802      	subs	r0, #2
 8000d7e:	443c      	add	r4, r7
 8000d80:	e744      	b.n	8000c0c <__udivmoddi4+0x15c>
 8000d82:	4608      	mov	r0, r1
 8000d84:	e706      	b.n	8000b94 <__udivmoddi4+0xe4>
 8000d86:	3a02      	subs	r2, #2
 8000d88:	443e      	add	r6, r7
 8000d8a:	e72b      	b.n	8000be4 <__udivmoddi4+0x134>

08000d8c <__aeabi_idiv0>:
 8000d8c:	4770      	bx	lr
 8000d8e:	bf00      	nop

08000d90 <GPIO_Init>:
  * @param  GPIO_InitStruct: pointer to a GPIO_InitTypeDef structure that
  *         contains the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct)
{
 8000d90:	b480      	push	{r7}
 8000d92:	b089      	sub	sp, #36	; 0x24
 8000d94:	af00      	add	r7, sp, #0
 8000d96:	6078      	str	r0, [r7, #4]
 8000d98:	6039      	str	r1, [r7, #0]
  uint32_t currentmode = 0x00, currentpin = 0x00, pinpos = 0x00, pos = 0x00;
 8000d9a:	2300      	movs	r3, #0
 8000d9c:	61fb      	str	r3, [r7, #28]
 8000d9e:	2300      	movs	r3, #0
 8000da0:	613b      	str	r3, [r7, #16]
 8000da2:	2300      	movs	r3, #0
 8000da4:	61bb      	str	r3, [r7, #24]
 8000da6:	2300      	movs	r3, #0
 8000da8:	60fb      	str	r3, [r7, #12]
  uint32_t tmpreg = 0x00, pinmask = 0x00;
 8000daa:	2300      	movs	r3, #0
 8000dac:	617b      	str	r3, [r7, #20]
 8000dae:	2300      	movs	r3, #0
 8000db0:	60bb      	str	r3, [r7, #8]
  assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
  assert_param(IS_GPIO_MODE(GPIO_InitStruct->GPIO_Mode));
  assert_param(IS_GPIO_PIN(GPIO_InitStruct->GPIO_Pin));  
  
/*---------------------------- GPIO Mode Configuration -----------------------*/
  currentmode = ((uint32_t)GPIO_InitStruct->GPIO_Mode) & ((uint32_t)0x0F);
 8000db2:	683b      	ldr	r3, [r7, #0]
 8000db4:	78db      	ldrb	r3, [r3, #3]
 8000db6:	f003 030f 	and.w	r3, r3, #15
 8000dba:	61fb      	str	r3, [r7, #28]
  if ((((uint32_t)GPIO_InitStruct->GPIO_Mode) & ((uint32_t)0x10)) != 0x00)
 8000dbc:	683b      	ldr	r3, [r7, #0]
 8000dbe:	78db      	ldrb	r3, [r3, #3]
 8000dc0:	f003 0310 	and.w	r3, r3, #16
 8000dc4:	2b00      	cmp	r3, #0
 8000dc6:	d005      	beq.n	8000dd4 <GPIO_Init+0x44>
  { 
    /* Check the parameters */
    assert_param(IS_GPIO_SPEED(GPIO_InitStruct->GPIO_Speed));
    /* Output mode */
    currentmode |= (uint32_t)GPIO_InitStruct->GPIO_Speed;
 8000dc8:	683b      	ldr	r3, [r7, #0]
 8000dca:	789b      	ldrb	r3, [r3, #2]
 8000dcc:	461a      	mov	r2, r3
 8000dce:	69fb      	ldr	r3, [r7, #28]
 8000dd0:	4313      	orrs	r3, r2
 8000dd2:	61fb      	str	r3, [r7, #28]
  }
/*---------------------------- GPIO CRL Configuration ------------------------*/
  /* Configure the eight low port pins */
  if (((uint32_t)GPIO_InitStruct->GPIO_Pin & ((uint32_t)0x00FF)) != 0x00)
 8000dd4:	683b      	ldr	r3, [r7, #0]
 8000dd6:	881b      	ldrh	r3, [r3, #0]
 8000dd8:	b2db      	uxtb	r3, r3
 8000dda:	2b00      	cmp	r3, #0
 8000ddc:	d044      	beq.n	8000e68 <GPIO_Init+0xd8>
  {
    tmpreg = GPIOx->CRL;
 8000dde:	687b      	ldr	r3, [r7, #4]
 8000de0:	681b      	ldr	r3, [r3, #0]
 8000de2:	617b      	str	r3, [r7, #20]
    for (pinpos = 0x00; pinpos < 0x08; pinpos++)
 8000de4:	2300      	movs	r3, #0
 8000de6:	61bb      	str	r3, [r7, #24]
 8000de8:	e038      	b.n	8000e5c <GPIO_Init+0xcc>
    {
      pos = ((uint32_t)0x01) << pinpos;
 8000dea:	2201      	movs	r2, #1
 8000dec:	69bb      	ldr	r3, [r7, #24]
 8000dee:	fa02 f303 	lsl.w	r3, r2, r3
 8000df2:	60fb      	str	r3, [r7, #12]
      /* Get the port pins position */
      currentpin = (GPIO_InitStruct->GPIO_Pin) & pos;
 8000df4:	683b      	ldr	r3, [r7, #0]
 8000df6:	881b      	ldrh	r3, [r3, #0]
 8000df8:	461a      	mov	r2, r3
 8000dfa:	68fb      	ldr	r3, [r7, #12]
 8000dfc:	4013      	ands	r3, r2
 8000dfe:	613b      	str	r3, [r7, #16]
      if (currentpin == pos)
 8000e00:	693a      	ldr	r2, [r7, #16]
 8000e02:	68fb      	ldr	r3, [r7, #12]
 8000e04:	429a      	cmp	r2, r3
 8000e06:	d126      	bne.n	8000e56 <GPIO_Init+0xc6>
      {
        pos = pinpos << 2;
 8000e08:	69bb      	ldr	r3, [r7, #24]
 8000e0a:	009b      	lsls	r3, r3, #2
 8000e0c:	60fb      	str	r3, [r7, #12]
        /* Clear the corresponding low control register bits */
        pinmask = ((uint32_t)0x0F) << pos;
 8000e0e:	220f      	movs	r2, #15
 8000e10:	68fb      	ldr	r3, [r7, #12]
 8000e12:	fa02 f303 	lsl.w	r3, r2, r3
 8000e16:	60bb      	str	r3, [r7, #8]
        tmpreg &= ~pinmask;
 8000e18:	68bb      	ldr	r3, [r7, #8]
 8000e1a:	43db      	mvns	r3, r3
 8000e1c:	697a      	ldr	r2, [r7, #20]
 8000e1e:	4013      	ands	r3, r2
 8000e20:	617b      	str	r3, [r7, #20]
        /* Write the mode configuration in the corresponding bits */
        tmpreg |= (currentmode << pos);
 8000e22:	69fa      	ldr	r2, [r7, #28]
 8000e24:	68fb      	ldr	r3, [r7, #12]
 8000e26:	fa02 f303 	lsl.w	r3, r2, r3
 8000e2a:	697a      	ldr	r2, [r7, #20]
 8000e2c:	4313      	orrs	r3, r2
 8000e2e:	617b      	str	r3, [r7, #20]
        /* Reset the corresponding ODR bit */
        if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPD)
 8000e30:	683b      	ldr	r3, [r7, #0]
 8000e32:	78db      	ldrb	r3, [r3, #3]
 8000e34:	2b28      	cmp	r3, #40	; 0x28
 8000e36:	d105      	bne.n	8000e44 <GPIO_Init+0xb4>
        {
          GPIOx->BRR = (((uint32_t)0x01) << pinpos);
 8000e38:	2201      	movs	r2, #1
 8000e3a:	69bb      	ldr	r3, [r7, #24]
 8000e3c:	409a      	lsls	r2, r3
 8000e3e:	687b      	ldr	r3, [r7, #4]
 8000e40:	615a      	str	r2, [r3, #20]
 8000e42:	e008      	b.n	8000e56 <GPIO_Init+0xc6>
        }
        else
        {
          /* Set the corresponding ODR bit */
          if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPU)
 8000e44:	683b      	ldr	r3, [r7, #0]
 8000e46:	78db      	ldrb	r3, [r3, #3]
 8000e48:	2b48      	cmp	r3, #72	; 0x48
 8000e4a:	d104      	bne.n	8000e56 <GPIO_Init+0xc6>
          {
            GPIOx->BSRR = (((uint32_t)0x01) << pinpos);
 8000e4c:	2201      	movs	r2, #1
 8000e4e:	69bb      	ldr	r3, [r7, #24]
 8000e50:	409a      	lsls	r2, r3
 8000e52:	687b      	ldr	r3, [r7, #4]
 8000e54:	611a      	str	r2, [r3, #16]
    for (pinpos = 0x00; pinpos < 0x08; pinpos++)
 8000e56:	69bb      	ldr	r3, [r7, #24]
 8000e58:	3301      	adds	r3, #1
 8000e5a:	61bb      	str	r3, [r7, #24]
 8000e5c:	69bb      	ldr	r3, [r7, #24]
 8000e5e:	2b07      	cmp	r3, #7
 8000e60:	d9c3      	bls.n	8000dea <GPIO_Init+0x5a>
          }
        }
      }
    }
    GPIOx->CRL = tmpreg;
 8000e62:	687b      	ldr	r3, [r7, #4]
 8000e64:	697a      	ldr	r2, [r7, #20]
 8000e66:	601a      	str	r2, [r3, #0]
  }
/*---------------------------- GPIO CRH Configuration ------------------------*/
  /* Configure the eight high port pins */
  if (GPIO_InitStruct->GPIO_Pin > 0x00FF)
 8000e68:	683b      	ldr	r3, [r7, #0]
 8000e6a:	881b      	ldrh	r3, [r3, #0]
 8000e6c:	2bff      	cmp	r3, #255	; 0xff
 8000e6e:	d946      	bls.n	8000efe <GPIO_Init+0x16e>
  {
    tmpreg = GPIOx->CRH;
 8000e70:	687b      	ldr	r3, [r7, #4]
 8000e72:	685b      	ldr	r3, [r3, #4]
 8000e74:	617b      	str	r3, [r7, #20]
    for (pinpos = 0x00; pinpos < 0x08; pinpos++)
 8000e76:	2300      	movs	r3, #0
 8000e78:	61bb      	str	r3, [r7, #24]
 8000e7a:	e03a      	b.n	8000ef2 <GPIO_Init+0x162>
    {
      pos = (((uint32_t)0x01) << (pinpos + 0x08));
 8000e7c:	69bb      	ldr	r3, [r7, #24]
 8000e7e:	3308      	adds	r3, #8
 8000e80:	2201      	movs	r2, #1
 8000e82:	fa02 f303 	lsl.w	r3, r2, r3
 8000e86:	60fb      	str	r3, [r7, #12]
      /* Get the port pins position */
      currentpin = ((GPIO_InitStruct->GPIO_Pin) & pos);
 8000e88:	683b      	ldr	r3, [r7, #0]
 8000e8a:	881b      	ldrh	r3, [r3, #0]
 8000e8c:	461a      	mov	r2, r3
 8000e8e:	68fb      	ldr	r3, [r7, #12]
 8000e90:	4013      	ands	r3, r2
 8000e92:	613b      	str	r3, [r7, #16]
      if (currentpin == pos)
 8000e94:	693a      	ldr	r2, [r7, #16]
 8000e96:	68fb      	ldr	r3, [r7, #12]
 8000e98:	429a      	cmp	r2, r3
 8000e9a:	d127      	bne.n	8000eec <GPIO_Init+0x15c>
      {
        pos = pinpos << 2;
 8000e9c:	69bb      	ldr	r3, [r7, #24]
 8000e9e:	009b      	lsls	r3, r3, #2
 8000ea0:	60fb      	str	r3, [r7, #12]
        /* Clear the corresponding high control register bits */
        pinmask = ((uint32_t)0x0F) << pos;
 8000ea2:	220f      	movs	r2, #15
 8000ea4:	68fb      	ldr	r3, [r7, #12]
 8000ea6:	fa02 f303 	lsl.w	r3, r2, r3
 8000eaa:	60bb      	str	r3, [r7, #8]
        tmpreg &= ~pinmask;
 8000eac:	68bb      	ldr	r3, [r7, #8]
 8000eae:	43db      	mvns	r3, r3
 8000eb0:	697a      	ldr	r2, [r7, #20]
 8000eb2:	4013      	ands	r3, r2
 8000eb4:	617b      	str	r3, [r7, #20]
        /* Write the mode configuration in the corresponding bits */
        tmpreg |= (currentmode << pos);
 8000eb6:	69fa      	ldr	r2, [r7, #28]
 8000eb8:	68fb      	ldr	r3, [r7, #12]
 8000eba:	fa02 f303 	lsl.w	r3, r2, r3
 8000ebe:	697a      	ldr	r2, [r7, #20]
 8000ec0:	4313      	orrs	r3, r2
 8000ec2:	617b      	str	r3, [r7, #20]
        /* Reset the corresponding ODR bit */
        if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPD)
 8000ec4:	683b      	ldr	r3, [r7, #0]
 8000ec6:	78db      	ldrb	r3, [r3, #3]
 8000ec8:	2b28      	cmp	r3, #40	; 0x28
 8000eca:	d105      	bne.n	8000ed8 <GPIO_Init+0x148>
        {
          GPIOx->BRR = (((uint32_t)0x01) << (pinpos + 0x08));
 8000ecc:	69bb      	ldr	r3, [r7, #24]
 8000ece:	3308      	adds	r3, #8
 8000ed0:	2201      	movs	r2, #1
 8000ed2:	409a      	lsls	r2, r3
 8000ed4:	687b      	ldr	r3, [r7, #4]
 8000ed6:	615a      	str	r2, [r3, #20]
        }
        /* Set the corresponding ODR bit */
        if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPU)
 8000ed8:	683b      	ldr	r3, [r7, #0]
 8000eda:	78db      	ldrb	r3, [r3, #3]
 8000edc:	2b48      	cmp	r3, #72	; 0x48
 8000ede:	d105      	bne.n	8000eec <GPIO_Init+0x15c>
        {
          GPIOx->BSRR = (((uint32_t)0x01) << (pinpos + 0x08));
 8000ee0:	69bb      	ldr	r3, [r7, #24]
 8000ee2:	3308      	adds	r3, #8
 8000ee4:	2201      	movs	r2, #1
 8000ee6:	409a      	lsls	r2, r3
 8000ee8:	687b      	ldr	r3, [r7, #4]
 8000eea:	611a      	str	r2, [r3, #16]
    for (pinpos = 0x00; pinpos < 0x08; pinpos++)
 8000eec:	69bb      	ldr	r3, [r7, #24]
 8000eee:	3301      	adds	r3, #1
 8000ef0:	61bb      	str	r3, [r7, #24]
 8000ef2:	69bb      	ldr	r3, [r7, #24]
 8000ef4:	2b07      	cmp	r3, #7
 8000ef6:	d9c1      	bls.n	8000e7c <GPIO_Init+0xec>
        }
      }
    }
    GPIOx->CRH = tmpreg;
 8000ef8:	687b      	ldr	r3, [r7, #4]
 8000efa:	697a      	ldr	r2, [r7, #20]
 8000efc:	605a      	str	r2, [r3, #4]
  }
}
 8000efe:	bf00      	nop
 8000f00:	3724      	adds	r7, #36	; 0x24
 8000f02:	46bd      	mov	sp, r7
 8000f04:	bc80      	pop	{r7}
 8000f06:	4770      	bx	lr

08000f08 <RCC_GetClocksFreq>:
  * @note   The result of this function could be not correct when using 
  *         fractional value for HSE crystal.  
  * @retval None
  */
void RCC_GetClocksFreq(RCC_ClocksTypeDef* RCC_Clocks)
{
 8000f08:	b480      	push	{r7}
 8000f0a:	b087      	sub	sp, #28
 8000f0c:	af00      	add	r7, sp, #0
 8000f0e:	6078      	str	r0, [r7, #4]
  uint32_t tmp = 0, pllmull = 0, pllsource = 0, presc = 0;
 8000f10:	2300      	movs	r3, #0
 8000f12:	617b      	str	r3, [r7, #20]
 8000f14:	2300      	movs	r3, #0
 8000f16:	613b      	str	r3, [r7, #16]
 8000f18:	2300      	movs	r3, #0
 8000f1a:	60fb      	str	r3, [r7, #12]
 8000f1c:	2300      	movs	r3, #0
 8000f1e:	60bb      	str	r3, [r7, #8]
#if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
  uint32_t prediv1factor = 0;
#endif
    
  /* Get SYSCLK source -------------------------------------------------------*/
  tmp = RCC->CFGR & CFGR_SWS_Mask;
 8000f20:	4b4c      	ldr	r3, [pc, #304]	; (8001054 <RCC_GetClocksFreq+0x14c>)
 8000f22:	685b      	ldr	r3, [r3, #4]
 8000f24:	f003 030c 	and.w	r3, r3, #12
 8000f28:	617b      	str	r3, [r7, #20]
  
  switch (tmp)
 8000f2a:	697b      	ldr	r3, [r7, #20]
 8000f2c:	2b04      	cmp	r3, #4
 8000f2e:	d007      	beq.n	8000f40 <RCC_GetClocksFreq+0x38>
 8000f30:	2b08      	cmp	r3, #8
 8000f32:	d009      	beq.n	8000f48 <RCC_GetClocksFreq+0x40>
 8000f34:	2b00      	cmp	r3, #0
 8000f36:	d133      	bne.n	8000fa0 <RCC_GetClocksFreq+0x98>
  {
    case 0x00:  /* HSI used as system clock */
      RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
 8000f38:	687b      	ldr	r3, [r7, #4]
 8000f3a:	4a47      	ldr	r2, [pc, #284]	; (8001058 <RCC_GetClocksFreq+0x150>)
 8000f3c:	601a      	str	r2, [r3, #0]
      break;
 8000f3e:	e033      	b.n	8000fa8 <RCC_GetClocksFreq+0xa0>
    case 0x04:  /* HSE used as system clock */
      RCC_Clocks->SYSCLK_Frequency = HSE_VALUE;
 8000f40:	687b      	ldr	r3, [r7, #4]
 8000f42:	4a45      	ldr	r2, [pc, #276]	; (8001058 <RCC_GetClocksFreq+0x150>)
 8000f44:	601a      	str	r2, [r3, #0]
      break;
 8000f46:	e02f      	b.n	8000fa8 <RCC_GetClocksFreq+0xa0>
    case 0x08:  /* PLL used as system clock */

      /* Get PLL clock source and multiplication factor ----------------------*/
      pllmull = RCC->CFGR & CFGR_PLLMull_Mask;
 8000f48:	4b42      	ldr	r3, [pc, #264]	; (8001054 <RCC_GetClocksFreq+0x14c>)
 8000f4a:	685b      	ldr	r3, [r3, #4]
 8000f4c:	f403 1370 	and.w	r3, r3, #3932160	; 0x3c0000
 8000f50:	613b      	str	r3, [r7, #16]
      pllsource = RCC->CFGR & CFGR_PLLSRC_Mask;
 8000f52:	4b40      	ldr	r3, [pc, #256]	; (8001054 <RCC_GetClocksFreq+0x14c>)
 8000f54:	685b      	ldr	r3, [r3, #4]
 8000f56:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8000f5a:	60fb      	str	r3, [r7, #12]
      
#ifndef STM32F10X_CL      
      pllmull = ( pllmull >> 18) + 2;
 8000f5c:	693b      	ldr	r3, [r7, #16]
 8000f5e:	0c9b      	lsrs	r3, r3, #18
 8000f60:	3302      	adds	r3, #2
 8000f62:	613b      	str	r3, [r7, #16]
      
      if (pllsource == 0x00)
 8000f64:	68fb      	ldr	r3, [r7, #12]
 8000f66:	2b00      	cmp	r3, #0
 8000f68:	d106      	bne.n	8000f78 <RCC_GetClocksFreq+0x70>
      {/* HSI oscillator clock divided by 2 selected as PLL clock entry */
        RCC_Clocks->SYSCLK_Frequency = (HSI_VALUE >> 1) * pllmull;
 8000f6a:	693b      	ldr	r3, [r7, #16]
 8000f6c:	4a3b      	ldr	r2, [pc, #236]	; (800105c <RCC_GetClocksFreq+0x154>)
 8000f6e:	fb02 f203 	mul.w	r2, r2, r3
 8000f72:	687b      	ldr	r3, [r7, #4]
 8000f74:	601a      	str	r2, [r3, #0]
          pll2mull = ((RCC->CFGR2 & CFGR2_PLL2MUL) >> 8 ) + 2; 
          RCC_Clocks->SYSCLK_Frequency = (((HSE_VALUE / prediv2factor) * pll2mull) / prediv1factor) * pllmull;                         
        }
      }
#endif /* STM32F10X_CL */ 
      break;
 8000f76:	e017      	b.n	8000fa8 <RCC_GetClocksFreq+0xa0>
        if ((RCC->CFGR & CFGR_PLLXTPRE_Mask) != (uint32_t)RESET)
 8000f78:	4b36      	ldr	r3, [pc, #216]	; (8001054 <RCC_GetClocksFreq+0x14c>)
 8000f7a:	685b      	ldr	r3, [r3, #4]
 8000f7c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000f80:	2b00      	cmp	r3, #0
 8000f82:	d006      	beq.n	8000f92 <RCC_GetClocksFreq+0x8a>
          RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE >> 1) * pllmull;
 8000f84:	693b      	ldr	r3, [r7, #16]
 8000f86:	4a35      	ldr	r2, [pc, #212]	; (800105c <RCC_GetClocksFreq+0x154>)
 8000f88:	fb02 f203 	mul.w	r2, r2, r3
 8000f8c:	687b      	ldr	r3, [r7, #4]
 8000f8e:	601a      	str	r2, [r3, #0]
      break;
 8000f90:	e00a      	b.n	8000fa8 <RCC_GetClocksFreq+0xa0>
          RCC_Clocks->SYSCLK_Frequency = HSE_VALUE * pllmull;
 8000f92:	693b      	ldr	r3, [r7, #16]
 8000f94:	4a30      	ldr	r2, [pc, #192]	; (8001058 <RCC_GetClocksFreq+0x150>)
 8000f96:	fb02 f203 	mul.w	r2, r2, r3
 8000f9a:	687b      	ldr	r3, [r7, #4]
 8000f9c:	601a      	str	r2, [r3, #0]
      break;
 8000f9e:	e003      	b.n	8000fa8 <RCC_GetClocksFreq+0xa0>

    default:
      RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
 8000fa0:	687b      	ldr	r3, [r7, #4]
 8000fa2:	4a2d      	ldr	r2, [pc, #180]	; (8001058 <RCC_GetClocksFreq+0x150>)
 8000fa4:	601a      	str	r2, [r3, #0]
      break;
 8000fa6:	bf00      	nop
  }

  /* Compute HCLK, PCLK1, PCLK2 and ADCCLK clocks frequencies ----------------*/
  /* Get HCLK prescaler */
  tmp = RCC->CFGR & CFGR_HPRE_Set_Mask;
 8000fa8:	4b2a      	ldr	r3, [pc, #168]	; (8001054 <RCC_GetClocksFreq+0x14c>)
 8000faa:	685b      	ldr	r3, [r3, #4]
 8000fac:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8000fb0:	617b      	str	r3, [r7, #20]
  tmp = tmp >> 4;
 8000fb2:	697b      	ldr	r3, [r7, #20]
 8000fb4:	091b      	lsrs	r3, r3, #4
 8000fb6:	617b      	str	r3, [r7, #20]
  presc = APBAHBPrescTable[tmp];
 8000fb8:	4a29      	ldr	r2, [pc, #164]	; (8001060 <RCC_GetClocksFreq+0x158>)
 8000fba:	697b      	ldr	r3, [r7, #20]
 8000fbc:	4413      	add	r3, r2
 8000fbe:	781b      	ldrb	r3, [r3, #0]
 8000fc0:	b2db      	uxtb	r3, r3
 8000fc2:	60bb      	str	r3, [r7, #8]
  /* HCLK clock frequency */
  RCC_Clocks->HCLK_Frequency = RCC_Clocks->SYSCLK_Frequency >> presc;
 8000fc4:	687b      	ldr	r3, [r7, #4]
 8000fc6:	681a      	ldr	r2, [r3, #0]
 8000fc8:	68bb      	ldr	r3, [r7, #8]
 8000fca:	40da      	lsrs	r2, r3
 8000fcc:	687b      	ldr	r3, [r7, #4]
 8000fce:	605a      	str	r2, [r3, #4]
  /* Get PCLK1 prescaler */
  tmp = RCC->CFGR & CFGR_PPRE1_Set_Mask;
 8000fd0:	4b20      	ldr	r3, [pc, #128]	; (8001054 <RCC_GetClocksFreq+0x14c>)
 8000fd2:	685b      	ldr	r3, [r3, #4]
 8000fd4:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8000fd8:	617b      	str	r3, [r7, #20]
  tmp = tmp >> 8;
 8000fda:	697b      	ldr	r3, [r7, #20]
 8000fdc:	0a1b      	lsrs	r3, r3, #8
 8000fde:	617b      	str	r3, [r7, #20]
  presc = APBAHBPrescTable[tmp];
 8000fe0:	4a1f      	ldr	r2, [pc, #124]	; (8001060 <RCC_GetClocksFreq+0x158>)
 8000fe2:	697b      	ldr	r3, [r7, #20]
 8000fe4:	4413      	add	r3, r2
 8000fe6:	781b      	ldrb	r3, [r3, #0]
 8000fe8:	b2db      	uxtb	r3, r3
 8000fea:	60bb      	str	r3, [r7, #8]
  /* PCLK1 clock frequency */
  RCC_Clocks->PCLK1_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 8000fec:	687b      	ldr	r3, [r7, #4]
 8000fee:	685a      	ldr	r2, [r3, #4]
 8000ff0:	68bb      	ldr	r3, [r7, #8]
 8000ff2:	40da      	lsrs	r2, r3
 8000ff4:	687b      	ldr	r3, [r7, #4]
 8000ff6:	609a      	str	r2, [r3, #8]
  /* Get PCLK2 prescaler */
  tmp = RCC->CFGR & CFGR_PPRE2_Set_Mask;
 8000ff8:	4b16      	ldr	r3, [pc, #88]	; (8001054 <RCC_GetClocksFreq+0x14c>)
 8000ffa:	685b      	ldr	r3, [r3, #4]
 8000ffc:	f403 5360 	and.w	r3, r3, #14336	; 0x3800
 8001000:	617b      	str	r3, [r7, #20]
  tmp = tmp >> 11;
 8001002:	697b      	ldr	r3, [r7, #20]
 8001004:	0adb      	lsrs	r3, r3, #11
 8001006:	617b      	str	r3, [r7, #20]
  presc = APBAHBPrescTable[tmp];
 8001008:	4a15      	ldr	r2, [pc, #84]	; (8001060 <RCC_GetClocksFreq+0x158>)
 800100a:	697b      	ldr	r3, [r7, #20]
 800100c:	4413      	add	r3, r2
 800100e:	781b      	ldrb	r3, [r3, #0]
 8001010:	b2db      	uxtb	r3, r3
 8001012:	60bb      	str	r3, [r7, #8]
  /* PCLK2 clock frequency */
  RCC_Clocks->PCLK2_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 8001014:	687b      	ldr	r3, [r7, #4]
 8001016:	685a      	ldr	r2, [r3, #4]
 8001018:	68bb      	ldr	r3, [r7, #8]
 800101a:	40da      	lsrs	r2, r3
 800101c:	687b      	ldr	r3, [r7, #4]
 800101e:	60da      	str	r2, [r3, #12]
  /* Get ADCCLK prescaler */
  tmp = RCC->CFGR & CFGR_ADCPRE_Set_Mask;
 8001020:	4b0c      	ldr	r3, [pc, #48]	; (8001054 <RCC_GetClocksFreq+0x14c>)
 8001022:	685b      	ldr	r3, [r3, #4]
 8001024:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001028:	617b      	str	r3, [r7, #20]
  tmp = tmp >> 14;
 800102a:	697b      	ldr	r3, [r7, #20]
 800102c:	0b9b      	lsrs	r3, r3, #14
 800102e:	617b      	str	r3, [r7, #20]
  presc = ADCPrescTable[tmp];
 8001030:	4a0c      	ldr	r2, [pc, #48]	; (8001064 <RCC_GetClocksFreq+0x15c>)
 8001032:	697b      	ldr	r3, [r7, #20]
 8001034:	4413      	add	r3, r2
 8001036:	781b      	ldrb	r3, [r3, #0]
 8001038:	b2db      	uxtb	r3, r3
 800103a:	60bb      	str	r3, [r7, #8]
  /* ADCCLK clock frequency */
  RCC_Clocks->ADCCLK_Frequency = RCC_Clocks->PCLK2_Frequency / presc;
 800103c:	687b      	ldr	r3, [r7, #4]
 800103e:	68da      	ldr	r2, [r3, #12]
 8001040:	68bb      	ldr	r3, [r7, #8]
 8001042:	fbb2 f2f3 	udiv	r2, r2, r3
 8001046:	687b      	ldr	r3, [r7, #4]
 8001048:	611a      	str	r2, [r3, #16]
}
 800104a:	bf00      	nop
 800104c:	371c      	adds	r7, #28
 800104e:	46bd      	mov	sp, r7
 8001050:	bc80      	pop	{r7}
 8001052:	4770      	bx	lr
 8001054:	40021000 	.word	0x40021000
 8001058:	007a1200 	.word	0x007a1200
 800105c:	003d0900 	.word	0x003d0900
 8001060:	20000000 	.word	0x20000000
 8001064:	20000010 	.word	0x20000010

08001068 <RCC_APB2PeriphClockCmd>:
  * @param  NewState: new state of the specified peripheral clock.
  *   This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void RCC_APB2PeriphClockCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
{
 8001068:	b480      	push	{r7}
 800106a:	b083      	sub	sp, #12
 800106c:	af00      	add	r7, sp, #0
 800106e:	6078      	str	r0, [r7, #4]
 8001070:	460b      	mov	r3, r1
 8001072:	70fb      	strb	r3, [r7, #3]
  /* Check the parameters */
  assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  if (NewState != DISABLE)
 8001074:	78fb      	ldrb	r3, [r7, #3]
 8001076:	2b00      	cmp	r3, #0
 8001078:	d006      	beq.n	8001088 <RCC_APB2PeriphClockCmd+0x20>
  {
    RCC->APB2ENR |= RCC_APB2Periph;
 800107a:	4909      	ldr	r1, [pc, #36]	; (80010a0 <RCC_APB2PeriphClockCmd+0x38>)
 800107c:	4b08      	ldr	r3, [pc, #32]	; (80010a0 <RCC_APB2PeriphClockCmd+0x38>)
 800107e:	699a      	ldr	r2, [r3, #24]
 8001080:	687b      	ldr	r3, [r7, #4]
 8001082:	4313      	orrs	r3, r2
 8001084:	618b      	str	r3, [r1, #24]
  }
  else
  {
    RCC->APB2ENR &= ~RCC_APB2Periph;
  }
}
 8001086:	e006      	b.n	8001096 <RCC_APB2PeriphClockCmd+0x2e>
    RCC->APB2ENR &= ~RCC_APB2Periph;
 8001088:	4905      	ldr	r1, [pc, #20]	; (80010a0 <RCC_APB2PeriphClockCmd+0x38>)
 800108a:	4b05      	ldr	r3, [pc, #20]	; (80010a0 <RCC_APB2PeriphClockCmd+0x38>)
 800108c:	699a      	ldr	r2, [r3, #24]
 800108e:	687b      	ldr	r3, [r7, #4]
 8001090:	43db      	mvns	r3, r3
 8001092:	4013      	ands	r3, r2
 8001094:	618b      	str	r3, [r1, #24]
}
 8001096:	bf00      	nop
 8001098:	370c      	adds	r7, #12
 800109a:	46bd      	mov	sp, r7
 800109c:	bc80      	pop	{r7}
 800109e:	4770      	bx	lr
 80010a0:	40021000 	.word	0x40021000

080010a4 <RCC_APB1PeriphClockCmd>:
  * @param  NewState: new state of the specified peripheral clock.
  *   This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void RCC_APB1PeriphClockCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
{
 80010a4:	b480      	push	{r7}
 80010a6:	b083      	sub	sp, #12
 80010a8:	af00      	add	r7, sp, #0
 80010aa:	6078      	str	r0, [r7, #4]
 80010ac:	460b      	mov	r3, r1
 80010ae:	70fb      	strb	r3, [r7, #3]
  /* Check the parameters */
  assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  if (NewState != DISABLE)
 80010b0:	78fb      	ldrb	r3, [r7, #3]
 80010b2:	2b00      	cmp	r3, #0
 80010b4:	d006      	beq.n	80010c4 <RCC_APB1PeriphClockCmd+0x20>
  {
    RCC->APB1ENR |= RCC_APB1Periph;
 80010b6:	4909      	ldr	r1, [pc, #36]	; (80010dc <RCC_APB1PeriphClockCmd+0x38>)
 80010b8:	4b08      	ldr	r3, [pc, #32]	; (80010dc <RCC_APB1PeriphClockCmd+0x38>)
 80010ba:	69da      	ldr	r2, [r3, #28]
 80010bc:	687b      	ldr	r3, [r7, #4]
 80010be:	4313      	orrs	r3, r2
 80010c0:	61cb      	str	r3, [r1, #28]
  }
  else
  {
    RCC->APB1ENR &= ~RCC_APB1Periph;
  }
}
 80010c2:	e006      	b.n	80010d2 <RCC_APB1PeriphClockCmd+0x2e>
    RCC->APB1ENR &= ~RCC_APB1Periph;
 80010c4:	4905      	ldr	r1, [pc, #20]	; (80010dc <RCC_APB1PeriphClockCmd+0x38>)
 80010c6:	4b05      	ldr	r3, [pc, #20]	; (80010dc <RCC_APB1PeriphClockCmd+0x38>)
 80010c8:	69da      	ldr	r2, [r3, #28]
 80010ca:	687b      	ldr	r3, [r7, #4]
 80010cc:	43db      	mvns	r3, r3
 80010ce:	4013      	ands	r3, r2
 80010d0:	61cb      	str	r3, [r1, #28]
}
 80010d2:	bf00      	nop
 80010d4:	370c      	adds	r7, #12
 80010d6:	46bd      	mov	sp, r7
 80010d8:	bc80      	pop	{r7}
 80010da:	4770      	bx	lr
 80010dc:	40021000 	.word	0x40021000

080010e0 <USART_Init>:
  *         that contains the configuration information for the specified USART 
  *         peripheral.
  * @retval None
  */
void USART_Init(USART_TypeDef* USARTx, USART_InitTypeDef* USART_InitStruct)
{
 80010e0:	b580      	push	{r7, lr}
 80010e2:	b08c      	sub	sp, #48	; 0x30
 80010e4:	af00      	add	r7, sp, #0
 80010e6:	6078      	str	r0, [r7, #4]
 80010e8:	6039      	str	r1, [r7, #0]
  uint32_t tmpreg = 0x00, apbclock = 0x00;
 80010ea:	2300      	movs	r3, #0
 80010ec:	62fb      	str	r3, [r7, #44]	; 0x2c
 80010ee:	2300      	movs	r3, #0
 80010f0:	62bb      	str	r3, [r7, #40]	; 0x28
  uint32_t integerdivider = 0x00;
 80010f2:	2300      	movs	r3, #0
 80010f4:	627b      	str	r3, [r7, #36]	; 0x24
  uint32_t fractionaldivider = 0x00;
 80010f6:	2300      	movs	r3, #0
 80010f8:	623b      	str	r3, [r7, #32]
  uint32_t usartxbase = 0;
 80010fa:	2300      	movs	r3, #0
 80010fc:	61fb      	str	r3, [r7, #28]
  if (USART_InitStruct->USART_HardwareFlowControl != USART_HardwareFlowControl_None)
  {
    assert_param(IS_USART_123_PERIPH(USARTx));
  }

  usartxbase = (uint32_t)USARTx;
 80010fe:	687b      	ldr	r3, [r7, #4]
 8001100:	61fb      	str	r3, [r7, #28]

/*---------------------------- USART CR2 Configuration -----------------------*/
  tmpreg = USARTx->CR2;
 8001102:	687b      	ldr	r3, [r7, #4]
 8001104:	8a1b      	ldrh	r3, [r3, #16]
 8001106:	b29b      	uxth	r3, r3
 8001108:	62fb      	str	r3, [r7, #44]	; 0x2c
  /* Clear STOP[13:12] bits */
  tmpreg &= CR2_STOP_CLEAR_Mask;
 800110a:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800110c:	f64c 73ff 	movw	r3, #53247	; 0xcfff
 8001110:	4013      	ands	r3, r2
 8001112:	62fb      	str	r3, [r7, #44]	; 0x2c
  /* Configure the USART Stop Bits, Clock, CPOL, CPHA and LastBit ------------*/
  /* Set STOP[13:12] bits according to USART_StopBits value */
  tmpreg |= (uint32_t)USART_InitStruct->USART_StopBits;
 8001114:	683b      	ldr	r3, [r7, #0]
 8001116:	88db      	ldrh	r3, [r3, #6]
 8001118:	461a      	mov	r2, r3
 800111a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800111c:	4313      	orrs	r3, r2
 800111e:	62fb      	str	r3, [r7, #44]	; 0x2c
  
  /* Write to USART CR2 */
  USARTx->CR2 = (uint16_t)tmpreg;
 8001120:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001122:	b29a      	uxth	r2, r3
 8001124:	687b      	ldr	r3, [r7, #4]
 8001126:	821a      	strh	r2, [r3, #16]

/*---------------------------- USART CR1 Configuration -----------------------*/
  tmpreg = USARTx->CR1;
 8001128:	687b      	ldr	r3, [r7, #4]
 800112a:	899b      	ldrh	r3, [r3, #12]
 800112c:	b29b      	uxth	r3, r3
 800112e:	62fb      	str	r3, [r7, #44]	; 0x2c
  /* Clear M, PCE, PS, TE and RE bits */
  tmpreg &= CR1_CLEAR_Mask;
 8001130:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8001132:	f64e 13f3 	movw	r3, #59891	; 0xe9f3
 8001136:	4013      	ands	r3, r2
 8001138:	62fb      	str	r3, [r7, #44]	; 0x2c
  /* Configure the USART Word Length, Parity and mode ----------------------- */
  /* Set the M bits according to USART_WordLength value */
  /* Set PCE and PS bits according to USART_Parity value */
  /* Set TE and RE bits according to USART_Mode value */
  tmpreg |= (uint32_t)USART_InitStruct->USART_WordLength | USART_InitStruct->USART_Parity |
 800113a:	683b      	ldr	r3, [r7, #0]
 800113c:	889a      	ldrh	r2, [r3, #4]
 800113e:	683b      	ldr	r3, [r7, #0]
 8001140:	891b      	ldrh	r3, [r3, #8]
 8001142:	4313      	orrs	r3, r2
 8001144:	b29a      	uxth	r2, r3
            USART_InitStruct->USART_Mode;
 8001146:	683b      	ldr	r3, [r7, #0]
 8001148:	895b      	ldrh	r3, [r3, #10]
  tmpreg |= (uint32_t)USART_InitStruct->USART_WordLength | USART_InitStruct->USART_Parity |
 800114a:	4313      	orrs	r3, r2
 800114c:	b29b      	uxth	r3, r3
 800114e:	461a      	mov	r2, r3
 8001150:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001152:	4313      	orrs	r3, r2
 8001154:	62fb      	str	r3, [r7, #44]	; 0x2c
  /* Write to USART CR1 */
  USARTx->CR1 = (uint16_t)tmpreg;
 8001156:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001158:	b29a      	uxth	r2, r3
 800115a:	687b      	ldr	r3, [r7, #4]
 800115c:	819a      	strh	r2, [r3, #12]

/*---------------------------- USART CR3 Configuration -----------------------*/  
  tmpreg = USARTx->CR3;
 800115e:	687b      	ldr	r3, [r7, #4]
 8001160:	8a9b      	ldrh	r3, [r3, #20]
 8001162:	b29b      	uxth	r3, r3
 8001164:	62fb      	str	r3, [r7, #44]	; 0x2c
  /* Clear CTSE and RTSE bits */
  tmpreg &= CR3_CLEAR_Mask;
 8001166:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8001168:	f64f 43ff 	movw	r3, #64767	; 0xfcff
 800116c:	4013      	ands	r3, r2
 800116e:	62fb      	str	r3, [r7, #44]	; 0x2c
  /* Configure the USART HFC -------------------------------------------------*/
  /* Set CTSE and RTSE bits according to USART_HardwareFlowControl value */
  tmpreg |= USART_InitStruct->USART_HardwareFlowControl;
 8001170:	683b      	ldr	r3, [r7, #0]
 8001172:	899b      	ldrh	r3, [r3, #12]
 8001174:	461a      	mov	r2, r3
 8001176:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001178:	4313      	orrs	r3, r2
 800117a:	62fb      	str	r3, [r7, #44]	; 0x2c
  /* Write to USART CR3 */
  USARTx->CR3 = (uint16_t)tmpreg;
 800117c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800117e:	b29a      	uxth	r2, r3
 8001180:	687b      	ldr	r3, [r7, #4]
 8001182:	829a      	strh	r2, [r3, #20]

/*---------------------------- USART BRR Configuration -----------------------*/
  /* Configure the USART Baud Rate -------------------------------------------*/
  RCC_GetClocksFreq(&RCC_ClocksStatus);
 8001184:	f107 0308 	add.w	r3, r7, #8
 8001188:	4618      	mov	r0, r3
 800118a:	f7ff febd 	bl	8000f08 <RCC_GetClocksFreq>
  if (usartxbase == USART1_BASE)
 800118e:	69fb      	ldr	r3, [r7, #28]
 8001190:	4a2e      	ldr	r2, [pc, #184]	; (800124c <USART_Init+0x16c>)
 8001192:	4293      	cmp	r3, r2
 8001194:	d102      	bne.n	800119c <USART_Init+0xbc>
  {
    apbclock = RCC_ClocksStatus.PCLK2_Frequency;
 8001196:	697b      	ldr	r3, [r7, #20]
 8001198:	62bb      	str	r3, [r7, #40]	; 0x28
 800119a:	e001      	b.n	80011a0 <USART_Init+0xc0>
  }
  else
  {
    apbclock = RCC_ClocksStatus.PCLK1_Frequency;
 800119c:	693b      	ldr	r3, [r7, #16]
 800119e:	62bb      	str	r3, [r7, #40]	; 0x28
  }
  
  /* Determine the integer part */
  if ((USARTx->CR1 & CR1_OVER8_Set) != 0)
 80011a0:	687b      	ldr	r3, [r7, #4]
 80011a2:	899b      	ldrh	r3, [r3, #12]
 80011a4:	b29b      	uxth	r3, r3
 80011a6:	b21b      	sxth	r3, r3
 80011a8:	2b00      	cmp	r3, #0
 80011aa:	da0c      	bge.n	80011c6 <USART_Init+0xe6>
  {
    /* Integer part computing in case Oversampling mode is 8 Samples */
    integerdivider = ((25 * apbclock) / (2 * (USART_InitStruct->USART_BaudRate)));    
 80011ac:	6aba      	ldr	r2, [r7, #40]	; 0x28
 80011ae:	4613      	mov	r3, r2
 80011b0:	009b      	lsls	r3, r3, #2
 80011b2:	4413      	add	r3, r2
 80011b4:	009a      	lsls	r2, r3, #2
 80011b6:	441a      	add	r2, r3
 80011b8:	683b      	ldr	r3, [r7, #0]
 80011ba:	681b      	ldr	r3, [r3, #0]
 80011bc:	005b      	lsls	r3, r3, #1
 80011be:	fbb2 f3f3 	udiv	r3, r2, r3
 80011c2:	627b      	str	r3, [r7, #36]	; 0x24
 80011c4:	e00b      	b.n	80011de <USART_Init+0xfe>
  }
  else /* if ((USARTx->CR1 & CR1_OVER8_Set) == 0) */
  {
    /* Integer part computing in case Oversampling mode is 16 Samples */
    integerdivider = ((25 * apbclock) / (4 * (USART_InitStruct->USART_BaudRate)));    
 80011c6:	6aba      	ldr	r2, [r7, #40]	; 0x28
 80011c8:	4613      	mov	r3, r2
 80011ca:	009b      	lsls	r3, r3, #2
 80011cc:	4413      	add	r3, r2
 80011ce:	009a      	lsls	r2, r3, #2
 80011d0:	441a      	add	r2, r3
 80011d2:	683b      	ldr	r3, [r7, #0]
 80011d4:	681b      	ldr	r3, [r3, #0]
 80011d6:	009b      	lsls	r3, r3, #2
 80011d8:	fbb2 f3f3 	udiv	r3, r2, r3
 80011dc:	627b      	str	r3, [r7, #36]	; 0x24
  }
  tmpreg = (integerdivider / 100) << 4;
 80011de:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80011e0:	4a1b      	ldr	r2, [pc, #108]	; (8001250 <USART_Init+0x170>)
 80011e2:	fba2 2303 	umull	r2, r3, r2, r3
 80011e6:	095b      	lsrs	r3, r3, #5
 80011e8:	011b      	lsls	r3, r3, #4
 80011ea:	62fb      	str	r3, [r7, #44]	; 0x2c

  /* Determine the fractional part */
  fractionaldivider = integerdivider - (100 * (tmpreg >> 4));
 80011ec:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80011ee:	091b      	lsrs	r3, r3, #4
 80011f0:	2264      	movs	r2, #100	; 0x64
 80011f2:	fb02 f303 	mul.w	r3, r2, r3
 80011f6:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80011f8:	1ad3      	subs	r3, r2, r3
 80011fa:	623b      	str	r3, [r7, #32]

  /* Implement the fractional part in the register */
  if ((USARTx->CR1 & CR1_OVER8_Set) != 0)
 80011fc:	687b      	ldr	r3, [r7, #4]
 80011fe:	899b      	ldrh	r3, [r3, #12]
 8001200:	b29b      	uxth	r3, r3
 8001202:	b21b      	sxth	r3, r3
 8001204:	2b00      	cmp	r3, #0
 8001206:	da0c      	bge.n	8001222 <USART_Init+0x142>
  {
    tmpreg |= ((((fractionaldivider * 8) + 50) / 100)) & ((uint8_t)0x07);
 8001208:	6a3b      	ldr	r3, [r7, #32]
 800120a:	00db      	lsls	r3, r3, #3
 800120c:	3332      	adds	r3, #50	; 0x32
 800120e:	4a10      	ldr	r2, [pc, #64]	; (8001250 <USART_Init+0x170>)
 8001210:	fba2 2303 	umull	r2, r3, r2, r3
 8001214:	095b      	lsrs	r3, r3, #5
 8001216:	f003 0307 	and.w	r3, r3, #7
 800121a:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800121c:	4313      	orrs	r3, r2
 800121e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8001220:	e00b      	b.n	800123a <USART_Init+0x15a>
  }
  else /* if ((USARTx->CR1 & CR1_OVER8_Set) == 0) */
  {
    tmpreg |= ((((fractionaldivider * 16) + 50) / 100)) & ((uint8_t)0x0F);
 8001222:	6a3b      	ldr	r3, [r7, #32]
 8001224:	011b      	lsls	r3, r3, #4
 8001226:	3332      	adds	r3, #50	; 0x32
 8001228:	4a09      	ldr	r2, [pc, #36]	; (8001250 <USART_Init+0x170>)
 800122a:	fba2 2303 	umull	r2, r3, r2, r3
 800122e:	095b      	lsrs	r3, r3, #5
 8001230:	f003 030f 	and.w	r3, r3, #15
 8001234:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8001236:	4313      	orrs	r3, r2
 8001238:	62fb      	str	r3, [r7, #44]	; 0x2c
  }
  
  /* Write to USART BRR */
  USARTx->BRR = (uint16_t)tmpreg;
 800123a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800123c:	b29a      	uxth	r2, r3
 800123e:	687b      	ldr	r3, [r7, #4]
 8001240:	811a      	strh	r2, [r3, #8]
}
 8001242:	bf00      	nop
 8001244:	3730      	adds	r7, #48	; 0x30
 8001246:	46bd      	mov	sp, r7
 8001248:	bd80      	pop	{r7, pc}
 800124a:	bf00      	nop
 800124c:	40013800 	.word	0x40013800
 8001250:	51eb851f 	.word	0x51eb851f

08001254 <USART_Cmd>:
  * @param  NewState: new state of the USARTx peripheral.
  *         This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void USART_Cmd(USART_TypeDef* USARTx, FunctionalState NewState)
{
 8001254:	b480      	push	{r7}
 8001256:	b083      	sub	sp, #12
 8001258:	af00      	add	r7, sp, #0
 800125a:	6078      	str	r0, [r7, #4]
 800125c:	460b      	mov	r3, r1
 800125e:	70fb      	strb	r3, [r7, #3]
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  
  if (NewState != DISABLE)
 8001260:	78fb      	ldrb	r3, [r7, #3]
 8001262:	2b00      	cmp	r3, #0
 8001264:	d008      	beq.n	8001278 <USART_Cmd+0x24>
  {
    /* Enable the selected USART by setting the UE bit in the CR1 register */
    USARTx->CR1 |= CR1_UE_Set;
 8001266:	687b      	ldr	r3, [r7, #4]
 8001268:	899b      	ldrh	r3, [r3, #12]
 800126a:	b29b      	uxth	r3, r3
 800126c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8001270:	b29a      	uxth	r2, r3
 8001272:	687b      	ldr	r3, [r7, #4]
 8001274:	819a      	strh	r2, [r3, #12]
  else
  {
    /* Disable the selected USART by clearing the UE bit in the CR1 register */
    USARTx->CR1 &= CR1_UE_Reset;
  }
}
 8001276:	e007      	b.n	8001288 <USART_Cmd+0x34>
    USARTx->CR1 &= CR1_UE_Reset;
 8001278:	687b      	ldr	r3, [r7, #4]
 800127a:	899b      	ldrh	r3, [r3, #12]
 800127c:	b29b      	uxth	r3, r3
 800127e:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8001282:	b29a      	uxth	r2, r3
 8001284:	687b      	ldr	r3, [r7, #4]
 8001286:	819a      	strh	r2, [r3, #12]
}
 8001288:	bf00      	nop
 800128a:	370c      	adds	r7, #12
 800128c:	46bd      	mov	sp, r7
 800128e:	bc80      	pop	{r7}
 8001290:	4770      	bx	lr

08001292 <USART_SendData>:
  *   USART1, USART2, USART3, UART4 or UART5.
  * @param  Data: the data to transmit.
  * @retval None
  */
void USART_SendData(USART_TypeDef* USARTx, uint16_t Data)
{
 8001292:	b480      	push	{r7}
 8001294:	b083      	sub	sp, #12
 8001296:	af00      	add	r7, sp, #0
 8001298:	6078      	str	r0, [r7, #4]
 800129a:	460b      	mov	r3, r1
 800129c:	807b      	strh	r3, [r7, #2]
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
  assert_param(IS_USART_DATA(Data)); 
    
  /* Transmit Data */
  USARTx->DR = (Data & (uint16_t)0x01FF);
 800129e:	887b      	ldrh	r3, [r7, #2]
 80012a0:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80012a4:	b29a      	uxth	r2, r3
 80012a6:	687b      	ldr	r3, [r7, #4]
 80012a8:	809a      	strh	r2, [r3, #4]
}
 80012aa:	bf00      	nop
 80012ac:	370c      	adds	r7, #12
 80012ae:	46bd      	mov	sp, r7
 80012b0:	bc80      	pop	{r7}
 80012b2:	4770      	bx	lr

080012b4 <USART_GetFlagStatus>:
  *     @arg USART_FLAG_FE:   Framing Error flag
  *     @arg USART_FLAG_PE:   Parity Error flag
  * @retval The new state of USART_FLAG (SET or RESET).
  */
FlagStatus USART_GetFlagStatus(USART_TypeDef* USARTx, uint16_t USART_FLAG)
{
 80012b4:	b480      	push	{r7}
 80012b6:	b085      	sub	sp, #20
 80012b8:	af00      	add	r7, sp, #0
 80012ba:	6078      	str	r0, [r7, #4]
 80012bc:	460b      	mov	r3, r1
 80012be:	807b      	strh	r3, [r7, #2]
  FlagStatus bitstatus = RESET;
 80012c0:	2300      	movs	r3, #0
 80012c2:	73fb      	strb	r3, [r7, #15]
  if (USART_FLAG == USART_FLAG_CTS)
  {
    assert_param(IS_USART_123_PERIPH(USARTx));
  }  
  
  if ((USARTx->SR & USART_FLAG) != (uint16_t)RESET)
 80012c4:	687b      	ldr	r3, [r7, #4]
 80012c6:	881b      	ldrh	r3, [r3, #0]
 80012c8:	b29a      	uxth	r2, r3
 80012ca:	887b      	ldrh	r3, [r7, #2]
 80012cc:	4013      	ands	r3, r2
 80012ce:	b29b      	uxth	r3, r3
 80012d0:	2b00      	cmp	r3, #0
 80012d2:	d002      	beq.n	80012da <USART_GetFlagStatus+0x26>
  {
    bitstatus = SET;
 80012d4:	2301      	movs	r3, #1
 80012d6:	73fb      	strb	r3, [r7, #15]
 80012d8:	e001      	b.n	80012de <USART_GetFlagStatus+0x2a>
  }
  else
  {
    bitstatus = RESET;
 80012da:	2300      	movs	r3, #0
 80012dc:	73fb      	strb	r3, [r7, #15]
  }
  return bitstatus;
 80012de:	7bfb      	ldrb	r3, [r7, #15]
}
 80012e0:	4618      	mov	r0, r3
 80012e2:	3714      	adds	r7, #20
 80012e4:	46bd      	mov	sp, r7
 80012e6:	bc80      	pop	{r7}
 80012e8:	4770      	bx	lr
	...

080012ec <Conf_GPIO>:
#include "conf_gpio.h"

void Conf_GPIO(void)
{
 80012ec:	b580      	push	{r7, lr}
 80012ee:	b082      	sub	sp, #8
 80012f0:	af00      	add	r7, sp, #0
  RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);
 80012f2:	2101      	movs	r1, #1
 80012f4:	2008      	movs	r0, #8
 80012f6:	f7ff feb7 	bl	8001068 <RCC_APB2PeriphClockCmd>
  RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC, ENABLE);
 80012fa:	2101      	movs	r1, #1
 80012fc:	2010      	movs	r0, #16
 80012fe:	f7ff feb3 	bl	8001068 <RCC_APB2PeriphClockCmd>

  GPIO_InitTypeDef gpio_structB;
  gpio_structB.GPIO_Mode = GPIO_Mode_AF_PP;
 8001302:	2318      	movs	r3, #24
 8001304:	71fb      	strb	r3, [r7, #7]
  gpio_structB.GPIO_Pin = GPIO_Pin_10;
 8001306:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800130a:	80bb      	strh	r3, [r7, #4]
  gpio_structB.GPIO_Speed = GPIO_Speed_2MHz;
 800130c:	2302      	movs	r3, #2
 800130e:	71bb      	strb	r3, [r7, #6]
  GPIO_Init(GPIOB, &gpio_structB);
 8001310:	1d3b      	adds	r3, r7, #4
 8001312:	4619      	mov	r1, r3
 8001314:	480e      	ldr	r0, [pc, #56]	; (8001350 <Conf_GPIO+0x64>)
 8001316:	f7ff fd3b 	bl	8000d90 <GPIO_Init>

  gpio_structB.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 800131a:	2304      	movs	r3, #4
 800131c:	71fb      	strb	r3, [r7, #7]
  gpio_structB.GPIO_Pin = GPIO_Pin_11;
 800131e:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8001322:	80bb      	strh	r3, [r7, #4]
  GPIO_Init(GPIOB, &gpio_structB);
 8001324:	1d3b      	adds	r3, r7, #4
 8001326:	4619      	mov	r1, r3
 8001328:	4809      	ldr	r0, [pc, #36]	; (8001350 <Conf_GPIO+0x64>)
 800132a:	f7ff fd31 	bl	8000d90 <GPIO_Init>

  GPIO_InitTypeDef gpio_structC;
  gpio_structC.GPIO_Mode = GPIO_Mode_Out_PP;
 800132e:	2310      	movs	r3, #16
 8001330:	70fb      	strb	r3, [r7, #3]
  gpio_structC.GPIO_Pin = GPIO_Pin_13;
 8001332:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001336:	803b      	strh	r3, [r7, #0]
  gpio_structC.GPIO_Speed = GPIO_Speed_2MHz;
 8001338:	2302      	movs	r3, #2
 800133a:	70bb      	strb	r3, [r7, #2]
  GPIO_Init(GPIOC, &gpio_structC);
 800133c:	463b      	mov	r3, r7
 800133e:	4619      	mov	r1, r3
 8001340:	4804      	ldr	r0, [pc, #16]	; (8001354 <Conf_GPIO+0x68>)
 8001342:	f7ff fd25 	bl	8000d90 <GPIO_Init>
}
 8001346:	bf00      	nop
 8001348:	3708      	adds	r7, #8
 800134a:	46bd      	mov	sp, r7
 800134c:	bd80      	pop	{r7, pc}
 800134e:	bf00      	nop
 8001350:	40010c00 	.word	0x40010c00
 8001354:	40011000 	.word	0x40011000

08001358 <main>:

void Conf_USART3(void);
void Print_USART3(char *string);

int main(void)
{
 8001358:	b580      	push	{r7, lr}
 800135a:	b08e      	sub	sp, #56	; 0x38
 800135c:	af00      	add	r7, sp, #0
  Conf_GPIO();
 800135e:	f7ff ffc5 	bl	80012ec <Conf_GPIO>
  Conf_USART3();
 8001362:	f000 f839 	bl	80013d8 <Conf_USART3>

  char msg[50];

  sprintf(msg, "Hello, World %d\r\n", 123);
 8001366:	463b      	mov	r3, r7
 8001368:	227b      	movs	r2, #123	; 0x7b
 800136a:	4909      	ldr	r1, [pc, #36]	; (8001390 <main+0x38>)
 800136c:	4618      	mov	r0, r3
 800136e:	f000 f989 	bl	8001684 <sprintf>

  while(1)
  {
    Print_USART3(msg);
 8001372:	463b      	mov	r3, r7
 8001374:	4618      	mov	r0, r3
 8001376:	f000 f80f 	bl	8001398 <Print_USART3>
    for(int i = 0; i < 100000; i++);
 800137a:	2300      	movs	r3, #0
 800137c:	637b      	str	r3, [r7, #52]	; 0x34
 800137e:	e002      	b.n	8001386 <main+0x2e>
 8001380:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8001382:	3301      	adds	r3, #1
 8001384:	637b      	str	r3, [r7, #52]	; 0x34
 8001386:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8001388:	4a02      	ldr	r2, [pc, #8]	; (8001394 <main+0x3c>)
 800138a:	4293      	cmp	r3, r2
 800138c:	ddf8      	ble.n	8001380 <main+0x28>
    Print_USART3(msg);
 800138e:	e7f0      	b.n	8001372 <main+0x1a>
 8001390:	080044b8 	.word	0x080044b8
 8001394:	0001869f 	.word	0x0001869f

08001398 <Print_USART3>:

  return 0;
}

void Print_USART3(char *string)
{
 8001398:	b580      	push	{r7, lr}
 800139a:	b082      	sub	sp, #8
 800139c:	af00      	add	r7, sp, #0
 800139e:	6078      	str	r0, [r7, #4]
  while(*string != 0)
 80013a0:	e010      	b.n	80013c4 <Print_USART3+0x2c>
  {
    while(!USART_GetFlagStatus(USART3, USART_FLAG_TXE));
 80013a2:	bf00      	nop
 80013a4:	2180      	movs	r1, #128	; 0x80
 80013a6:	480b      	ldr	r0, [pc, #44]	; (80013d4 <Print_USART3+0x3c>)
 80013a8:	f7ff ff84 	bl	80012b4 <USART_GetFlagStatus>
 80013ac:	4603      	mov	r3, r0
 80013ae:	2b00      	cmp	r3, #0
 80013b0:	d0f8      	beq.n	80013a4 <Print_USART3+0xc>
    USART_SendData(USART3, *string++);
 80013b2:	687b      	ldr	r3, [r7, #4]
 80013b4:	1c5a      	adds	r2, r3, #1
 80013b6:	607a      	str	r2, [r7, #4]
 80013b8:	781b      	ldrb	r3, [r3, #0]
 80013ba:	b29b      	uxth	r3, r3
 80013bc:	4619      	mov	r1, r3
 80013be:	4805      	ldr	r0, [pc, #20]	; (80013d4 <Print_USART3+0x3c>)
 80013c0:	f7ff ff67 	bl	8001292 <USART_SendData>
  while(*string != 0)
 80013c4:	687b      	ldr	r3, [r7, #4]
 80013c6:	781b      	ldrb	r3, [r3, #0]
 80013c8:	2b00      	cmp	r3, #0
 80013ca:	d1ea      	bne.n	80013a2 <Print_USART3+0xa>
  }
}
 80013cc:	bf00      	nop
 80013ce:	3708      	adds	r7, #8
 80013d0:	46bd      	mov	sp, r7
 80013d2:	bd80      	pop	{r7, pc}
 80013d4:	40004800 	.word	0x40004800

080013d8 <Conf_USART3>:

void Conf_USART3(void)
{
 80013d8:	b580      	push	{r7, lr}
 80013da:	b084      	sub	sp, #16
 80013dc:	af00      	add	r7, sp, #0
  RCC_APB1PeriphClockCmd(RCC_APB1Periph_USART3, ENABLE);
 80013de:	2101      	movs	r1, #1
 80013e0:	f44f 2080 	mov.w	r0, #262144	; 0x40000
 80013e4:	f7ff fe5e 	bl	80010a4 <RCC_APB1PeriphClockCmd>

  USART_InitTypeDef usart_struct;
  usart_struct.USART_BaudRate = 9600;
 80013e8:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 80013ec:	603b      	str	r3, [r7, #0]
  usart_struct.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 80013ee:	2300      	movs	r3, #0
 80013f0:	81bb      	strh	r3, [r7, #12]
  usart_struct.USART_Mode = USART_Mode_Tx | USART_Mode_Rx;
 80013f2:	230c      	movs	r3, #12
 80013f4:	817b      	strh	r3, [r7, #10]
  usart_struct.USART_Parity = USART_Parity_No;
 80013f6:	2300      	movs	r3, #0
 80013f8:	813b      	strh	r3, [r7, #8]
  usart_struct.USART_StopBits = USART_StopBits_1;
 80013fa:	2300      	movs	r3, #0
 80013fc:	80fb      	strh	r3, [r7, #6]
  usart_struct.USART_WordLength = USART_WordLength_8b;
 80013fe:	2300      	movs	r3, #0
 8001400:	80bb      	strh	r3, [r7, #4]
  USART_Init(USART3, &usart_struct);
 8001402:	463b      	mov	r3, r7
 8001404:	4619      	mov	r1, r3
 8001406:	4805      	ldr	r0, [pc, #20]	; (800141c <Conf_USART3+0x44>)
 8001408:	f7ff fe6a 	bl	80010e0 <USART_Init>

  USART_Cmd(USART3, ENABLE);
 800140c:	2101      	movs	r1, #1
 800140e:	4803      	ldr	r0, [pc, #12]	; (800141c <Conf_USART3+0x44>)
 8001410:	f7ff ff20 	bl	8001254 <USART_Cmd>
}
 8001414:	bf00      	nop
 8001416:	3710      	adds	r7, #16
 8001418:	46bd      	mov	sp, r7
 800141a:	bd80      	pop	{r7, pc}
 800141c:	40004800 	.word	0x40004800

08001420 <Reset_Handler>:

    .section	.text.Reset_Handler
	.weak	Reset_Handler
	.type	Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack    /* Atollic update: set stack pointer */
 8001420:	f8df d034 	ldr.w	sp, [pc, #52]	; 8001458 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */
  movs	r1, #0
 8001424:	2100      	movs	r1, #0
  b	LoopCopyDataInit
 8001426:	e003      	b.n	8001430 <LoopCopyDataInit>

08001428 <CopyDataInit>:

CopyDataInit:
	ldr	r3, =_sidata
 8001428:	4b0c      	ldr	r3, [pc, #48]	; (800145c <LoopFillZerobss+0x18>)
	ldr	r3, [r3, r1]
 800142a:	585b      	ldr	r3, [r3, r1]
	str	r3, [r0, r1]
 800142c:	5043      	str	r3, [r0, r1]
	adds	r1, r1, #4
 800142e:	3104      	adds	r1, #4

08001430 <LoopCopyDataInit>:

LoopCopyDataInit:
	ldr	r0, =_sdata
 8001430:	480b      	ldr	r0, [pc, #44]	; (8001460 <LoopFillZerobss+0x1c>)
	ldr	r3, =_edata
 8001432:	4b0c      	ldr	r3, [pc, #48]	; (8001464 <LoopFillZerobss+0x20>)
	adds	r2, r0, r1
 8001434:	1842      	adds	r2, r0, r1
	cmp	r2, r3
 8001436:	429a      	cmp	r2, r3
	bcc	CopyDataInit
 8001438:	d3f6      	bcc.n	8001428 <CopyDataInit>
	ldr	r2, =_sbss
 800143a:	4a0b      	ldr	r2, [pc, #44]	; (8001468 <LoopFillZerobss+0x24>)
	b	LoopFillZerobss
 800143c:	e002      	b.n	8001444 <LoopFillZerobss>

0800143e <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
	movs	r3, #0
 800143e:	2300      	movs	r3, #0
	str	r3, [r2], #4
 8001440:	f842 3b04 	str.w	r3, [r2], #4

08001444 <LoopFillZerobss>:

LoopFillZerobss:
	ldr	r3, = _ebss
 8001444:	4b09      	ldr	r3, [pc, #36]	; (800146c <LoopFillZerobss+0x28>)
	cmp	r2, r3
 8001446:	429a      	cmp	r2, r3
	bcc	FillZerobss
 8001448:	d3f9      	bcc.n	800143e <FillZerobss>

/* Call the clock system intitialization function.*/
    bl  SystemInit
 800144a:	f000 f83d 	bl	80014c8 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800144e:	f000 f8f5 	bl	800163c <__libc_init_array>
/* Call the application's entry point.*/
	bl	main
 8001452:	f7ff ff81 	bl	8001358 <main>
	bx	lr
 8001456:	4770      	bx	lr
  ldr   sp, =_estack    /* Atollic update: set stack pointer */
 8001458:	20005000 	.word	0x20005000
	ldr	r3, =_sidata
 800145c:	08004748 	.word	0x08004748
	ldr	r0, =_sdata
 8001460:	20000000 	.word	0x20000000
	ldr	r3, =_edata
 8001464:	20000684 	.word	0x20000684
	ldr	r2, =_sbss
 8001468:	20000684 	.word	0x20000684
	ldr	r3, = _ebss
 800146c:	200006e8 	.word	0x200006e8

08001470 <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section	.text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
	b	Infinite_Loop
 8001470:	e7fe      	b.n	8001470 <ADC1_2_IRQHandler>

08001472 <NMI_Handler>:
  * @brief  This function handles NMI exception.
  * @param  None
  * @retval None
  */
void NMI_Handler(void)
{
 8001472:	b480      	push	{r7}
 8001474:	af00      	add	r7, sp, #0
}
 8001476:	bf00      	nop
 8001478:	46bd      	mov	sp, r7
 800147a:	bc80      	pop	{r7}
 800147c:	4770      	bx	lr

0800147e <HardFault_Handler>:
  * @brief  This function handles Hard Fault exception.
  * @param  None
  * @retval None
  */
void HardFault_Handler(void)
{
 800147e:	b480      	push	{r7}
 8001480:	af00      	add	r7, sp, #0
  /* Go to infinite loop when Hard Fault exception occurs */
  while (1)
 8001482:	e7fe      	b.n	8001482 <HardFault_Handler+0x4>

08001484 <MemManage_Handler>:
  * @brief  This function handles Memory Manage exception.
  * @param  None
  * @retval None
  */
void MemManage_Handler(void)
{
 8001484:	b480      	push	{r7}
 8001486:	af00      	add	r7, sp, #0
  /* Go to infinite loop when Memory Manage exception occurs */
  while (1)
 8001488:	e7fe      	b.n	8001488 <MemManage_Handler+0x4>

0800148a <BusFault_Handler>:
  * @brief  This function handles Bus Fault exception.
  * @param  None
  * @retval None
  */
void BusFault_Handler(void)
{
 800148a:	b480      	push	{r7}
 800148c:	af00      	add	r7, sp, #0
  /* Go to infinite loop when Bus Fault exception occurs */
  while (1)
 800148e:	e7fe      	b.n	800148e <BusFault_Handler+0x4>

08001490 <UsageFault_Handler>:
  * @brief  This function handles Usage Fault exception.
  * @param  None
  * @retval None
  */
void UsageFault_Handler(void)
{
 8001490:	b480      	push	{r7}
 8001492:	af00      	add	r7, sp, #0
  /* Go to infinite loop when Usage Fault exception occurs */
  while (1)
 8001494:	e7fe      	b.n	8001494 <UsageFault_Handler+0x4>

08001496 <SVC_Handler>:
  * @brief  This function handles SVCall exception.
  * @param  None
  * @retval None
  */
void SVC_Handler(void)
{
 8001496:	b480      	push	{r7}
 8001498:	af00      	add	r7, sp, #0
}
 800149a:	bf00      	nop
 800149c:	46bd      	mov	sp, r7
 800149e:	bc80      	pop	{r7}
 80014a0:	4770      	bx	lr

080014a2 <DebugMon_Handler>:
  * @brief  This function handles Debug Monitor exception.
  * @param  None
  * @retval None
  */
void DebugMon_Handler(void)
{
 80014a2:	b480      	push	{r7}
 80014a4:	af00      	add	r7, sp, #0
}
 80014a6:	bf00      	nop
 80014a8:	46bd      	mov	sp, r7
 80014aa:	bc80      	pop	{r7}
 80014ac:	4770      	bx	lr

080014ae <PendSV_Handler>:
  * @brief  This function handles PendSVC exception.
  * @param  None
  * @retval None
  */
void PendSV_Handler(void)
{
 80014ae:	b480      	push	{r7}
 80014b0:	af00      	add	r7, sp, #0
}
 80014b2:	bf00      	nop
 80014b4:	46bd      	mov	sp, r7
 80014b6:	bc80      	pop	{r7}
 80014b8:	4770      	bx	lr

080014ba <SysTick_Handler>:
  * @brief  This function handles SysTick Handler.
  * @param  None
  * @retval None
  */
void SysTick_Handler(void)
{
 80014ba:	b480      	push	{r7}
 80014bc:	af00      	add	r7, sp, #0
}
 80014be:	bf00      	nop
 80014c0:	46bd      	mov	sp, r7
 80014c2:	bc80      	pop	{r7}
 80014c4:	4770      	bx	lr
	...

080014c8 <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 80014c8:	b580      	push	{r7, lr}
 80014ca:	af00      	add	r7, sp, #0
  /* Reset the RCC clock configuration to the default reset state(for debug purpose) */
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;
 80014cc:	4a15      	ldr	r2, [pc, #84]	; (8001524 <SystemInit+0x5c>)
 80014ce:	4b15      	ldr	r3, [pc, #84]	; (8001524 <SystemInit+0x5c>)
 80014d0:	681b      	ldr	r3, [r3, #0]
 80014d2:	f043 0301 	orr.w	r3, r3, #1
 80014d6:	6013      	str	r3, [r2, #0]

  /* Reset SW, HPRE, PPRE1, PPRE2, ADCPRE and MCO bits */
#ifndef STM32F10X_CL
  RCC->CFGR &= (uint32_t)0xF8FF0000;
 80014d8:	4912      	ldr	r1, [pc, #72]	; (8001524 <SystemInit+0x5c>)
 80014da:	4b12      	ldr	r3, [pc, #72]	; (8001524 <SystemInit+0x5c>)
 80014dc:	685a      	ldr	r2, [r3, #4]
 80014de:	4b12      	ldr	r3, [pc, #72]	; (8001528 <SystemInit+0x60>)
 80014e0:	4013      	ands	r3, r2
 80014e2:	604b      	str	r3, [r1, #4]
#else
  RCC->CFGR &= (uint32_t)0xF0FF0000;
#endif /* STM32F10X_CL */   
  
  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFFF;
 80014e4:	4a0f      	ldr	r2, [pc, #60]	; (8001524 <SystemInit+0x5c>)
 80014e6:	4b0f      	ldr	r3, [pc, #60]	; (8001524 <SystemInit+0x5c>)
 80014e8:	681b      	ldr	r3, [r3, #0]
 80014ea:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 80014ee:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80014f2:	6013      	str	r3, [r2, #0]

  /* Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
 80014f4:	4a0b      	ldr	r2, [pc, #44]	; (8001524 <SystemInit+0x5c>)
 80014f6:	4b0b      	ldr	r3, [pc, #44]	; (8001524 <SystemInit+0x5c>)
 80014f8:	681b      	ldr	r3, [r3, #0]
 80014fa:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80014fe:	6013      	str	r3, [r2, #0]

  /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE/OTGFSPRE bits */
  RCC->CFGR &= (uint32_t)0xFF80FFFF;
 8001500:	4a08      	ldr	r2, [pc, #32]	; (8001524 <SystemInit+0x5c>)
 8001502:	4b08      	ldr	r3, [pc, #32]	; (8001524 <SystemInit+0x5c>)
 8001504:	685b      	ldr	r3, [r3, #4]
 8001506:	f423 03fe 	bic.w	r3, r3, #8323072	; 0x7f0000
 800150a:	6053      	str	r3, [r2, #4]

  /* Reset CFGR2 register */
  RCC->CFGR2 = 0x00000000;      
#else
  /* Disable all interrupts and clear pending bits  */
  RCC->CIR = 0x009F0000;
 800150c:	4b05      	ldr	r3, [pc, #20]	; (8001524 <SystemInit+0x5c>)
 800150e:	f44f 021f 	mov.w	r2, #10420224	; 0x9f0000
 8001512:	609a      	str	r2, [r3, #8]
  #endif /* DATA_IN_ExtSRAM */
#endif 

  /* Configure the System clock frequency, HCLK, PCLK2 and PCLK1 prescalers */
  /* Configure the Flash Latency cycles and enable prefetch buffer */
  SetSysClock();
 8001514:	f000 f80c 	bl	8001530 <SetSysClock>

#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH. */
 8001518:	4b04      	ldr	r3, [pc, #16]	; (800152c <SystemInit+0x64>)
 800151a:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800151e:	609a      	str	r2, [r3, #8]
#endif 
}
 8001520:	bf00      	nop
 8001522:	bd80      	pop	{r7, pc}
 8001524:	40021000 	.word	0x40021000
 8001528:	f8ff0000 	.word	0xf8ff0000
 800152c:	e000ed00 	.word	0xe000ed00

08001530 <SetSysClock>:
  * @brief  Configures the System clock frequency, HCLK, PCLK2 and PCLK1 prescalers.
  * @param  None
  * @retval None
  */
static void SetSysClock(void)
{
 8001530:	b580      	push	{r7, lr}
 8001532:	af00      	add	r7, sp, #0
#elif defined SYSCLK_FREQ_48MHz
  SetSysClockTo48();
#elif defined SYSCLK_FREQ_56MHz
  SetSysClockTo56();  
#elif defined SYSCLK_FREQ_72MHz
  SetSysClockTo72();
 8001534:	f000 f802 	bl	800153c <SetSysClockTo72>
#endif
 
 /* If none of the define above is enabled, the HSI is used as System clock
    source (default after reset) */ 
}
 8001538:	bf00      	nop
 800153a:	bd80      	pop	{r7, pc}

0800153c <SetSysClockTo72>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
static void SetSysClockTo72(void)
{
 800153c:	b480      	push	{r7}
 800153e:	b083      	sub	sp, #12
 8001540:	af00      	add	r7, sp, #0
  __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 8001542:	2300      	movs	r3, #0
 8001544:	607b      	str	r3, [r7, #4]
 8001546:	2300      	movs	r3, #0
 8001548:	603b      	str	r3, [r7, #0]
  
  /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
  /* Enable HSE */    
  RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 800154a:	4a3a      	ldr	r2, [pc, #232]	; (8001634 <SetSysClockTo72+0xf8>)
 800154c:	4b39      	ldr	r3, [pc, #228]	; (8001634 <SetSysClockTo72+0xf8>)
 800154e:	681b      	ldr	r3, [r3, #0]
 8001550:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001554:	6013      	str	r3, [r2, #0]
 
  /* Wait till HSE is ready and if Time out is reached exit */
  do
  {
    HSEStatus = RCC->CR & RCC_CR_HSERDY;
 8001556:	4b37      	ldr	r3, [pc, #220]	; (8001634 <SetSysClockTo72+0xf8>)
 8001558:	681b      	ldr	r3, [r3, #0]
 800155a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800155e:	603b      	str	r3, [r7, #0]
    StartUpCounter++;  
 8001560:	687b      	ldr	r3, [r7, #4]
 8001562:	3301      	adds	r3, #1
 8001564:	607b      	str	r3, [r7, #4]
  } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 8001566:	683b      	ldr	r3, [r7, #0]
 8001568:	2b00      	cmp	r3, #0
 800156a:	d103      	bne.n	8001574 <SetSysClockTo72+0x38>
 800156c:	687b      	ldr	r3, [r7, #4]
 800156e:	f5b3 6fa0 	cmp.w	r3, #1280	; 0x500
 8001572:	d1f0      	bne.n	8001556 <SetSysClockTo72+0x1a>

  if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 8001574:	4b2f      	ldr	r3, [pc, #188]	; (8001634 <SetSysClockTo72+0xf8>)
 8001576:	681b      	ldr	r3, [r3, #0]
 8001578:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800157c:	2b00      	cmp	r3, #0
 800157e:	d002      	beq.n	8001586 <SetSysClockTo72+0x4a>
  {
    HSEStatus = (uint32_t)0x01;
 8001580:	2301      	movs	r3, #1
 8001582:	603b      	str	r3, [r7, #0]
 8001584:	e001      	b.n	800158a <SetSysClockTo72+0x4e>
  }
  else
  {
    HSEStatus = (uint32_t)0x00;
 8001586:	2300      	movs	r3, #0
 8001588:	603b      	str	r3, [r7, #0]
  }  

  if (HSEStatus == (uint32_t)0x01)
 800158a:	683b      	ldr	r3, [r7, #0]
 800158c:	2b01      	cmp	r3, #1
 800158e:	d14b      	bne.n	8001628 <SetSysClockTo72+0xec>
  {
    /* Enable Prefetch Buffer */
    FLASH->ACR |= FLASH_ACR_PRFTBE;
 8001590:	4a29      	ldr	r2, [pc, #164]	; (8001638 <SetSysClockTo72+0xfc>)
 8001592:	4b29      	ldr	r3, [pc, #164]	; (8001638 <SetSysClockTo72+0xfc>)
 8001594:	681b      	ldr	r3, [r3, #0]
 8001596:	f043 0310 	orr.w	r3, r3, #16
 800159a:	6013      	str	r3, [r2, #0]

    /* Flash 2 wait state */
    FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 800159c:	4a26      	ldr	r2, [pc, #152]	; (8001638 <SetSysClockTo72+0xfc>)
 800159e:	4b26      	ldr	r3, [pc, #152]	; (8001638 <SetSysClockTo72+0xfc>)
 80015a0:	681b      	ldr	r3, [r3, #0]
 80015a2:	f023 0303 	bic.w	r3, r3, #3
 80015a6:	6013      	str	r3, [r2, #0]
    FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_2;    
 80015a8:	4a23      	ldr	r2, [pc, #140]	; (8001638 <SetSysClockTo72+0xfc>)
 80015aa:	4b23      	ldr	r3, [pc, #140]	; (8001638 <SetSysClockTo72+0xfc>)
 80015ac:	681b      	ldr	r3, [r3, #0]
 80015ae:	f043 0302 	orr.w	r3, r3, #2
 80015b2:	6013      	str	r3, [r2, #0]

 
    /* HCLK = SYSCLK */
    RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 80015b4:	4a1f      	ldr	r2, [pc, #124]	; (8001634 <SetSysClockTo72+0xf8>)
 80015b6:	4b1f      	ldr	r3, [pc, #124]	; (8001634 <SetSysClockTo72+0xf8>)
 80015b8:	685b      	ldr	r3, [r3, #4]
 80015ba:	6053      	str	r3, [r2, #4]
      
    /* PCLK2 = HCLK */
    RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 80015bc:	4a1d      	ldr	r2, [pc, #116]	; (8001634 <SetSysClockTo72+0xf8>)
 80015be:	4b1d      	ldr	r3, [pc, #116]	; (8001634 <SetSysClockTo72+0xf8>)
 80015c0:	685b      	ldr	r3, [r3, #4]
 80015c2:	6053      	str	r3, [r2, #4]
    
    /* PCLK1 = HCLK */
    RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV2;
 80015c4:	4a1b      	ldr	r2, [pc, #108]	; (8001634 <SetSysClockTo72+0xf8>)
 80015c6:	4b1b      	ldr	r3, [pc, #108]	; (8001634 <SetSysClockTo72+0xf8>)
 80015c8:	685b      	ldr	r3, [r3, #4]
 80015ca:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80015ce:	6053      	str	r3, [r2, #4]
    RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
    RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
                            RCC_CFGR_PLLMULL9); 
#else    
    /*  PLL configuration: PLLCLK = HSE * 9 = 72 MHz */
    RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE |
 80015d0:	4a18      	ldr	r2, [pc, #96]	; (8001634 <SetSysClockTo72+0xf8>)
 80015d2:	4b18      	ldr	r3, [pc, #96]	; (8001634 <SetSysClockTo72+0xf8>)
 80015d4:	685b      	ldr	r3, [r3, #4]
 80015d6:	f423 137c 	bic.w	r3, r3, #4128768	; 0x3f0000
 80015da:	6053      	str	r3, [r2, #4]
                                        RCC_CFGR_PLLMULL));
    RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMULL9);
 80015dc:	4a15      	ldr	r2, [pc, #84]	; (8001634 <SetSysClockTo72+0xf8>)
 80015de:	4b15      	ldr	r3, [pc, #84]	; (8001634 <SetSysClockTo72+0xf8>)
 80015e0:	685b      	ldr	r3, [r3, #4]
 80015e2:	f443 13e8 	orr.w	r3, r3, #1900544	; 0x1d0000
 80015e6:	6053      	str	r3, [r2, #4]
#endif /* STM32F10X_CL */

    /* Enable PLL */
    RCC->CR |= RCC_CR_PLLON;
 80015e8:	4a12      	ldr	r2, [pc, #72]	; (8001634 <SetSysClockTo72+0xf8>)
 80015ea:	4b12      	ldr	r3, [pc, #72]	; (8001634 <SetSysClockTo72+0xf8>)
 80015ec:	681b      	ldr	r3, [r3, #0]
 80015ee:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80015f2:	6013      	str	r3, [r2, #0]

    /* Wait till PLL is ready */
    while((RCC->CR & RCC_CR_PLLRDY) == 0)
 80015f4:	bf00      	nop
 80015f6:	4b0f      	ldr	r3, [pc, #60]	; (8001634 <SetSysClockTo72+0xf8>)
 80015f8:	681b      	ldr	r3, [r3, #0]
 80015fa:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80015fe:	2b00      	cmp	r3, #0
 8001600:	d0f9      	beq.n	80015f6 <SetSysClockTo72+0xba>
    {
    }
    
    /* Select PLL as system clock source */
    RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 8001602:	4a0c      	ldr	r2, [pc, #48]	; (8001634 <SetSysClockTo72+0xf8>)
 8001604:	4b0b      	ldr	r3, [pc, #44]	; (8001634 <SetSysClockTo72+0xf8>)
 8001606:	685b      	ldr	r3, [r3, #4]
 8001608:	f023 0303 	bic.w	r3, r3, #3
 800160c:	6053      	str	r3, [r2, #4]
    RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 800160e:	4a09      	ldr	r2, [pc, #36]	; (8001634 <SetSysClockTo72+0xf8>)
 8001610:	4b08      	ldr	r3, [pc, #32]	; (8001634 <SetSysClockTo72+0xf8>)
 8001612:	685b      	ldr	r3, [r3, #4]
 8001614:	f043 0302 	orr.w	r3, r3, #2
 8001618:	6053      	str	r3, [r2, #4]

    /* Wait till PLL is used as system clock source */
    while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 800161a:	bf00      	nop
 800161c:	4b05      	ldr	r3, [pc, #20]	; (8001634 <SetSysClockTo72+0xf8>)
 800161e:	685b      	ldr	r3, [r3, #4]
 8001620:	f003 030c 	and.w	r3, r3, #12
 8001624:	2b08      	cmp	r3, #8
 8001626:	d1f9      	bne.n	800161c <SetSysClockTo72+0xe0>
  }
  else
  { /* If HSE fails to start-up, the application will have wrong clock 
         configuration. User can add here some code to deal with this error */
  }
}
 8001628:	bf00      	nop
 800162a:	370c      	adds	r7, #12
 800162c:	46bd      	mov	sp, r7
 800162e:	bc80      	pop	{r7}
 8001630:	4770      	bx	lr
 8001632:	bf00      	nop
 8001634:	40021000 	.word	0x40021000
 8001638:	40022000 	.word	0x40022000

0800163c <__libc_init_array>:
 800163c:	b570      	push	{r4, r5, r6, lr}
 800163e:	2500      	movs	r5, #0
 8001640:	4e0c      	ldr	r6, [pc, #48]	; (8001674 <__libc_init_array+0x38>)
 8001642:	4c0d      	ldr	r4, [pc, #52]	; (8001678 <__libc_init_array+0x3c>)
 8001644:	1ba4      	subs	r4, r4, r6
 8001646:	10a4      	asrs	r4, r4, #2
 8001648:	42a5      	cmp	r5, r4
 800164a:	d109      	bne.n	8001660 <__libc_init_array+0x24>
 800164c:	f002 ff28 	bl	80044a0 <_init>
 8001650:	2500      	movs	r5, #0
 8001652:	4e0a      	ldr	r6, [pc, #40]	; (800167c <__libc_init_array+0x40>)
 8001654:	4c0a      	ldr	r4, [pc, #40]	; (8001680 <__libc_init_array+0x44>)
 8001656:	1ba4      	subs	r4, r4, r6
 8001658:	10a4      	asrs	r4, r4, #2
 800165a:	42a5      	cmp	r5, r4
 800165c:	d105      	bne.n	800166a <__libc_init_array+0x2e>
 800165e:	bd70      	pop	{r4, r5, r6, pc}
 8001660:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8001664:	4798      	blx	r3
 8001666:	3501      	adds	r5, #1
 8001668:	e7ee      	b.n	8001648 <__libc_init_array+0xc>
 800166a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800166e:	4798      	blx	r3
 8001670:	3501      	adds	r5, #1
 8001672:	e7f2      	b.n	800165a <__libc_init_array+0x1e>
 8001674:	08004740 	.word	0x08004740
 8001678:	08004740 	.word	0x08004740
 800167c:	08004740 	.word	0x08004740
 8001680:	08004744 	.word	0x08004744

08001684 <sprintf>:
 8001684:	b40e      	push	{r1, r2, r3}
 8001686:	f44f 7102 	mov.w	r1, #520	; 0x208
 800168a:	b500      	push	{lr}
 800168c:	b09c      	sub	sp, #112	; 0x70
 800168e:	f8ad 1014 	strh.w	r1, [sp, #20]
 8001692:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8001696:	9104      	str	r1, [sp, #16]
 8001698:	9107      	str	r1, [sp, #28]
 800169a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800169e:	ab1d      	add	r3, sp, #116	; 0x74
 80016a0:	9002      	str	r0, [sp, #8]
 80016a2:	9006      	str	r0, [sp, #24]
 80016a4:	4808      	ldr	r0, [pc, #32]	; (80016c8 <sprintf+0x44>)
 80016a6:	f853 2b04 	ldr.w	r2, [r3], #4
 80016aa:	f8ad 1016 	strh.w	r1, [sp, #22]
 80016ae:	6800      	ldr	r0, [r0, #0]
 80016b0:	a902      	add	r1, sp, #8
 80016b2:	9301      	str	r3, [sp, #4]
 80016b4:	f000 f80a 	bl	80016cc <_svfprintf_r>
 80016b8:	2200      	movs	r2, #0
 80016ba:	9b02      	ldr	r3, [sp, #8]
 80016bc:	701a      	strb	r2, [r3, #0]
 80016be:	b01c      	add	sp, #112	; 0x70
 80016c0:	f85d eb04 	ldr.w	lr, [sp], #4
 80016c4:	b003      	add	sp, #12
 80016c6:	4770      	bx	lr
 80016c8:	20000014 	.word	0x20000014

080016cc <_svfprintf_r>:
 80016cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80016d0:	b0bf      	sub	sp, #252	; 0xfc
 80016d2:	4689      	mov	r9, r1
 80016d4:	4615      	mov	r5, r2
 80016d6:	461f      	mov	r7, r3
 80016d8:	4682      	mov	sl, r0
 80016da:	f001 fe29 	bl	8003330 <_localeconv_r>
 80016de:	6803      	ldr	r3, [r0, #0]
 80016e0:	4618      	mov	r0, r3
 80016e2:	9311      	str	r3, [sp, #68]	; 0x44
 80016e4:	f7fe fd34 	bl	8000150 <strlen>
 80016e8:	f8b9 300c 	ldrh.w	r3, [r9, #12]
 80016ec:	900a      	str	r0, [sp, #40]	; 0x28
 80016ee:	061b      	lsls	r3, r3, #24
 80016f0:	d518      	bpl.n	8001724 <_svfprintf_r+0x58>
 80016f2:	f8d9 3010 	ldr.w	r3, [r9, #16]
 80016f6:	b9ab      	cbnz	r3, 8001724 <_svfprintf_r+0x58>
 80016f8:	2140      	movs	r1, #64	; 0x40
 80016fa:	4650      	mov	r0, sl
 80016fc:	f001 fe2e 	bl	800335c <_malloc_r>
 8001700:	f8c9 0000 	str.w	r0, [r9]
 8001704:	f8c9 0010 	str.w	r0, [r9, #16]
 8001708:	b948      	cbnz	r0, 800171e <_svfprintf_r+0x52>
 800170a:	230c      	movs	r3, #12
 800170c:	f8ca 3000 	str.w	r3, [sl]
 8001710:	f04f 33ff 	mov.w	r3, #4294967295
 8001714:	930b      	str	r3, [sp, #44]	; 0x2c
 8001716:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8001718:	b03f      	add	sp, #252	; 0xfc
 800171a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800171e:	2340      	movs	r3, #64	; 0x40
 8001720:	f8c9 3014 	str.w	r3, [r9, #20]
 8001724:	2300      	movs	r3, #0
 8001726:	ac2e      	add	r4, sp, #184	; 0xb8
 8001728:	9421      	str	r4, [sp, #132]	; 0x84
 800172a:	9323      	str	r3, [sp, #140]	; 0x8c
 800172c:	9322      	str	r3, [sp, #136]	; 0x88
 800172e:	9509      	str	r5, [sp, #36]	; 0x24
 8001730:	9307      	str	r3, [sp, #28]
 8001732:	930d      	str	r3, [sp, #52]	; 0x34
 8001734:	930e      	str	r3, [sp, #56]	; 0x38
 8001736:	9315      	str	r3, [sp, #84]	; 0x54
 8001738:	9314      	str	r3, [sp, #80]	; 0x50
 800173a:	930b      	str	r3, [sp, #44]	; 0x2c
 800173c:	9312      	str	r3, [sp, #72]	; 0x48
 800173e:	9313      	str	r3, [sp, #76]	; 0x4c
 8001740:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8001742:	462b      	mov	r3, r5
 8001744:	f813 2b01 	ldrb.w	r2, [r3], #1
 8001748:	b112      	cbz	r2, 8001750 <_svfprintf_r+0x84>
 800174a:	2a25      	cmp	r2, #37	; 0x25
 800174c:	f040 8083 	bne.w	8001856 <_svfprintf_r+0x18a>
 8001750:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8001752:	1aee      	subs	r6, r5, r3
 8001754:	d00d      	beq.n	8001772 <_svfprintf_r+0xa6>
 8001756:	e884 0048 	stmia.w	r4, {r3, r6}
 800175a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800175c:	4433      	add	r3, r6
 800175e:	9323      	str	r3, [sp, #140]	; 0x8c
 8001760:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8001762:	3301      	adds	r3, #1
 8001764:	2b07      	cmp	r3, #7
 8001766:	9322      	str	r3, [sp, #136]	; 0x88
 8001768:	dc77      	bgt.n	800185a <_svfprintf_r+0x18e>
 800176a:	3408      	adds	r4, #8
 800176c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800176e:	4433      	add	r3, r6
 8001770:	930b      	str	r3, [sp, #44]	; 0x2c
 8001772:	782b      	ldrb	r3, [r5, #0]
 8001774:	2b00      	cmp	r3, #0
 8001776:	f000 8725 	beq.w	80025c4 <_svfprintf_r+0xef8>
 800177a:	2300      	movs	r3, #0
 800177c:	1c69      	adds	r1, r5, #1
 800177e:	461a      	mov	r2, r3
 8001780:	f04f 3bff 	mov.w	fp, #4294967295
 8001784:	461d      	mov	r5, r3
 8001786:	200a      	movs	r0, #10
 8001788:	f88d 3067 	strb.w	r3, [sp, #103]	; 0x67
 800178c:	930c      	str	r3, [sp, #48]	; 0x30
 800178e:	1c4e      	adds	r6, r1, #1
 8001790:	7809      	ldrb	r1, [r1, #0]
 8001792:	9609      	str	r6, [sp, #36]	; 0x24
 8001794:	9106      	str	r1, [sp, #24]
 8001796:	9906      	ldr	r1, [sp, #24]
 8001798:	3920      	subs	r1, #32
 800179a:	2958      	cmp	r1, #88	; 0x58
 800179c:	f200 8414 	bhi.w	8001fc8 <_svfprintf_r+0x8fc>
 80017a0:	e8df f011 	tbh	[pc, r1, lsl #1]
 80017a4:	041200a5 	.word	0x041200a5
 80017a8:	00aa0412 	.word	0x00aa0412
 80017ac:	04120412 	.word	0x04120412
 80017b0:	04120412 	.word	0x04120412
 80017b4:	04120412 	.word	0x04120412
 80017b8:	006500ad 	.word	0x006500ad
 80017bc:	00b50412 	.word	0x00b50412
 80017c0:	041200b8 	.word	0x041200b8
 80017c4:	00d800d5 	.word	0x00d800d5
 80017c8:	00d800d8 	.word	0x00d800d8
 80017cc:	00d800d8 	.word	0x00d800d8
 80017d0:	00d800d8 	.word	0x00d800d8
 80017d4:	00d800d8 	.word	0x00d800d8
 80017d8:	04120412 	.word	0x04120412
 80017dc:	04120412 	.word	0x04120412
 80017e0:	04120412 	.word	0x04120412
 80017e4:	04120412 	.word	0x04120412
 80017e8:	04120412 	.word	0x04120412
 80017ec:	0122010c 	.word	0x0122010c
 80017f0:	01220412 	.word	0x01220412
 80017f4:	04120412 	.word	0x04120412
 80017f8:	04120412 	.word	0x04120412
 80017fc:	041200eb 	.word	0x041200eb
 8001800:	033c0412 	.word	0x033c0412
 8001804:	04120412 	.word	0x04120412
 8001808:	04120412 	.word	0x04120412
 800180c:	03a40412 	.word	0x03a40412
 8001810:	04120412 	.word	0x04120412
 8001814:	04120085 	.word	0x04120085
 8001818:	04120412 	.word	0x04120412
 800181c:	04120412 	.word	0x04120412
 8001820:	04120412 	.word	0x04120412
 8001824:	04120412 	.word	0x04120412
 8001828:	00fe0412 	.word	0x00fe0412
 800182c:	0122006b 	.word	0x0122006b
 8001830:	01220122 	.word	0x01220122
 8001834:	006b00ee 	.word	0x006b00ee
 8001838:	04120412 	.word	0x04120412
 800183c:	041200f1 	.word	0x041200f1
 8001840:	033e031e 	.word	0x033e031e
 8001844:	00f80372 	.word	0x00f80372
 8001848:	03830412 	.word	0x03830412
 800184c:	03a60412 	.word	0x03a60412
 8001850:	04120412 	.word	0x04120412
 8001854:	03be      	.short	0x03be
 8001856:	461d      	mov	r5, r3
 8001858:	e773      	b.n	8001742 <_svfprintf_r+0x76>
 800185a:	aa21      	add	r2, sp, #132	; 0x84
 800185c:	4649      	mov	r1, r9
 800185e:	4650      	mov	r0, sl
 8001860:	f002 fa90 	bl	8003d84 <__ssprint_r>
 8001864:	2800      	cmp	r0, #0
 8001866:	f040 868e 	bne.w	8002586 <_svfprintf_r+0xeba>
 800186a:	ac2e      	add	r4, sp, #184	; 0xb8
 800186c:	e77e      	b.n	800176c <_svfprintf_r+0xa0>
 800186e:	2301      	movs	r3, #1
 8001870:	222b      	movs	r2, #43	; 0x2b
 8001872:	9909      	ldr	r1, [sp, #36]	; 0x24
 8001874:	e78b      	b.n	800178e <_svfprintf_r+0xc2>
 8001876:	460f      	mov	r7, r1
 8001878:	e7fb      	b.n	8001872 <_svfprintf_r+0x1a6>
 800187a:	b10b      	cbz	r3, 8001880 <_svfprintf_r+0x1b4>
 800187c:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
 8001880:	06ae      	lsls	r6, r5, #26
 8001882:	f140 80a1 	bpl.w	80019c8 <_svfprintf_r+0x2fc>
 8001886:	3707      	adds	r7, #7
 8001888:	f027 0707 	bic.w	r7, r7, #7
 800188c:	f107 0308 	add.w	r3, r7, #8
 8001890:	9308      	str	r3, [sp, #32]
 8001892:	e9d7 6700 	ldrd	r6, r7, [r7]
 8001896:	2e00      	cmp	r6, #0
 8001898:	f177 0300 	sbcs.w	r3, r7, #0
 800189c:	da05      	bge.n	80018aa <_svfprintf_r+0x1de>
 800189e:	232d      	movs	r3, #45	; 0x2d
 80018a0:	4276      	negs	r6, r6
 80018a2:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
 80018a6:	f88d 3067 	strb.w	r3, [sp, #103]	; 0x67
 80018aa:	2301      	movs	r3, #1
 80018ac:	e2c7      	b.n	8001e3e <_svfprintf_r+0x772>
 80018ae:	b10b      	cbz	r3, 80018b4 <_svfprintf_r+0x1e8>
 80018b0:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
 80018b4:	4ba0      	ldr	r3, [pc, #640]	; (8001b38 <_svfprintf_r+0x46c>)
 80018b6:	9315      	str	r3, [sp, #84]	; 0x54
 80018b8:	06ab      	lsls	r3, r5, #26
 80018ba:	f140 8336 	bpl.w	8001f2a <_svfprintf_r+0x85e>
 80018be:	3707      	adds	r7, #7
 80018c0:	f027 0707 	bic.w	r7, r7, #7
 80018c4:	f107 0308 	add.w	r3, r7, #8
 80018c8:	9308      	str	r3, [sp, #32]
 80018ca:	e9d7 6700 	ldrd	r6, r7, [r7]
 80018ce:	07e8      	lsls	r0, r5, #31
 80018d0:	d50b      	bpl.n	80018ea <_svfprintf_r+0x21e>
 80018d2:	ea56 0307 	orrs.w	r3, r6, r7
 80018d6:	d008      	beq.n	80018ea <_svfprintf_r+0x21e>
 80018d8:	2330      	movs	r3, #48	; 0x30
 80018da:	f88d 3068 	strb.w	r3, [sp, #104]	; 0x68
 80018de:	f89d 3018 	ldrb.w	r3, [sp, #24]
 80018e2:	f045 0502 	orr.w	r5, r5, #2
 80018e6:	f88d 3069 	strb.w	r3, [sp, #105]	; 0x69
 80018ea:	2302      	movs	r3, #2
 80018ec:	e2a4      	b.n	8001e38 <_svfprintf_r+0x76c>
 80018ee:	2a00      	cmp	r2, #0
 80018f0:	d1bf      	bne.n	8001872 <_svfprintf_r+0x1a6>
 80018f2:	2301      	movs	r3, #1
 80018f4:	2220      	movs	r2, #32
 80018f6:	e7bc      	b.n	8001872 <_svfprintf_r+0x1a6>
 80018f8:	f045 0501 	orr.w	r5, r5, #1
 80018fc:	e7b9      	b.n	8001872 <_svfprintf_r+0x1a6>
 80018fe:	683e      	ldr	r6, [r7, #0]
 8001900:	1d39      	adds	r1, r7, #4
 8001902:	2e00      	cmp	r6, #0
 8001904:	960c      	str	r6, [sp, #48]	; 0x30
 8001906:	dab6      	bge.n	8001876 <_svfprintf_r+0x1aa>
 8001908:	460f      	mov	r7, r1
 800190a:	4276      	negs	r6, r6
 800190c:	960c      	str	r6, [sp, #48]	; 0x30
 800190e:	f045 0504 	orr.w	r5, r5, #4
 8001912:	e7ae      	b.n	8001872 <_svfprintf_r+0x1a6>
 8001914:	9909      	ldr	r1, [sp, #36]	; 0x24
 8001916:	1c4e      	adds	r6, r1, #1
 8001918:	7809      	ldrb	r1, [r1, #0]
 800191a:	292a      	cmp	r1, #42	; 0x2a
 800191c:	9106      	str	r1, [sp, #24]
 800191e:	d010      	beq.n	8001942 <_svfprintf_r+0x276>
 8001920:	f04f 0b00 	mov.w	fp, #0
 8001924:	9609      	str	r6, [sp, #36]	; 0x24
 8001926:	9906      	ldr	r1, [sp, #24]
 8001928:	3930      	subs	r1, #48	; 0x30
 800192a:	2909      	cmp	r1, #9
 800192c:	f63f af33 	bhi.w	8001796 <_svfprintf_r+0xca>
 8001930:	fb00 1b0b 	mla	fp, r0, fp, r1
 8001934:	9909      	ldr	r1, [sp, #36]	; 0x24
 8001936:	460e      	mov	r6, r1
 8001938:	f816 1b01 	ldrb.w	r1, [r6], #1
 800193c:	9106      	str	r1, [sp, #24]
 800193e:	9609      	str	r6, [sp, #36]	; 0x24
 8001940:	e7f1      	b.n	8001926 <_svfprintf_r+0x25a>
 8001942:	6839      	ldr	r1, [r7, #0]
 8001944:	9609      	str	r6, [sp, #36]	; 0x24
 8001946:	ea41 7be1 	orr.w	fp, r1, r1, asr #31
 800194a:	3704      	adds	r7, #4
 800194c:	e791      	b.n	8001872 <_svfprintf_r+0x1a6>
 800194e:	f045 0580 	orr.w	r5, r5, #128	; 0x80
 8001952:	e78e      	b.n	8001872 <_svfprintf_r+0x1a6>
 8001954:	2100      	movs	r1, #0
 8001956:	910c      	str	r1, [sp, #48]	; 0x30
 8001958:	9906      	ldr	r1, [sp, #24]
 800195a:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 800195c:	3930      	subs	r1, #48	; 0x30
 800195e:	fb00 1106 	mla	r1, r0, r6, r1
 8001962:	910c      	str	r1, [sp, #48]	; 0x30
 8001964:	9909      	ldr	r1, [sp, #36]	; 0x24
 8001966:	460e      	mov	r6, r1
 8001968:	f816 1b01 	ldrb.w	r1, [r6], #1
 800196c:	9106      	str	r1, [sp, #24]
 800196e:	9906      	ldr	r1, [sp, #24]
 8001970:	9609      	str	r6, [sp, #36]	; 0x24
 8001972:	3930      	subs	r1, #48	; 0x30
 8001974:	2909      	cmp	r1, #9
 8001976:	d9ef      	bls.n	8001958 <_svfprintf_r+0x28c>
 8001978:	e70d      	b.n	8001796 <_svfprintf_r+0xca>
 800197a:	f045 0508 	orr.w	r5, r5, #8
 800197e:	e778      	b.n	8001872 <_svfprintf_r+0x1a6>
 8001980:	f045 0540 	orr.w	r5, r5, #64	; 0x40
 8001984:	e775      	b.n	8001872 <_svfprintf_r+0x1a6>
 8001986:	9909      	ldr	r1, [sp, #36]	; 0x24
 8001988:	7809      	ldrb	r1, [r1, #0]
 800198a:	296c      	cmp	r1, #108	; 0x6c
 800198c:	d105      	bne.n	800199a <_svfprintf_r+0x2ce>
 800198e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8001990:	3101      	adds	r1, #1
 8001992:	9109      	str	r1, [sp, #36]	; 0x24
 8001994:	f045 0520 	orr.w	r5, r5, #32
 8001998:	e76b      	b.n	8001872 <_svfprintf_r+0x1a6>
 800199a:	f045 0510 	orr.w	r5, r5, #16
 800199e:	e768      	b.n	8001872 <_svfprintf_r+0x1a6>
 80019a0:	2600      	movs	r6, #0
 80019a2:	1d3b      	adds	r3, r7, #4
 80019a4:	9308      	str	r3, [sp, #32]
 80019a6:	683b      	ldr	r3, [r7, #0]
 80019a8:	f88d 6067 	strb.w	r6, [sp, #103]	; 0x67
 80019ac:	f88d 3090 	strb.w	r3, [sp, #144]	; 0x90
 80019b0:	f04f 0b01 	mov.w	fp, #1
 80019b4:	4637      	mov	r7, r6
 80019b6:	f10d 0890 	add.w	r8, sp, #144	; 0x90
 80019ba:	e11c      	b.n	8001bf6 <_svfprintf_r+0x52a>
 80019bc:	b10b      	cbz	r3, 80019c2 <_svfprintf_r+0x2f6>
 80019be:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
 80019c2:	f045 0510 	orr.w	r5, r5, #16
 80019c6:	e75b      	b.n	8001880 <_svfprintf_r+0x1b4>
 80019c8:	f015 0f10 	tst.w	r5, #16
 80019cc:	f107 0304 	add.w	r3, r7, #4
 80019d0:	d003      	beq.n	80019da <_svfprintf_r+0x30e>
 80019d2:	683e      	ldr	r6, [r7, #0]
 80019d4:	9308      	str	r3, [sp, #32]
 80019d6:	17f7      	asrs	r7, r6, #31
 80019d8:	e75d      	b.n	8001896 <_svfprintf_r+0x1ca>
 80019da:	683e      	ldr	r6, [r7, #0]
 80019dc:	f015 0f40 	tst.w	r5, #64	; 0x40
 80019e0:	9308      	str	r3, [sp, #32]
 80019e2:	bf18      	it	ne
 80019e4:	b236      	sxthne	r6, r6
 80019e6:	e7f6      	b.n	80019d6 <_svfprintf_r+0x30a>
 80019e8:	b10b      	cbz	r3, 80019ee <_svfprintf_r+0x322>
 80019ea:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
 80019ee:	3707      	adds	r7, #7
 80019f0:	f027 0707 	bic.w	r7, r7, #7
 80019f4:	f107 0308 	add.w	r3, r7, #8
 80019f8:	9308      	str	r3, [sp, #32]
 80019fa:	683b      	ldr	r3, [r7, #0]
 80019fc:	f04f 32ff 	mov.w	r2, #4294967295
 8001a00:	930d      	str	r3, [sp, #52]	; 0x34
 8001a02:	687b      	ldr	r3, [r7, #4]
 8001a04:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8001a06:	930e      	str	r3, [sp, #56]	; 0x38
 8001a08:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8001a0a:	4638      	mov	r0, r7
 8001a0c:	f023 4600 	bic.w	r6, r3, #2147483648	; 0x80000000
 8001a10:	4631      	mov	r1, r6
 8001a12:	4b4a      	ldr	r3, [pc, #296]	; (8001b3c <_svfprintf_r+0x470>)
 8001a14:	f7fe fff6 	bl	8000a04 <__aeabi_dcmpun>
 8001a18:	2800      	cmp	r0, #0
 8001a1a:	f040 85dc 	bne.w	80025d6 <_svfprintf_r+0xf0a>
 8001a1e:	f04f 32ff 	mov.w	r2, #4294967295
 8001a22:	4b46      	ldr	r3, [pc, #280]	; (8001b3c <_svfprintf_r+0x470>)
 8001a24:	4638      	mov	r0, r7
 8001a26:	4631      	mov	r1, r6
 8001a28:	f7fe ffce 	bl	80009c8 <__aeabi_dcmple>
 8001a2c:	2800      	cmp	r0, #0
 8001a2e:	f040 85d2 	bne.w	80025d6 <_svfprintf_r+0xf0a>
 8001a32:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8001a34:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8001a36:	980d      	ldr	r0, [sp, #52]	; 0x34
 8001a38:	990e      	ldr	r1, [sp, #56]	; 0x38
 8001a3a:	f7fe ffbb 	bl	80009b4 <__aeabi_dcmplt>
 8001a3e:	b110      	cbz	r0, 8001a46 <_svfprintf_r+0x37a>
 8001a40:	232d      	movs	r3, #45	; 0x2d
 8001a42:	f88d 3067 	strb.w	r3, [sp, #103]	; 0x67
 8001a46:	4b3e      	ldr	r3, [pc, #248]	; (8001b40 <_svfprintf_r+0x474>)
 8001a48:	4a3e      	ldr	r2, [pc, #248]	; (8001b44 <_svfprintf_r+0x478>)
 8001a4a:	9906      	ldr	r1, [sp, #24]
 8001a4c:	f04f 0b03 	mov.w	fp, #3
 8001a50:	2947      	cmp	r1, #71	; 0x47
 8001a52:	bfcc      	ite	gt
 8001a54:	4690      	movgt	r8, r2
 8001a56:	4698      	movle	r8, r3
 8001a58:	2600      	movs	r6, #0
 8001a5a:	f025 0580 	bic.w	r5, r5, #128	; 0x80
 8001a5e:	4637      	mov	r7, r6
 8001a60:	e0c9      	b.n	8001bf6 <_svfprintf_r+0x52a>
 8001a62:	f1bb 3fff 	cmp.w	fp, #4294967295
 8001a66:	d026      	beq.n	8001ab6 <_svfprintf_r+0x3ea>
 8001a68:	9b06      	ldr	r3, [sp, #24]
 8001a6a:	f023 0320 	bic.w	r3, r3, #32
 8001a6e:	2b47      	cmp	r3, #71	; 0x47
 8001a70:	d104      	bne.n	8001a7c <_svfprintf_r+0x3b0>
 8001a72:	f1bb 0f00 	cmp.w	fp, #0
 8001a76:	bf08      	it	eq
 8001a78:	f04f 0b01 	moveq.w	fp, #1
 8001a7c:	f445 7380 	orr.w	r3, r5, #256	; 0x100
 8001a80:	9317      	str	r3, [sp, #92]	; 0x5c
 8001a82:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8001a84:	1e1f      	subs	r7, r3, #0
 8001a86:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8001a88:	bfa8      	it	ge
 8001a8a:	9710      	strge	r7, [sp, #64]	; 0x40
 8001a8c:	930f      	str	r3, [sp, #60]	; 0x3c
 8001a8e:	bfbd      	ittte	lt
 8001a90:	463b      	movlt	r3, r7
 8001a92:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
 8001a96:	9310      	strlt	r3, [sp, #64]	; 0x40
 8001a98:	2300      	movge	r3, #0
 8001a9a:	bfb8      	it	lt
 8001a9c:	232d      	movlt	r3, #45	; 0x2d
 8001a9e:	9316      	str	r3, [sp, #88]	; 0x58
 8001aa0:	9b06      	ldr	r3, [sp, #24]
 8001aa2:	f023 0720 	bic.w	r7, r3, #32
 8001aa6:	2f46      	cmp	r7, #70	; 0x46
 8001aa8:	d008      	beq.n	8001abc <_svfprintf_r+0x3f0>
 8001aaa:	2f45      	cmp	r7, #69	; 0x45
 8001aac:	d142      	bne.n	8001b34 <_svfprintf_r+0x468>
 8001aae:	f10b 0601 	add.w	r6, fp, #1
 8001ab2:	2302      	movs	r3, #2
 8001ab4:	e004      	b.n	8001ac0 <_svfprintf_r+0x3f4>
 8001ab6:	f04f 0b06 	mov.w	fp, #6
 8001aba:	e7df      	b.n	8001a7c <_svfprintf_r+0x3b0>
 8001abc:	465e      	mov	r6, fp
 8001abe:	2303      	movs	r3, #3
 8001ac0:	aa1f      	add	r2, sp, #124	; 0x7c
 8001ac2:	9204      	str	r2, [sp, #16]
 8001ac4:	aa1c      	add	r2, sp, #112	; 0x70
 8001ac6:	9203      	str	r2, [sp, #12]
 8001ac8:	aa1b      	add	r2, sp, #108	; 0x6c
 8001aca:	9202      	str	r2, [sp, #8]
 8001acc:	e88d 0048 	stmia.w	sp, {r3, r6}
 8001ad0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8001ad2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8001ad4:	4650      	mov	r0, sl
 8001ad6:	f000 fe57 	bl	8002788 <_dtoa_r>
 8001ada:	2f47      	cmp	r7, #71	; 0x47
 8001adc:	4680      	mov	r8, r0
 8001ade:	d102      	bne.n	8001ae6 <_svfprintf_r+0x41a>
 8001ae0:	07e8      	lsls	r0, r5, #31
 8001ae2:	f140 8585 	bpl.w	80025f0 <_svfprintf_r+0xf24>
 8001ae6:	eb08 0306 	add.w	r3, r8, r6
 8001aea:	2f46      	cmp	r7, #70	; 0x46
 8001aec:	9307      	str	r3, [sp, #28]
 8001aee:	d111      	bne.n	8001b14 <_svfprintf_r+0x448>
 8001af0:	f898 3000 	ldrb.w	r3, [r8]
 8001af4:	2b30      	cmp	r3, #48	; 0x30
 8001af6:	d109      	bne.n	8001b0c <_svfprintf_r+0x440>
 8001af8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8001afa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8001afc:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8001afe:	9910      	ldr	r1, [sp, #64]	; 0x40
 8001b00:	f7fe ff4e 	bl	80009a0 <__aeabi_dcmpeq>
 8001b04:	b910      	cbnz	r0, 8001b0c <_svfprintf_r+0x440>
 8001b06:	f1c6 0601 	rsb	r6, r6, #1
 8001b0a:	961b      	str	r6, [sp, #108]	; 0x6c
 8001b0c:	9a07      	ldr	r2, [sp, #28]
 8001b0e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8001b10:	441a      	add	r2, r3
 8001b12:	9207      	str	r2, [sp, #28]
 8001b14:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8001b16:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8001b18:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8001b1a:	9910      	ldr	r1, [sp, #64]	; 0x40
 8001b1c:	f7fe ff40 	bl	80009a0 <__aeabi_dcmpeq>
 8001b20:	b990      	cbnz	r0, 8001b48 <_svfprintf_r+0x47c>
 8001b22:	2230      	movs	r2, #48	; 0x30
 8001b24:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8001b26:	9907      	ldr	r1, [sp, #28]
 8001b28:	4299      	cmp	r1, r3
 8001b2a:	d90f      	bls.n	8001b4c <_svfprintf_r+0x480>
 8001b2c:	1c59      	adds	r1, r3, #1
 8001b2e:	911f      	str	r1, [sp, #124]	; 0x7c
 8001b30:	701a      	strb	r2, [r3, #0]
 8001b32:	e7f7      	b.n	8001b24 <_svfprintf_r+0x458>
 8001b34:	465e      	mov	r6, fp
 8001b36:	e7bc      	b.n	8001ab2 <_svfprintf_r+0x3e6>
 8001b38:	080044da 	.word	0x080044da
 8001b3c:	7fefffff 	.word	0x7fefffff
 8001b40:	080044ca 	.word	0x080044ca
 8001b44:	080044ce 	.word	0x080044ce
 8001b48:	9b07      	ldr	r3, [sp, #28]
 8001b4a:	931f      	str	r3, [sp, #124]	; 0x7c
 8001b4c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8001b4e:	2f47      	cmp	r7, #71	; 0x47
 8001b50:	eba3 0308 	sub.w	r3, r3, r8
 8001b54:	9307      	str	r3, [sp, #28]
 8001b56:	f040 8100 	bne.w	8001d5a <_svfprintf_r+0x68e>
 8001b5a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8001b5c:	1cd9      	adds	r1, r3, #3
 8001b5e:	db02      	blt.n	8001b66 <_svfprintf_r+0x49a>
 8001b60:	459b      	cmp	fp, r3
 8001b62:	f280 8126 	bge.w	8001db2 <_svfprintf_r+0x6e6>
 8001b66:	9b06      	ldr	r3, [sp, #24]
 8001b68:	3b02      	subs	r3, #2
 8001b6a:	9306      	str	r3, [sp, #24]
 8001b6c:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8001b6e:	f89d 1018 	ldrb.w	r1, [sp, #24]
 8001b72:	1e53      	subs	r3, r2, #1
 8001b74:	2b00      	cmp	r3, #0
 8001b76:	bfa8      	it	ge
 8001b78:	222b      	movge	r2, #43	; 0x2b
 8001b7a:	931b      	str	r3, [sp, #108]	; 0x6c
 8001b7c:	bfbc      	itt	lt
 8001b7e:	f1c2 0301 	rsblt	r3, r2, #1
 8001b82:	222d      	movlt	r2, #45	; 0x2d
 8001b84:	2b09      	cmp	r3, #9
 8001b86:	f88d 1074 	strb.w	r1, [sp, #116]	; 0x74
 8001b8a:	f88d 2075 	strb.w	r2, [sp, #117]	; 0x75
 8001b8e:	f340 8100 	ble.w	8001d92 <_svfprintf_r+0x6c6>
 8001b92:	260a      	movs	r6, #10
 8001b94:	f10d 0283 	add.w	r2, sp, #131	; 0x83
 8001b98:	fb93 f0f6 	sdiv	r0, r3, r6
 8001b9c:	fb06 3310 	mls	r3, r6, r0, r3
 8001ba0:	2809      	cmp	r0, #9
 8001ba2:	f103 0330 	add.w	r3, r3, #48	; 0x30
 8001ba6:	f802 3c01 	strb.w	r3, [r2, #-1]
 8001baa:	f102 31ff 	add.w	r1, r2, #4294967295
 8001bae:	4603      	mov	r3, r0
 8001bb0:	f300 80e8 	bgt.w	8001d84 <_svfprintf_r+0x6b8>
 8001bb4:	3330      	adds	r3, #48	; 0x30
 8001bb6:	f801 3c01 	strb.w	r3, [r1, #-1]
 8001bba:	3a02      	subs	r2, #2
 8001bbc:	f10d 0376 	add.w	r3, sp, #118	; 0x76
 8001bc0:	f10d 0083 	add.w	r0, sp, #131	; 0x83
 8001bc4:	4282      	cmp	r2, r0
 8001bc6:	4619      	mov	r1, r3
 8001bc8:	f0c0 80de 	bcc.w	8001d88 <_svfprintf_r+0x6bc>
 8001bcc:	9a07      	ldr	r2, [sp, #28]
 8001bce:	ab1d      	add	r3, sp, #116	; 0x74
 8001bd0:	1acb      	subs	r3, r1, r3
 8001bd2:	2a01      	cmp	r2, #1
 8001bd4:	9314      	str	r3, [sp, #80]	; 0x50
 8001bd6:	eb03 0b02 	add.w	fp, r3, r2
 8001bda:	dc02      	bgt.n	8001be2 <_svfprintf_r+0x516>
 8001bdc:	f015 0701 	ands.w	r7, r5, #1
 8001be0:	d002      	beq.n	8001be8 <_svfprintf_r+0x51c>
 8001be2:	2700      	movs	r7, #0
 8001be4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001be6:	449b      	add	fp, r3
 8001be8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8001bea:	b113      	cbz	r3, 8001bf2 <_svfprintf_r+0x526>
 8001bec:	232d      	movs	r3, #45	; 0x2d
 8001bee:	f88d 3067 	strb.w	r3, [sp, #103]	; 0x67
 8001bf2:	2600      	movs	r6, #0
 8001bf4:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8001bf6:	455e      	cmp	r6, fp
 8001bf8:	4633      	mov	r3, r6
 8001bfa:	bfb8      	it	lt
 8001bfc:	465b      	movlt	r3, fp
 8001bfe:	930f      	str	r3, [sp, #60]	; 0x3c
 8001c00:	f89d 3067 	ldrb.w	r3, [sp, #103]	; 0x67
 8001c04:	b113      	cbz	r3, 8001c0c <_svfprintf_r+0x540>
 8001c06:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8001c08:	3301      	adds	r3, #1
 8001c0a:	930f      	str	r3, [sp, #60]	; 0x3c
 8001c0c:	f015 0302 	ands.w	r3, r5, #2
 8001c10:	9316      	str	r3, [sp, #88]	; 0x58
 8001c12:	bf1e      	ittt	ne
 8001c14:	9b0f      	ldrne	r3, [sp, #60]	; 0x3c
 8001c16:	3302      	addne	r3, #2
 8001c18:	930f      	strne	r3, [sp, #60]	; 0x3c
 8001c1a:	f015 0384 	ands.w	r3, r5, #132	; 0x84
 8001c1e:	9317      	str	r3, [sp, #92]	; 0x5c
 8001c20:	d118      	bne.n	8001c54 <_svfprintf_r+0x588>
 8001c22:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8001c24:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8001c26:	1a9b      	subs	r3, r3, r2
 8001c28:	2b00      	cmp	r3, #0
 8001c2a:	9310      	str	r3, [sp, #64]	; 0x40
 8001c2c:	dd12      	ble.n	8001c54 <_svfprintf_r+0x588>
 8001c2e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8001c30:	2b10      	cmp	r3, #16
 8001c32:	4bab      	ldr	r3, [pc, #684]	; (8001ee0 <_svfprintf_r+0x814>)
 8001c34:	6023      	str	r3, [r4, #0]
 8001c36:	f300 81d9 	bgt.w	8001fec <_svfprintf_r+0x920>
 8001c3a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8001c3c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8001c3e:	6063      	str	r3, [r4, #4]
 8001c40:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8001c42:	4413      	add	r3, r2
 8001c44:	9323      	str	r3, [sp, #140]	; 0x8c
 8001c46:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8001c48:	3301      	adds	r3, #1
 8001c4a:	2b07      	cmp	r3, #7
 8001c4c:	9322      	str	r3, [sp, #136]	; 0x88
 8001c4e:	f300 81e6 	bgt.w	800201e <_svfprintf_r+0x952>
 8001c52:	3408      	adds	r4, #8
 8001c54:	f89d 3067 	ldrb.w	r3, [sp, #103]	; 0x67
 8001c58:	b173      	cbz	r3, 8001c78 <_svfprintf_r+0x5ac>
 8001c5a:	f10d 0367 	add.w	r3, sp, #103	; 0x67
 8001c5e:	6023      	str	r3, [r4, #0]
 8001c60:	2301      	movs	r3, #1
 8001c62:	6063      	str	r3, [r4, #4]
 8001c64:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8001c66:	3301      	adds	r3, #1
 8001c68:	9323      	str	r3, [sp, #140]	; 0x8c
 8001c6a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8001c6c:	3301      	adds	r3, #1
 8001c6e:	2b07      	cmp	r3, #7
 8001c70:	9322      	str	r3, [sp, #136]	; 0x88
 8001c72:	f300 81de 	bgt.w	8002032 <_svfprintf_r+0x966>
 8001c76:	3408      	adds	r4, #8
 8001c78:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8001c7a:	b16b      	cbz	r3, 8001c98 <_svfprintf_r+0x5cc>
 8001c7c:	ab1a      	add	r3, sp, #104	; 0x68
 8001c7e:	6023      	str	r3, [r4, #0]
 8001c80:	2302      	movs	r3, #2
 8001c82:	6063      	str	r3, [r4, #4]
 8001c84:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8001c86:	3302      	adds	r3, #2
 8001c88:	9323      	str	r3, [sp, #140]	; 0x8c
 8001c8a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8001c8c:	3301      	adds	r3, #1
 8001c8e:	2b07      	cmp	r3, #7
 8001c90:	9322      	str	r3, [sp, #136]	; 0x88
 8001c92:	f300 81d8 	bgt.w	8002046 <_svfprintf_r+0x97a>
 8001c96:	3408      	adds	r4, #8
 8001c98:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8001c9a:	2b80      	cmp	r3, #128	; 0x80
 8001c9c:	d118      	bne.n	8001cd0 <_svfprintf_r+0x604>
 8001c9e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8001ca0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8001ca2:	1a9b      	subs	r3, r3, r2
 8001ca4:	2b00      	cmp	r3, #0
 8001ca6:	9310      	str	r3, [sp, #64]	; 0x40
 8001ca8:	dd12      	ble.n	8001cd0 <_svfprintf_r+0x604>
 8001caa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8001cac:	2b10      	cmp	r3, #16
 8001cae:	4b8d      	ldr	r3, [pc, #564]	; (8001ee4 <_svfprintf_r+0x818>)
 8001cb0:	6023      	str	r3, [r4, #0]
 8001cb2:	f300 81d2 	bgt.w	800205a <_svfprintf_r+0x98e>
 8001cb6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8001cb8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8001cba:	6063      	str	r3, [r4, #4]
 8001cbc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8001cbe:	4413      	add	r3, r2
 8001cc0:	9323      	str	r3, [sp, #140]	; 0x8c
 8001cc2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8001cc4:	3301      	adds	r3, #1
 8001cc6:	2b07      	cmp	r3, #7
 8001cc8:	9322      	str	r3, [sp, #136]	; 0x88
 8001cca:	f300 81df 	bgt.w	800208c <_svfprintf_r+0x9c0>
 8001cce:	3408      	adds	r4, #8
 8001cd0:	eba6 060b 	sub.w	r6, r6, fp
 8001cd4:	2e00      	cmp	r6, #0
 8001cd6:	dd0f      	ble.n	8001cf8 <_svfprintf_r+0x62c>
 8001cd8:	4b82      	ldr	r3, [pc, #520]	; (8001ee4 <_svfprintf_r+0x818>)
 8001cda:	2e10      	cmp	r6, #16
 8001cdc:	6023      	str	r3, [r4, #0]
 8001cde:	f300 81df 	bgt.w	80020a0 <_svfprintf_r+0x9d4>
 8001ce2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8001ce4:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8001ce6:	3301      	adds	r3, #1
 8001ce8:	6066      	str	r6, [r4, #4]
 8001cea:	2b07      	cmp	r3, #7
 8001cec:	4406      	add	r6, r0
 8001cee:	9623      	str	r6, [sp, #140]	; 0x8c
 8001cf0:	9322      	str	r3, [sp, #136]	; 0x88
 8001cf2:	f300 81ec 	bgt.w	80020ce <_svfprintf_r+0xa02>
 8001cf6:	3408      	adds	r4, #8
 8001cf8:	05eb      	lsls	r3, r5, #23
 8001cfa:	f100 81f2 	bmi.w	80020e2 <_svfprintf_r+0xa16>
 8001cfe:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8001d00:	e884 0900 	stmia.w	r4, {r8, fp}
 8001d04:	445b      	add	r3, fp
 8001d06:	9323      	str	r3, [sp, #140]	; 0x8c
 8001d08:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8001d0a:	3301      	adds	r3, #1
 8001d0c:	2b07      	cmp	r3, #7
 8001d0e:	9322      	str	r3, [sp, #136]	; 0x88
 8001d10:	f340 8419 	ble.w	8002546 <_svfprintf_r+0xe7a>
 8001d14:	aa21      	add	r2, sp, #132	; 0x84
 8001d16:	4649      	mov	r1, r9
 8001d18:	4650      	mov	r0, sl
 8001d1a:	f002 f833 	bl	8003d84 <__ssprint_r>
 8001d1e:	2800      	cmp	r0, #0
 8001d20:	f040 8431 	bne.w	8002586 <_svfprintf_r+0xeba>
 8001d24:	ac2e      	add	r4, sp, #184	; 0xb8
 8001d26:	076b      	lsls	r3, r5, #29
 8001d28:	f100 8410 	bmi.w	800254c <_svfprintf_r+0xe80>
 8001d2c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8001d2e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8001d30:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8001d32:	428a      	cmp	r2, r1
 8001d34:	bfac      	ite	ge
 8001d36:	189b      	addge	r3, r3, r2
 8001d38:	185b      	addlt	r3, r3, r1
 8001d3a:	930b      	str	r3, [sp, #44]	; 0x2c
 8001d3c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8001d3e:	b13b      	cbz	r3, 8001d50 <_svfprintf_r+0x684>
 8001d40:	aa21      	add	r2, sp, #132	; 0x84
 8001d42:	4649      	mov	r1, r9
 8001d44:	4650      	mov	r0, sl
 8001d46:	f002 f81d 	bl	8003d84 <__ssprint_r>
 8001d4a:	2800      	cmp	r0, #0
 8001d4c:	f040 841b 	bne.w	8002586 <_svfprintf_r+0xeba>
 8001d50:	2300      	movs	r3, #0
 8001d52:	9f08      	ldr	r7, [sp, #32]
 8001d54:	9322      	str	r3, [sp, #136]	; 0x88
 8001d56:	ac2e      	add	r4, sp, #184	; 0xb8
 8001d58:	e4f2      	b.n	8001740 <_svfprintf_r+0x74>
 8001d5a:	9b06      	ldr	r3, [sp, #24]
 8001d5c:	2b65      	cmp	r3, #101	; 0x65
 8001d5e:	f77f af05 	ble.w	8001b6c <_svfprintf_r+0x4a0>
 8001d62:	9b06      	ldr	r3, [sp, #24]
 8001d64:	2b66      	cmp	r3, #102	; 0x66
 8001d66:	d124      	bne.n	8001db2 <_svfprintf_r+0x6e6>
 8001d68:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8001d6a:	2b00      	cmp	r3, #0
 8001d6c:	dd19      	ble.n	8001da2 <_svfprintf_r+0x6d6>
 8001d6e:	f1bb 0f00 	cmp.w	fp, #0
 8001d72:	d101      	bne.n	8001d78 <_svfprintf_r+0x6ac>
 8001d74:	07ea      	lsls	r2, r5, #31
 8001d76:	d502      	bpl.n	8001d7e <_svfprintf_r+0x6b2>
 8001d78:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8001d7a:	4413      	add	r3, r2
 8001d7c:	445b      	add	r3, fp
 8001d7e:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8001d80:	469b      	mov	fp, r3
 8001d82:	e731      	b.n	8001be8 <_svfprintf_r+0x51c>
 8001d84:	460a      	mov	r2, r1
 8001d86:	e707      	b.n	8001b98 <_svfprintf_r+0x4cc>
 8001d88:	f812 1b01 	ldrb.w	r1, [r2], #1
 8001d8c:	f803 1b01 	strb.w	r1, [r3], #1
 8001d90:	e718      	b.n	8001bc4 <_svfprintf_r+0x4f8>
 8001d92:	2230      	movs	r2, #48	; 0x30
 8001d94:	4413      	add	r3, r2
 8001d96:	f88d 2076 	strb.w	r2, [sp, #118]	; 0x76
 8001d9a:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
 8001d9e:	a91e      	add	r1, sp, #120	; 0x78
 8001da0:	e714      	b.n	8001bcc <_svfprintf_r+0x500>
 8001da2:	f1bb 0f00 	cmp.w	fp, #0
 8001da6:	d101      	bne.n	8001dac <_svfprintf_r+0x6e0>
 8001da8:	07eb      	lsls	r3, r5, #31
 8001daa:	d515      	bpl.n	8001dd8 <_svfprintf_r+0x70c>
 8001dac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001dae:	3301      	adds	r3, #1
 8001db0:	e7e4      	b.n	8001d7c <_svfprintf_r+0x6b0>
 8001db2:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8001db4:	9b07      	ldr	r3, [sp, #28]
 8001db6:	429a      	cmp	r2, r3
 8001db8:	db06      	blt.n	8001dc8 <_svfprintf_r+0x6fc>
 8001dba:	07ef      	lsls	r7, r5, #31
 8001dbc:	d50e      	bpl.n	8001ddc <_svfprintf_r+0x710>
 8001dbe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001dc0:	4413      	add	r3, r2
 8001dc2:	2267      	movs	r2, #103	; 0x67
 8001dc4:	9206      	str	r2, [sp, #24]
 8001dc6:	e7da      	b.n	8001d7e <_svfprintf_r+0x6b2>
 8001dc8:	9b07      	ldr	r3, [sp, #28]
 8001dca:	990a      	ldr	r1, [sp, #40]	; 0x28
 8001dcc:	2a00      	cmp	r2, #0
 8001dce:	440b      	add	r3, r1
 8001dd0:	dcf7      	bgt.n	8001dc2 <_svfprintf_r+0x6f6>
 8001dd2:	f1c2 0201 	rsb	r2, r2, #1
 8001dd6:	e7f3      	b.n	8001dc0 <_svfprintf_r+0x6f4>
 8001dd8:	2301      	movs	r3, #1
 8001dda:	e7d0      	b.n	8001d7e <_svfprintf_r+0x6b2>
 8001ddc:	4613      	mov	r3, r2
 8001dde:	e7f0      	b.n	8001dc2 <_svfprintf_r+0x6f6>
 8001de0:	b10b      	cbz	r3, 8001de6 <_svfprintf_r+0x71a>
 8001de2:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
 8001de6:	f015 0f20 	tst.w	r5, #32
 8001dea:	f107 0304 	add.w	r3, r7, #4
 8001dee:	d008      	beq.n	8001e02 <_svfprintf_r+0x736>
 8001df0:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8001df2:	683a      	ldr	r2, [r7, #0]
 8001df4:	17ce      	asrs	r6, r1, #31
 8001df6:	4608      	mov	r0, r1
 8001df8:	4631      	mov	r1, r6
 8001dfa:	e9c2 0100 	strd	r0, r1, [r2]
 8001dfe:	461f      	mov	r7, r3
 8001e00:	e49e      	b.n	8001740 <_svfprintf_r+0x74>
 8001e02:	06ee      	lsls	r6, r5, #27
 8001e04:	d503      	bpl.n	8001e0e <_svfprintf_r+0x742>
 8001e06:	683a      	ldr	r2, [r7, #0]
 8001e08:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8001e0a:	6011      	str	r1, [r2, #0]
 8001e0c:	e7f7      	b.n	8001dfe <_svfprintf_r+0x732>
 8001e0e:	0668      	lsls	r0, r5, #25
 8001e10:	d5f9      	bpl.n	8001e06 <_svfprintf_r+0x73a>
 8001e12:	683a      	ldr	r2, [r7, #0]
 8001e14:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8001e18:	8011      	strh	r1, [r2, #0]
 8001e1a:	e7f0      	b.n	8001dfe <_svfprintf_r+0x732>
 8001e1c:	f045 0510 	orr.w	r5, r5, #16
 8001e20:	f015 0320 	ands.w	r3, r5, #32
 8001e24:	d022      	beq.n	8001e6c <_svfprintf_r+0x7a0>
 8001e26:	3707      	adds	r7, #7
 8001e28:	f027 0707 	bic.w	r7, r7, #7
 8001e2c:	f107 0308 	add.w	r3, r7, #8
 8001e30:	9308      	str	r3, [sp, #32]
 8001e32:	e9d7 6700 	ldrd	r6, r7, [r7]
 8001e36:	2300      	movs	r3, #0
 8001e38:	2200      	movs	r2, #0
 8001e3a:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
 8001e3e:	f1bb 3fff 	cmp.w	fp, #4294967295
 8001e42:	f000 83db 	beq.w	80025fc <_svfprintf_r+0xf30>
 8001e46:	f025 0280 	bic.w	r2, r5, #128	; 0x80
 8001e4a:	920f      	str	r2, [sp, #60]	; 0x3c
 8001e4c:	ea56 0207 	orrs.w	r2, r6, r7
 8001e50:	f040 83d9 	bne.w	8002606 <_svfprintf_r+0xf3a>
 8001e54:	f1bb 0f00 	cmp.w	fp, #0
 8001e58:	f000 80aa 	beq.w	8001fb0 <_svfprintf_r+0x8e4>
 8001e5c:	2b01      	cmp	r3, #1
 8001e5e:	d076      	beq.n	8001f4e <_svfprintf_r+0x882>
 8001e60:	2b02      	cmp	r3, #2
 8001e62:	f000 8091 	beq.w	8001f88 <_svfprintf_r+0x8bc>
 8001e66:	2600      	movs	r6, #0
 8001e68:	2700      	movs	r7, #0
 8001e6a:	e3d2      	b.n	8002612 <_svfprintf_r+0xf46>
 8001e6c:	1d3a      	adds	r2, r7, #4
 8001e6e:	f015 0110 	ands.w	r1, r5, #16
 8001e72:	9208      	str	r2, [sp, #32]
 8001e74:	d002      	beq.n	8001e7c <_svfprintf_r+0x7b0>
 8001e76:	683e      	ldr	r6, [r7, #0]
 8001e78:	2700      	movs	r7, #0
 8001e7a:	e7dd      	b.n	8001e38 <_svfprintf_r+0x76c>
 8001e7c:	f015 0340 	ands.w	r3, r5, #64	; 0x40
 8001e80:	d0f9      	beq.n	8001e76 <_svfprintf_r+0x7aa>
 8001e82:	883e      	ldrh	r6, [r7, #0]
 8001e84:	2700      	movs	r7, #0
 8001e86:	e7d6      	b.n	8001e36 <_svfprintf_r+0x76a>
 8001e88:	1d3b      	adds	r3, r7, #4
 8001e8a:	9308      	str	r3, [sp, #32]
 8001e8c:	2330      	movs	r3, #48	; 0x30
 8001e8e:	2278      	movs	r2, #120	; 0x78
 8001e90:	f88d 3068 	strb.w	r3, [sp, #104]	; 0x68
 8001e94:	4b14      	ldr	r3, [pc, #80]	; (8001ee8 <_svfprintf_r+0x81c>)
 8001e96:	683e      	ldr	r6, [r7, #0]
 8001e98:	9315      	str	r3, [sp, #84]	; 0x54
 8001e9a:	2700      	movs	r7, #0
 8001e9c:	f045 0502 	orr.w	r5, r5, #2
 8001ea0:	f88d 2069 	strb.w	r2, [sp, #105]	; 0x69
 8001ea4:	2302      	movs	r3, #2
 8001ea6:	9206      	str	r2, [sp, #24]
 8001ea8:	e7c6      	b.n	8001e38 <_svfprintf_r+0x76c>
 8001eaa:	2600      	movs	r6, #0
 8001eac:	1d3b      	adds	r3, r7, #4
 8001eae:	f1bb 3fff 	cmp.w	fp, #4294967295
 8001eb2:	9308      	str	r3, [sp, #32]
 8001eb4:	f8d7 8000 	ldr.w	r8, [r7]
 8001eb8:	f88d 6067 	strb.w	r6, [sp, #103]	; 0x67
 8001ebc:	d00a      	beq.n	8001ed4 <_svfprintf_r+0x808>
 8001ebe:	465a      	mov	r2, fp
 8001ec0:	4631      	mov	r1, r6
 8001ec2:	4640      	mov	r0, r8
 8001ec4:	f001 fc56 	bl	8003774 <memchr>
 8001ec8:	2800      	cmp	r0, #0
 8001eca:	f000 808d 	beq.w	8001fe8 <_svfprintf_r+0x91c>
 8001ece:	eba0 0b08 	sub.w	fp, r0, r8
 8001ed2:	e5c4      	b.n	8001a5e <_svfprintf_r+0x392>
 8001ed4:	4640      	mov	r0, r8
 8001ed6:	f7fe f93b 	bl	8000150 <strlen>
 8001eda:	4683      	mov	fp, r0
 8001edc:	e5bf      	b.n	8001a5e <_svfprintf_r+0x392>
 8001ede:	bf00      	nop
 8001ee0:	080044fe 	.word	0x080044fe
 8001ee4:	0800450e 	.word	0x0800450e
 8001ee8:	080044eb 	.word	0x080044eb
 8001eec:	f045 0510 	orr.w	r5, r5, #16
 8001ef0:	06a9      	lsls	r1, r5, #26
 8001ef2:	d509      	bpl.n	8001f08 <_svfprintf_r+0x83c>
 8001ef4:	3707      	adds	r7, #7
 8001ef6:	f027 0707 	bic.w	r7, r7, #7
 8001efa:	f107 0308 	add.w	r3, r7, #8
 8001efe:	9308      	str	r3, [sp, #32]
 8001f00:	e9d7 6700 	ldrd	r6, r7, [r7]
 8001f04:	2301      	movs	r3, #1
 8001f06:	e797      	b.n	8001e38 <_svfprintf_r+0x76c>
 8001f08:	1d3b      	adds	r3, r7, #4
 8001f0a:	f015 0f10 	tst.w	r5, #16
 8001f0e:	9308      	str	r3, [sp, #32]
 8001f10:	d001      	beq.n	8001f16 <_svfprintf_r+0x84a>
 8001f12:	683e      	ldr	r6, [r7, #0]
 8001f14:	e002      	b.n	8001f1c <_svfprintf_r+0x850>
 8001f16:	066a      	lsls	r2, r5, #25
 8001f18:	d5fb      	bpl.n	8001f12 <_svfprintf_r+0x846>
 8001f1a:	883e      	ldrh	r6, [r7, #0]
 8001f1c:	2700      	movs	r7, #0
 8001f1e:	e7f1      	b.n	8001f04 <_svfprintf_r+0x838>
 8001f20:	b10b      	cbz	r3, 8001f26 <_svfprintf_r+0x85a>
 8001f22:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
 8001f26:	4ba3      	ldr	r3, [pc, #652]	; (80021b4 <_svfprintf_r+0xae8>)
 8001f28:	e4c5      	b.n	80018b6 <_svfprintf_r+0x1ea>
 8001f2a:	1d3b      	adds	r3, r7, #4
 8001f2c:	f015 0f10 	tst.w	r5, #16
 8001f30:	9308      	str	r3, [sp, #32]
 8001f32:	d001      	beq.n	8001f38 <_svfprintf_r+0x86c>
 8001f34:	683e      	ldr	r6, [r7, #0]
 8001f36:	e002      	b.n	8001f3e <_svfprintf_r+0x872>
 8001f38:	066e      	lsls	r6, r5, #25
 8001f3a:	d5fb      	bpl.n	8001f34 <_svfprintf_r+0x868>
 8001f3c:	883e      	ldrh	r6, [r7, #0]
 8001f3e:	2700      	movs	r7, #0
 8001f40:	e4c5      	b.n	80018ce <_svfprintf_r+0x202>
 8001f42:	4643      	mov	r3, r8
 8001f44:	e366      	b.n	8002614 <_svfprintf_r+0xf48>
 8001f46:	2f00      	cmp	r7, #0
 8001f48:	bf08      	it	eq
 8001f4a:	2e0a      	cmpeq	r6, #10
 8001f4c:	d205      	bcs.n	8001f5a <_svfprintf_r+0x88e>
 8001f4e:	3630      	adds	r6, #48	; 0x30
 8001f50:	f10d 08f8 	add.w	r8, sp, #248	; 0xf8
 8001f54:	f808 6d41 	strb.w	r6, [r8, #-65]!
 8001f58:	e377      	b.n	800264a <_svfprintf_r+0xf7e>
 8001f5a:	f10d 08b8 	add.w	r8, sp, #184	; 0xb8
 8001f5e:	4630      	mov	r0, r6
 8001f60:	4639      	mov	r1, r7
 8001f62:	220a      	movs	r2, #10
 8001f64:	2300      	movs	r3, #0
 8001f66:	f7fe fd8b 	bl	8000a80 <__aeabi_uldivmod>
 8001f6a:	3230      	adds	r2, #48	; 0x30
 8001f6c:	f808 2d01 	strb.w	r2, [r8, #-1]!
 8001f70:	2300      	movs	r3, #0
 8001f72:	4630      	mov	r0, r6
 8001f74:	4639      	mov	r1, r7
 8001f76:	220a      	movs	r2, #10
 8001f78:	f7fe fd82 	bl	8000a80 <__aeabi_uldivmod>
 8001f7c:	4606      	mov	r6, r0
 8001f7e:	460f      	mov	r7, r1
 8001f80:	ea56 0307 	orrs.w	r3, r6, r7
 8001f84:	d1eb      	bne.n	8001f5e <_svfprintf_r+0x892>
 8001f86:	e360      	b.n	800264a <_svfprintf_r+0xf7e>
 8001f88:	2600      	movs	r6, #0
 8001f8a:	2700      	movs	r7, #0
 8001f8c:	f10d 08b8 	add.w	r8, sp, #184	; 0xb8
 8001f90:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8001f92:	f006 030f 	and.w	r3, r6, #15
 8001f96:	5cd3      	ldrb	r3, [r2, r3]
 8001f98:	093a      	lsrs	r2, r7, #4
 8001f9a:	f808 3d01 	strb.w	r3, [r8, #-1]!
 8001f9e:	0933      	lsrs	r3, r6, #4
 8001fa0:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
 8001fa4:	461e      	mov	r6, r3
 8001fa6:	4617      	mov	r7, r2
 8001fa8:	ea56 0307 	orrs.w	r3, r6, r7
 8001fac:	d1f0      	bne.n	8001f90 <_svfprintf_r+0x8c4>
 8001fae:	e34c      	b.n	800264a <_svfprintf_r+0xf7e>
 8001fb0:	b93b      	cbnz	r3, 8001fc2 <_svfprintf_r+0x8f6>
 8001fb2:	07ea      	lsls	r2, r5, #31
 8001fb4:	d505      	bpl.n	8001fc2 <_svfprintf_r+0x8f6>
 8001fb6:	2330      	movs	r3, #48	; 0x30
 8001fb8:	f10d 08f8 	add.w	r8, sp, #248	; 0xf8
 8001fbc:	f808 3d41 	strb.w	r3, [r8, #-65]!
 8001fc0:	e343      	b.n	800264a <_svfprintf_r+0xf7e>
 8001fc2:	f10d 08b8 	add.w	r8, sp, #184	; 0xb8
 8001fc6:	e340      	b.n	800264a <_svfprintf_r+0xf7e>
 8001fc8:	b10b      	cbz	r3, 8001fce <_svfprintf_r+0x902>
 8001fca:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
 8001fce:	9b06      	ldr	r3, [sp, #24]
 8001fd0:	2b00      	cmp	r3, #0
 8001fd2:	f000 82f7 	beq.w	80025c4 <_svfprintf_r+0xef8>
 8001fd6:	2600      	movs	r6, #0
 8001fd8:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8001fdc:	f88d 6067 	strb.w	r6, [sp, #103]	; 0x67
 8001fe0:	f88d 3090 	strb.w	r3, [sp, #144]	; 0x90
 8001fe4:	9708      	str	r7, [sp, #32]
 8001fe6:	e4e3      	b.n	80019b0 <_svfprintf_r+0x2e4>
 8001fe8:	4606      	mov	r6, r0
 8001fea:	e538      	b.n	8001a5e <_svfprintf_r+0x392>
 8001fec:	2310      	movs	r3, #16
 8001fee:	6063      	str	r3, [r4, #4]
 8001ff0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8001ff2:	3310      	adds	r3, #16
 8001ff4:	9323      	str	r3, [sp, #140]	; 0x8c
 8001ff6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8001ff8:	3301      	adds	r3, #1
 8001ffa:	2b07      	cmp	r3, #7
 8001ffc:	9322      	str	r3, [sp, #136]	; 0x88
 8001ffe:	dc04      	bgt.n	800200a <_svfprintf_r+0x93e>
 8002000:	3408      	adds	r4, #8
 8002002:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8002004:	3b10      	subs	r3, #16
 8002006:	9310      	str	r3, [sp, #64]	; 0x40
 8002008:	e611      	b.n	8001c2e <_svfprintf_r+0x562>
 800200a:	aa21      	add	r2, sp, #132	; 0x84
 800200c:	4649      	mov	r1, r9
 800200e:	4650      	mov	r0, sl
 8002010:	f001 feb8 	bl	8003d84 <__ssprint_r>
 8002014:	2800      	cmp	r0, #0
 8002016:	f040 82b6 	bne.w	8002586 <_svfprintf_r+0xeba>
 800201a:	ac2e      	add	r4, sp, #184	; 0xb8
 800201c:	e7f1      	b.n	8002002 <_svfprintf_r+0x936>
 800201e:	aa21      	add	r2, sp, #132	; 0x84
 8002020:	4649      	mov	r1, r9
 8002022:	4650      	mov	r0, sl
 8002024:	f001 feae 	bl	8003d84 <__ssprint_r>
 8002028:	2800      	cmp	r0, #0
 800202a:	f040 82ac 	bne.w	8002586 <_svfprintf_r+0xeba>
 800202e:	ac2e      	add	r4, sp, #184	; 0xb8
 8002030:	e610      	b.n	8001c54 <_svfprintf_r+0x588>
 8002032:	aa21      	add	r2, sp, #132	; 0x84
 8002034:	4649      	mov	r1, r9
 8002036:	4650      	mov	r0, sl
 8002038:	f001 fea4 	bl	8003d84 <__ssprint_r>
 800203c:	2800      	cmp	r0, #0
 800203e:	f040 82a2 	bne.w	8002586 <_svfprintf_r+0xeba>
 8002042:	ac2e      	add	r4, sp, #184	; 0xb8
 8002044:	e618      	b.n	8001c78 <_svfprintf_r+0x5ac>
 8002046:	aa21      	add	r2, sp, #132	; 0x84
 8002048:	4649      	mov	r1, r9
 800204a:	4650      	mov	r0, sl
 800204c:	f001 fe9a 	bl	8003d84 <__ssprint_r>
 8002050:	2800      	cmp	r0, #0
 8002052:	f040 8298 	bne.w	8002586 <_svfprintf_r+0xeba>
 8002056:	ac2e      	add	r4, sp, #184	; 0xb8
 8002058:	e61e      	b.n	8001c98 <_svfprintf_r+0x5cc>
 800205a:	2310      	movs	r3, #16
 800205c:	6063      	str	r3, [r4, #4]
 800205e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8002060:	3310      	adds	r3, #16
 8002062:	9323      	str	r3, [sp, #140]	; 0x8c
 8002064:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002066:	3301      	adds	r3, #1
 8002068:	2b07      	cmp	r3, #7
 800206a:	9322      	str	r3, [sp, #136]	; 0x88
 800206c:	dc04      	bgt.n	8002078 <_svfprintf_r+0x9ac>
 800206e:	3408      	adds	r4, #8
 8002070:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8002072:	3b10      	subs	r3, #16
 8002074:	9310      	str	r3, [sp, #64]	; 0x40
 8002076:	e618      	b.n	8001caa <_svfprintf_r+0x5de>
 8002078:	aa21      	add	r2, sp, #132	; 0x84
 800207a:	4649      	mov	r1, r9
 800207c:	4650      	mov	r0, sl
 800207e:	f001 fe81 	bl	8003d84 <__ssprint_r>
 8002082:	2800      	cmp	r0, #0
 8002084:	f040 827f 	bne.w	8002586 <_svfprintf_r+0xeba>
 8002088:	ac2e      	add	r4, sp, #184	; 0xb8
 800208a:	e7f1      	b.n	8002070 <_svfprintf_r+0x9a4>
 800208c:	aa21      	add	r2, sp, #132	; 0x84
 800208e:	4649      	mov	r1, r9
 8002090:	4650      	mov	r0, sl
 8002092:	f001 fe77 	bl	8003d84 <__ssprint_r>
 8002096:	2800      	cmp	r0, #0
 8002098:	f040 8275 	bne.w	8002586 <_svfprintf_r+0xeba>
 800209c:	ac2e      	add	r4, sp, #184	; 0xb8
 800209e:	e617      	b.n	8001cd0 <_svfprintf_r+0x604>
 80020a0:	2310      	movs	r3, #16
 80020a2:	6063      	str	r3, [r4, #4]
 80020a4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80020a6:	3310      	adds	r3, #16
 80020a8:	9323      	str	r3, [sp, #140]	; 0x8c
 80020aa:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80020ac:	3301      	adds	r3, #1
 80020ae:	2b07      	cmp	r3, #7
 80020b0:	9322      	str	r3, [sp, #136]	; 0x88
 80020b2:	dc02      	bgt.n	80020ba <_svfprintf_r+0x9ee>
 80020b4:	3408      	adds	r4, #8
 80020b6:	3e10      	subs	r6, #16
 80020b8:	e60e      	b.n	8001cd8 <_svfprintf_r+0x60c>
 80020ba:	aa21      	add	r2, sp, #132	; 0x84
 80020bc:	4649      	mov	r1, r9
 80020be:	4650      	mov	r0, sl
 80020c0:	f001 fe60 	bl	8003d84 <__ssprint_r>
 80020c4:	2800      	cmp	r0, #0
 80020c6:	f040 825e 	bne.w	8002586 <_svfprintf_r+0xeba>
 80020ca:	ac2e      	add	r4, sp, #184	; 0xb8
 80020cc:	e7f3      	b.n	80020b6 <_svfprintf_r+0x9ea>
 80020ce:	aa21      	add	r2, sp, #132	; 0x84
 80020d0:	4649      	mov	r1, r9
 80020d2:	4650      	mov	r0, sl
 80020d4:	f001 fe56 	bl	8003d84 <__ssprint_r>
 80020d8:	2800      	cmp	r0, #0
 80020da:	f040 8254 	bne.w	8002586 <_svfprintf_r+0xeba>
 80020de:	ac2e      	add	r4, sp, #184	; 0xb8
 80020e0:	e60a      	b.n	8001cf8 <_svfprintf_r+0x62c>
 80020e2:	9b06      	ldr	r3, [sp, #24]
 80020e4:	2b65      	cmp	r3, #101	; 0x65
 80020e6:	f340 81a9 	ble.w	800243c <_svfprintf_r+0xd70>
 80020ea:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80020ec:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80020ee:	980d      	ldr	r0, [sp, #52]	; 0x34
 80020f0:	990e      	ldr	r1, [sp, #56]	; 0x38
 80020f2:	f7fe fc55 	bl	80009a0 <__aeabi_dcmpeq>
 80020f6:	2800      	cmp	r0, #0
 80020f8:	d062      	beq.n	80021c0 <_svfprintf_r+0xaf4>
 80020fa:	4b2f      	ldr	r3, [pc, #188]	; (80021b8 <_svfprintf_r+0xaec>)
 80020fc:	6023      	str	r3, [r4, #0]
 80020fe:	2301      	movs	r3, #1
 8002100:	6063      	str	r3, [r4, #4]
 8002102:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8002104:	3301      	adds	r3, #1
 8002106:	9323      	str	r3, [sp, #140]	; 0x8c
 8002108:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800210a:	3301      	adds	r3, #1
 800210c:	2b07      	cmp	r3, #7
 800210e:	9322      	str	r3, [sp, #136]	; 0x88
 8002110:	dc25      	bgt.n	800215e <_svfprintf_r+0xa92>
 8002112:	3408      	adds	r4, #8
 8002114:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8002116:	9a07      	ldr	r2, [sp, #28]
 8002118:	4293      	cmp	r3, r2
 800211a:	db02      	blt.n	8002122 <_svfprintf_r+0xa56>
 800211c:	07ee      	lsls	r6, r5, #31
 800211e:	f57f ae02 	bpl.w	8001d26 <_svfprintf_r+0x65a>
 8002122:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8002124:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8002126:	6023      	str	r3, [r4, #0]
 8002128:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800212a:	6063      	str	r3, [r4, #4]
 800212c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800212e:	4413      	add	r3, r2
 8002130:	9323      	str	r3, [sp, #140]	; 0x8c
 8002132:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002134:	3301      	adds	r3, #1
 8002136:	2b07      	cmp	r3, #7
 8002138:	9322      	str	r3, [sp, #136]	; 0x88
 800213a:	dc1a      	bgt.n	8002172 <_svfprintf_r+0xaa6>
 800213c:	3408      	adds	r4, #8
 800213e:	9b07      	ldr	r3, [sp, #28]
 8002140:	1e5e      	subs	r6, r3, #1
 8002142:	2e00      	cmp	r6, #0
 8002144:	f77f adef 	ble.w	8001d26 <_svfprintf_r+0x65a>
 8002148:	f04f 0810 	mov.w	r8, #16
 800214c:	4f1b      	ldr	r7, [pc, #108]	; (80021bc <_svfprintf_r+0xaf0>)
 800214e:	2e10      	cmp	r6, #16
 8002150:	6027      	str	r7, [r4, #0]
 8002152:	dc18      	bgt.n	8002186 <_svfprintf_r+0xaba>
 8002154:	6066      	str	r6, [r4, #4]
 8002156:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8002158:	441e      	add	r6, r3
 800215a:	9623      	str	r6, [sp, #140]	; 0x8c
 800215c:	e5d4      	b.n	8001d08 <_svfprintf_r+0x63c>
 800215e:	aa21      	add	r2, sp, #132	; 0x84
 8002160:	4649      	mov	r1, r9
 8002162:	4650      	mov	r0, sl
 8002164:	f001 fe0e 	bl	8003d84 <__ssprint_r>
 8002168:	2800      	cmp	r0, #0
 800216a:	f040 820c 	bne.w	8002586 <_svfprintf_r+0xeba>
 800216e:	ac2e      	add	r4, sp, #184	; 0xb8
 8002170:	e7d0      	b.n	8002114 <_svfprintf_r+0xa48>
 8002172:	aa21      	add	r2, sp, #132	; 0x84
 8002174:	4649      	mov	r1, r9
 8002176:	4650      	mov	r0, sl
 8002178:	f001 fe04 	bl	8003d84 <__ssprint_r>
 800217c:	2800      	cmp	r0, #0
 800217e:	f040 8202 	bne.w	8002586 <_svfprintf_r+0xeba>
 8002182:	ac2e      	add	r4, sp, #184	; 0xb8
 8002184:	e7db      	b.n	800213e <_svfprintf_r+0xa72>
 8002186:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8002188:	f8c4 8004 	str.w	r8, [r4, #4]
 800218c:	3310      	adds	r3, #16
 800218e:	9323      	str	r3, [sp, #140]	; 0x8c
 8002190:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002192:	3301      	adds	r3, #1
 8002194:	2b07      	cmp	r3, #7
 8002196:	9322      	str	r3, [sp, #136]	; 0x88
 8002198:	dc02      	bgt.n	80021a0 <_svfprintf_r+0xad4>
 800219a:	3408      	adds	r4, #8
 800219c:	3e10      	subs	r6, #16
 800219e:	e7d6      	b.n	800214e <_svfprintf_r+0xa82>
 80021a0:	aa21      	add	r2, sp, #132	; 0x84
 80021a2:	4649      	mov	r1, r9
 80021a4:	4650      	mov	r0, sl
 80021a6:	f001 fded 	bl	8003d84 <__ssprint_r>
 80021aa:	2800      	cmp	r0, #0
 80021ac:	f040 81eb 	bne.w	8002586 <_svfprintf_r+0xeba>
 80021b0:	ac2e      	add	r4, sp, #184	; 0xb8
 80021b2:	e7f3      	b.n	800219c <_svfprintf_r+0xad0>
 80021b4:	080044eb 	.word	0x080044eb
 80021b8:	080044fc 	.word	0x080044fc
 80021bc:	0800450e 	.word	0x0800450e
 80021c0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80021c2:	2b00      	cmp	r3, #0
 80021c4:	dc7a      	bgt.n	80022bc <_svfprintf_r+0xbf0>
 80021c6:	4b9b      	ldr	r3, [pc, #620]	; (8002434 <_svfprintf_r+0xd68>)
 80021c8:	6023      	str	r3, [r4, #0]
 80021ca:	2301      	movs	r3, #1
 80021cc:	6063      	str	r3, [r4, #4]
 80021ce:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80021d0:	3301      	adds	r3, #1
 80021d2:	9323      	str	r3, [sp, #140]	; 0x8c
 80021d4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80021d6:	3301      	adds	r3, #1
 80021d8:	2b07      	cmp	r3, #7
 80021da:	9322      	str	r3, [sp, #136]	; 0x88
 80021dc:	dc44      	bgt.n	8002268 <_svfprintf_r+0xb9c>
 80021de:	3408      	adds	r4, #8
 80021e0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80021e2:	b923      	cbnz	r3, 80021ee <_svfprintf_r+0xb22>
 80021e4:	9b07      	ldr	r3, [sp, #28]
 80021e6:	b913      	cbnz	r3, 80021ee <_svfprintf_r+0xb22>
 80021e8:	07e8      	lsls	r0, r5, #31
 80021ea:	f57f ad9c 	bpl.w	8001d26 <_svfprintf_r+0x65a>
 80021ee:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80021f0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80021f2:	6023      	str	r3, [r4, #0]
 80021f4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80021f6:	6063      	str	r3, [r4, #4]
 80021f8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80021fa:	4413      	add	r3, r2
 80021fc:	9323      	str	r3, [sp, #140]	; 0x8c
 80021fe:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002200:	3301      	adds	r3, #1
 8002202:	2b07      	cmp	r3, #7
 8002204:	9322      	str	r3, [sp, #136]	; 0x88
 8002206:	dc39      	bgt.n	800227c <_svfprintf_r+0xbb0>
 8002208:	f104 0308 	add.w	r3, r4, #8
 800220c:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
 800220e:	2e00      	cmp	r6, #0
 8002210:	da19      	bge.n	8002246 <_svfprintf_r+0xb7a>
 8002212:	2410      	movs	r4, #16
 8002214:	4f88      	ldr	r7, [pc, #544]	; (8002438 <_svfprintf_r+0xd6c>)
 8002216:	4276      	negs	r6, r6
 8002218:	2e10      	cmp	r6, #16
 800221a:	601f      	str	r7, [r3, #0]
 800221c:	dc38      	bgt.n	8002290 <_svfprintf_r+0xbc4>
 800221e:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8002220:	605e      	str	r6, [r3, #4]
 8002222:	4416      	add	r6, r2
 8002224:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8002226:	9623      	str	r6, [sp, #140]	; 0x8c
 8002228:	3201      	adds	r2, #1
 800222a:	2a07      	cmp	r2, #7
 800222c:	f103 0308 	add.w	r3, r3, #8
 8002230:	9222      	str	r2, [sp, #136]	; 0x88
 8002232:	dd08      	ble.n	8002246 <_svfprintf_r+0xb7a>
 8002234:	aa21      	add	r2, sp, #132	; 0x84
 8002236:	4649      	mov	r1, r9
 8002238:	4650      	mov	r0, sl
 800223a:	f001 fda3 	bl	8003d84 <__ssprint_r>
 800223e:	2800      	cmp	r0, #0
 8002240:	f040 81a1 	bne.w	8002586 <_svfprintf_r+0xeba>
 8002244:	ab2e      	add	r3, sp, #184	; 0xb8
 8002246:	9a07      	ldr	r2, [sp, #28]
 8002248:	9907      	ldr	r1, [sp, #28]
 800224a:	605a      	str	r2, [r3, #4]
 800224c:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 800224e:	f8c3 8000 	str.w	r8, [r3]
 8002252:	440a      	add	r2, r1
 8002254:	9223      	str	r2, [sp, #140]	; 0x8c
 8002256:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8002258:	3201      	adds	r2, #1
 800225a:	2a07      	cmp	r2, #7
 800225c:	9222      	str	r2, [sp, #136]	; 0x88
 800225e:	f73f ad59 	bgt.w	8001d14 <_svfprintf_r+0x648>
 8002262:	f103 0408 	add.w	r4, r3, #8
 8002266:	e55e      	b.n	8001d26 <_svfprintf_r+0x65a>
 8002268:	aa21      	add	r2, sp, #132	; 0x84
 800226a:	4649      	mov	r1, r9
 800226c:	4650      	mov	r0, sl
 800226e:	f001 fd89 	bl	8003d84 <__ssprint_r>
 8002272:	2800      	cmp	r0, #0
 8002274:	f040 8187 	bne.w	8002586 <_svfprintf_r+0xeba>
 8002278:	ac2e      	add	r4, sp, #184	; 0xb8
 800227a:	e7b1      	b.n	80021e0 <_svfprintf_r+0xb14>
 800227c:	aa21      	add	r2, sp, #132	; 0x84
 800227e:	4649      	mov	r1, r9
 8002280:	4650      	mov	r0, sl
 8002282:	f001 fd7f 	bl	8003d84 <__ssprint_r>
 8002286:	2800      	cmp	r0, #0
 8002288:	f040 817d 	bne.w	8002586 <_svfprintf_r+0xeba>
 800228c:	ab2e      	add	r3, sp, #184	; 0xb8
 800228e:	e7bd      	b.n	800220c <_svfprintf_r+0xb40>
 8002290:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8002292:	605c      	str	r4, [r3, #4]
 8002294:	3210      	adds	r2, #16
 8002296:	9223      	str	r2, [sp, #140]	; 0x8c
 8002298:	9a22      	ldr	r2, [sp, #136]	; 0x88
 800229a:	3201      	adds	r2, #1
 800229c:	2a07      	cmp	r2, #7
 800229e:	9222      	str	r2, [sp, #136]	; 0x88
 80022a0:	dc02      	bgt.n	80022a8 <_svfprintf_r+0xbdc>
 80022a2:	3308      	adds	r3, #8
 80022a4:	3e10      	subs	r6, #16
 80022a6:	e7b7      	b.n	8002218 <_svfprintf_r+0xb4c>
 80022a8:	aa21      	add	r2, sp, #132	; 0x84
 80022aa:	4649      	mov	r1, r9
 80022ac:	4650      	mov	r0, sl
 80022ae:	f001 fd69 	bl	8003d84 <__ssprint_r>
 80022b2:	2800      	cmp	r0, #0
 80022b4:	f040 8167 	bne.w	8002586 <_svfprintf_r+0xeba>
 80022b8:	ab2e      	add	r3, sp, #184	; 0xb8
 80022ba:	e7f3      	b.n	80022a4 <_svfprintf_r+0xbd8>
 80022bc:	9b07      	ldr	r3, [sp, #28]
 80022be:	42bb      	cmp	r3, r7
 80022c0:	bfa8      	it	ge
 80022c2:	463b      	movge	r3, r7
 80022c4:	2b00      	cmp	r3, #0
 80022c6:	461e      	mov	r6, r3
 80022c8:	dd0b      	ble.n	80022e2 <_svfprintf_r+0xc16>
 80022ca:	6063      	str	r3, [r4, #4]
 80022cc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80022ce:	f8c4 8000 	str.w	r8, [r4]
 80022d2:	4433      	add	r3, r6
 80022d4:	9323      	str	r3, [sp, #140]	; 0x8c
 80022d6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80022d8:	3301      	adds	r3, #1
 80022da:	2b07      	cmp	r3, #7
 80022dc:	9322      	str	r3, [sp, #136]	; 0x88
 80022de:	dc5f      	bgt.n	80023a0 <_svfprintf_r+0xcd4>
 80022e0:	3408      	adds	r4, #8
 80022e2:	2e00      	cmp	r6, #0
 80022e4:	bfb4      	ite	lt
 80022e6:	463e      	movlt	r6, r7
 80022e8:	1bbe      	subge	r6, r7, r6
 80022ea:	2e00      	cmp	r6, #0
 80022ec:	dd0f      	ble.n	800230e <_svfprintf_r+0xc42>
 80022ee:	f8df b148 	ldr.w	fp, [pc, #328]	; 8002438 <_svfprintf_r+0xd6c>
 80022f2:	2e10      	cmp	r6, #16
 80022f4:	f8c4 b000 	str.w	fp, [r4]
 80022f8:	dc5c      	bgt.n	80023b4 <_svfprintf_r+0xce8>
 80022fa:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80022fc:	6066      	str	r6, [r4, #4]
 80022fe:	441e      	add	r6, r3
 8002300:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002302:	9623      	str	r6, [sp, #140]	; 0x8c
 8002304:	3301      	adds	r3, #1
 8002306:	2b07      	cmp	r3, #7
 8002308:	9322      	str	r3, [sp, #136]	; 0x88
 800230a:	dc6a      	bgt.n	80023e2 <_svfprintf_r+0xd16>
 800230c:	3408      	adds	r4, #8
 800230e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8002310:	9a07      	ldr	r2, [sp, #28]
 8002312:	4293      	cmp	r3, r2
 8002314:	db01      	blt.n	800231a <_svfprintf_r+0xc4e>
 8002316:	07e9      	lsls	r1, r5, #31
 8002318:	d50d      	bpl.n	8002336 <_svfprintf_r+0xc6a>
 800231a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800231c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800231e:	6023      	str	r3, [r4, #0]
 8002320:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002322:	6063      	str	r3, [r4, #4]
 8002324:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8002326:	4413      	add	r3, r2
 8002328:	9323      	str	r3, [sp, #140]	; 0x8c
 800232a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800232c:	3301      	adds	r3, #1
 800232e:	2b07      	cmp	r3, #7
 8002330:	9322      	str	r3, [sp, #136]	; 0x88
 8002332:	dc60      	bgt.n	80023f6 <_svfprintf_r+0xd2a>
 8002334:	3408      	adds	r4, #8
 8002336:	9b07      	ldr	r3, [sp, #28]
 8002338:	9a07      	ldr	r2, [sp, #28]
 800233a:	1bde      	subs	r6, r3, r7
 800233c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800233e:	1ad3      	subs	r3, r2, r3
 8002340:	429e      	cmp	r6, r3
 8002342:	bfa8      	it	ge
 8002344:	461e      	movge	r6, r3
 8002346:	2e00      	cmp	r6, #0
 8002348:	dd0b      	ble.n	8002362 <_svfprintf_r+0xc96>
 800234a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800234c:	4447      	add	r7, r8
 800234e:	4433      	add	r3, r6
 8002350:	9323      	str	r3, [sp, #140]	; 0x8c
 8002352:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002354:	6027      	str	r7, [r4, #0]
 8002356:	3301      	adds	r3, #1
 8002358:	2b07      	cmp	r3, #7
 800235a:	6066      	str	r6, [r4, #4]
 800235c:	9322      	str	r3, [sp, #136]	; 0x88
 800235e:	dc54      	bgt.n	800240a <_svfprintf_r+0xd3e>
 8002360:	3408      	adds	r4, #8
 8002362:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8002364:	9a07      	ldr	r2, [sp, #28]
 8002366:	2e00      	cmp	r6, #0
 8002368:	eba2 0303 	sub.w	r3, r2, r3
 800236c:	bfb4      	ite	lt
 800236e:	461e      	movlt	r6, r3
 8002370:	1b9e      	subge	r6, r3, r6
 8002372:	2e00      	cmp	r6, #0
 8002374:	f77f acd7 	ble.w	8001d26 <_svfprintf_r+0x65a>
 8002378:	f04f 0810 	mov.w	r8, #16
 800237c:	4f2e      	ldr	r7, [pc, #184]	; (8002438 <_svfprintf_r+0xd6c>)
 800237e:	2e10      	cmp	r6, #16
 8002380:	6027      	str	r7, [r4, #0]
 8002382:	f77f aee7 	ble.w	8002154 <_svfprintf_r+0xa88>
 8002386:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8002388:	f8c4 8004 	str.w	r8, [r4, #4]
 800238c:	3310      	adds	r3, #16
 800238e:	9323      	str	r3, [sp, #140]	; 0x8c
 8002390:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002392:	3301      	adds	r3, #1
 8002394:	2b07      	cmp	r3, #7
 8002396:	9322      	str	r3, [sp, #136]	; 0x88
 8002398:	dc41      	bgt.n	800241e <_svfprintf_r+0xd52>
 800239a:	3408      	adds	r4, #8
 800239c:	3e10      	subs	r6, #16
 800239e:	e7ee      	b.n	800237e <_svfprintf_r+0xcb2>
 80023a0:	aa21      	add	r2, sp, #132	; 0x84
 80023a2:	4649      	mov	r1, r9
 80023a4:	4650      	mov	r0, sl
 80023a6:	f001 fced 	bl	8003d84 <__ssprint_r>
 80023aa:	2800      	cmp	r0, #0
 80023ac:	f040 80eb 	bne.w	8002586 <_svfprintf_r+0xeba>
 80023b0:	ac2e      	add	r4, sp, #184	; 0xb8
 80023b2:	e796      	b.n	80022e2 <_svfprintf_r+0xc16>
 80023b4:	2310      	movs	r3, #16
 80023b6:	6063      	str	r3, [r4, #4]
 80023b8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80023ba:	3310      	adds	r3, #16
 80023bc:	9323      	str	r3, [sp, #140]	; 0x8c
 80023be:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80023c0:	3301      	adds	r3, #1
 80023c2:	2b07      	cmp	r3, #7
 80023c4:	9322      	str	r3, [sp, #136]	; 0x88
 80023c6:	dc02      	bgt.n	80023ce <_svfprintf_r+0xd02>
 80023c8:	3408      	adds	r4, #8
 80023ca:	3e10      	subs	r6, #16
 80023cc:	e791      	b.n	80022f2 <_svfprintf_r+0xc26>
 80023ce:	aa21      	add	r2, sp, #132	; 0x84
 80023d0:	4649      	mov	r1, r9
 80023d2:	4650      	mov	r0, sl
 80023d4:	f001 fcd6 	bl	8003d84 <__ssprint_r>
 80023d8:	2800      	cmp	r0, #0
 80023da:	f040 80d4 	bne.w	8002586 <_svfprintf_r+0xeba>
 80023de:	ac2e      	add	r4, sp, #184	; 0xb8
 80023e0:	e7f3      	b.n	80023ca <_svfprintf_r+0xcfe>
 80023e2:	aa21      	add	r2, sp, #132	; 0x84
 80023e4:	4649      	mov	r1, r9
 80023e6:	4650      	mov	r0, sl
 80023e8:	f001 fccc 	bl	8003d84 <__ssprint_r>
 80023ec:	2800      	cmp	r0, #0
 80023ee:	f040 80ca 	bne.w	8002586 <_svfprintf_r+0xeba>
 80023f2:	ac2e      	add	r4, sp, #184	; 0xb8
 80023f4:	e78b      	b.n	800230e <_svfprintf_r+0xc42>
 80023f6:	aa21      	add	r2, sp, #132	; 0x84
 80023f8:	4649      	mov	r1, r9
 80023fa:	4650      	mov	r0, sl
 80023fc:	f001 fcc2 	bl	8003d84 <__ssprint_r>
 8002400:	2800      	cmp	r0, #0
 8002402:	f040 80c0 	bne.w	8002586 <_svfprintf_r+0xeba>
 8002406:	ac2e      	add	r4, sp, #184	; 0xb8
 8002408:	e795      	b.n	8002336 <_svfprintf_r+0xc6a>
 800240a:	aa21      	add	r2, sp, #132	; 0x84
 800240c:	4649      	mov	r1, r9
 800240e:	4650      	mov	r0, sl
 8002410:	f001 fcb8 	bl	8003d84 <__ssprint_r>
 8002414:	2800      	cmp	r0, #0
 8002416:	f040 80b6 	bne.w	8002586 <_svfprintf_r+0xeba>
 800241a:	ac2e      	add	r4, sp, #184	; 0xb8
 800241c:	e7a1      	b.n	8002362 <_svfprintf_r+0xc96>
 800241e:	aa21      	add	r2, sp, #132	; 0x84
 8002420:	4649      	mov	r1, r9
 8002422:	4650      	mov	r0, sl
 8002424:	f001 fcae 	bl	8003d84 <__ssprint_r>
 8002428:	2800      	cmp	r0, #0
 800242a:	f040 80ac 	bne.w	8002586 <_svfprintf_r+0xeba>
 800242e:	ac2e      	add	r4, sp, #184	; 0xb8
 8002430:	e7b4      	b.n	800239c <_svfprintf_r+0xcd0>
 8002432:	bf00      	nop
 8002434:	080044fc 	.word	0x080044fc
 8002438:	0800450e 	.word	0x0800450e
 800243c:	9b07      	ldr	r3, [sp, #28]
 800243e:	2b01      	cmp	r3, #1
 8002440:	dc01      	bgt.n	8002446 <_svfprintf_r+0xd7a>
 8002442:	07ea      	lsls	r2, r5, #31
 8002444:	d576      	bpl.n	8002534 <_svfprintf_r+0xe68>
 8002446:	2301      	movs	r3, #1
 8002448:	6063      	str	r3, [r4, #4]
 800244a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800244c:	f8c4 8000 	str.w	r8, [r4]
 8002450:	3301      	adds	r3, #1
 8002452:	9323      	str	r3, [sp, #140]	; 0x8c
 8002454:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002456:	3301      	adds	r3, #1
 8002458:	2b07      	cmp	r3, #7
 800245a:	9322      	str	r3, [sp, #136]	; 0x88
 800245c:	dc36      	bgt.n	80024cc <_svfprintf_r+0xe00>
 800245e:	3408      	adds	r4, #8
 8002460:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8002462:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8002464:	6023      	str	r3, [r4, #0]
 8002466:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002468:	6063      	str	r3, [r4, #4]
 800246a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800246c:	4413      	add	r3, r2
 800246e:	9323      	str	r3, [sp, #140]	; 0x8c
 8002470:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002472:	3301      	adds	r3, #1
 8002474:	2b07      	cmp	r3, #7
 8002476:	9322      	str	r3, [sp, #136]	; 0x88
 8002478:	dc31      	bgt.n	80024de <_svfprintf_r+0xe12>
 800247a:	3408      	adds	r4, #8
 800247c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800247e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8002480:	980d      	ldr	r0, [sp, #52]	; 0x34
 8002482:	990e      	ldr	r1, [sp, #56]	; 0x38
 8002484:	f7fe fa8c 	bl	80009a0 <__aeabi_dcmpeq>
 8002488:	9b07      	ldr	r3, [sp, #28]
 800248a:	1e5e      	subs	r6, r3, #1
 800248c:	2800      	cmp	r0, #0
 800248e:	d12f      	bne.n	80024f0 <_svfprintf_r+0xe24>
 8002490:	f108 0301 	add.w	r3, r8, #1
 8002494:	e884 0048 	stmia.w	r4, {r3, r6}
 8002498:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800249a:	9a07      	ldr	r2, [sp, #28]
 800249c:	3b01      	subs	r3, #1
 800249e:	4413      	add	r3, r2
 80024a0:	9323      	str	r3, [sp, #140]	; 0x8c
 80024a2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80024a4:	3301      	adds	r3, #1
 80024a6:	2b07      	cmp	r3, #7
 80024a8:	9322      	str	r3, [sp, #136]	; 0x88
 80024aa:	dd4a      	ble.n	8002542 <_svfprintf_r+0xe76>
 80024ac:	aa21      	add	r2, sp, #132	; 0x84
 80024ae:	4649      	mov	r1, r9
 80024b0:	4650      	mov	r0, sl
 80024b2:	f001 fc67 	bl	8003d84 <__ssprint_r>
 80024b6:	2800      	cmp	r0, #0
 80024b8:	d165      	bne.n	8002586 <_svfprintf_r+0xeba>
 80024ba:	ac2e      	add	r4, sp, #184	; 0xb8
 80024bc:	ab1d      	add	r3, sp, #116	; 0x74
 80024be:	6023      	str	r3, [r4, #0]
 80024c0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80024c2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80024c4:	6063      	str	r3, [r4, #4]
 80024c6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80024c8:	4413      	add	r3, r2
 80024ca:	e41c      	b.n	8001d06 <_svfprintf_r+0x63a>
 80024cc:	aa21      	add	r2, sp, #132	; 0x84
 80024ce:	4649      	mov	r1, r9
 80024d0:	4650      	mov	r0, sl
 80024d2:	f001 fc57 	bl	8003d84 <__ssprint_r>
 80024d6:	2800      	cmp	r0, #0
 80024d8:	d155      	bne.n	8002586 <_svfprintf_r+0xeba>
 80024da:	ac2e      	add	r4, sp, #184	; 0xb8
 80024dc:	e7c0      	b.n	8002460 <_svfprintf_r+0xd94>
 80024de:	aa21      	add	r2, sp, #132	; 0x84
 80024e0:	4649      	mov	r1, r9
 80024e2:	4650      	mov	r0, sl
 80024e4:	f001 fc4e 	bl	8003d84 <__ssprint_r>
 80024e8:	2800      	cmp	r0, #0
 80024ea:	d14c      	bne.n	8002586 <_svfprintf_r+0xeba>
 80024ec:	ac2e      	add	r4, sp, #184	; 0xb8
 80024ee:	e7c5      	b.n	800247c <_svfprintf_r+0xdb0>
 80024f0:	2e00      	cmp	r6, #0
 80024f2:	dde3      	ble.n	80024bc <_svfprintf_r+0xdf0>
 80024f4:	f04f 0810 	mov.w	r8, #16
 80024f8:	4f58      	ldr	r7, [pc, #352]	; (800265c <_svfprintf_r+0xf90>)
 80024fa:	2e10      	cmp	r6, #16
 80024fc:	6027      	str	r7, [r4, #0]
 80024fe:	dc04      	bgt.n	800250a <_svfprintf_r+0xe3e>
 8002500:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8002502:	6066      	str	r6, [r4, #4]
 8002504:	441e      	add	r6, r3
 8002506:	9623      	str	r6, [sp, #140]	; 0x8c
 8002508:	e7cb      	b.n	80024a2 <_svfprintf_r+0xdd6>
 800250a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800250c:	f8c4 8004 	str.w	r8, [r4, #4]
 8002510:	3310      	adds	r3, #16
 8002512:	9323      	str	r3, [sp, #140]	; 0x8c
 8002514:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002516:	3301      	adds	r3, #1
 8002518:	2b07      	cmp	r3, #7
 800251a:	9322      	str	r3, [sp, #136]	; 0x88
 800251c:	dc02      	bgt.n	8002524 <_svfprintf_r+0xe58>
 800251e:	3408      	adds	r4, #8
 8002520:	3e10      	subs	r6, #16
 8002522:	e7ea      	b.n	80024fa <_svfprintf_r+0xe2e>
 8002524:	aa21      	add	r2, sp, #132	; 0x84
 8002526:	4649      	mov	r1, r9
 8002528:	4650      	mov	r0, sl
 800252a:	f001 fc2b 	bl	8003d84 <__ssprint_r>
 800252e:	bb50      	cbnz	r0, 8002586 <_svfprintf_r+0xeba>
 8002530:	ac2e      	add	r4, sp, #184	; 0xb8
 8002532:	e7f5      	b.n	8002520 <_svfprintf_r+0xe54>
 8002534:	2301      	movs	r3, #1
 8002536:	6063      	str	r3, [r4, #4]
 8002538:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800253a:	f8c4 8000 	str.w	r8, [r4]
 800253e:	3301      	adds	r3, #1
 8002540:	e7ae      	b.n	80024a0 <_svfprintf_r+0xdd4>
 8002542:	3408      	adds	r4, #8
 8002544:	e7ba      	b.n	80024bc <_svfprintf_r+0xdf0>
 8002546:	3408      	adds	r4, #8
 8002548:	f7ff bbed 	b.w	8001d26 <_svfprintf_r+0x65a>
 800254c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800254e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8002550:	1a9d      	subs	r5, r3, r2
 8002552:	2d00      	cmp	r5, #0
 8002554:	f77f abea 	ble.w	8001d2c <_svfprintf_r+0x660>
 8002558:	2610      	movs	r6, #16
 800255a:	4b41      	ldr	r3, [pc, #260]	; (8002660 <_svfprintf_r+0xf94>)
 800255c:	2d10      	cmp	r5, #16
 800255e:	6023      	str	r3, [r4, #0]
 8002560:	dc1b      	bgt.n	800259a <_svfprintf_r+0xece>
 8002562:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8002564:	6065      	str	r5, [r4, #4]
 8002566:	441d      	add	r5, r3
 8002568:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800256a:	9523      	str	r5, [sp, #140]	; 0x8c
 800256c:	3301      	adds	r3, #1
 800256e:	2b07      	cmp	r3, #7
 8002570:	9322      	str	r3, [sp, #136]	; 0x88
 8002572:	f77f abdb 	ble.w	8001d2c <_svfprintf_r+0x660>
 8002576:	aa21      	add	r2, sp, #132	; 0x84
 8002578:	4649      	mov	r1, r9
 800257a:	4650      	mov	r0, sl
 800257c:	f001 fc02 	bl	8003d84 <__ssprint_r>
 8002580:	2800      	cmp	r0, #0
 8002582:	f43f abd3 	beq.w	8001d2c <_svfprintf_r+0x660>
 8002586:	f8b9 300c 	ldrh.w	r3, [r9, #12]
 800258a:	f013 0f40 	tst.w	r3, #64	; 0x40
 800258e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8002590:	bf18      	it	ne
 8002592:	f04f 33ff 	movne.w	r3, #4294967295
 8002596:	f7ff b8bd 	b.w	8001714 <_svfprintf_r+0x48>
 800259a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800259c:	6066      	str	r6, [r4, #4]
 800259e:	3310      	adds	r3, #16
 80025a0:	9323      	str	r3, [sp, #140]	; 0x8c
 80025a2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80025a4:	3301      	adds	r3, #1
 80025a6:	2b07      	cmp	r3, #7
 80025a8:	9322      	str	r3, [sp, #136]	; 0x88
 80025aa:	dc02      	bgt.n	80025b2 <_svfprintf_r+0xee6>
 80025ac:	3408      	adds	r4, #8
 80025ae:	3d10      	subs	r5, #16
 80025b0:	e7d3      	b.n	800255a <_svfprintf_r+0xe8e>
 80025b2:	aa21      	add	r2, sp, #132	; 0x84
 80025b4:	4649      	mov	r1, r9
 80025b6:	4650      	mov	r0, sl
 80025b8:	f001 fbe4 	bl	8003d84 <__ssprint_r>
 80025bc:	2800      	cmp	r0, #0
 80025be:	d1e2      	bne.n	8002586 <_svfprintf_r+0xeba>
 80025c0:	ac2e      	add	r4, sp, #184	; 0xb8
 80025c2:	e7f4      	b.n	80025ae <_svfprintf_r+0xee2>
 80025c4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80025c6:	2b00      	cmp	r3, #0
 80025c8:	d0dd      	beq.n	8002586 <_svfprintf_r+0xeba>
 80025ca:	aa21      	add	r2, sp, #132	; 0x84
 80025cc:	4649      	mov	r1, r9
 80025ce:	4650      	mov	r0, sl
 80025d0:	f001 fbd8 	bl	8003d84 <__ssprint_r>
 80025d4:	e7d7      	b.n	8002586 <_svfprintf_r+0xeba>
 80025d6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80025d8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80025da:	980d      	ldr	r0, [sp, #52]	; 0x34
 80025dc:	990e      	ldr	r1, [sp, #56]	; 0x38
 80025de:	f7fe fa11 	bl	8000a04 <__aeabi_dcmpun>
 80025e2:	2800      	cmp	r0, #0
 80025e4:	f43f aa3d 	beq.w	8001a62 <_svfprintf_r+0x396>
 80025e8:	4b1e      	ldr	r3, [pc, #120]	; (8002664 <_svfprintf_r+0xf98>)
 80025ea:	4a1f      	ldr	r2, [pc, #124]	; (8002668 <_svfprintf_r+0xf9c>)
 80025ec:	f7ff ba2d 	b.w	8001a4a <_svfprintf_r+0x37e>
 80025f0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80025f2:	eba3 0308 	sub.w	r3, r3, r8
 80025f6:	9307      	str	r3, [sp, #28]
 80025f8:	f7ff baaf 	b.w	8001b5a <_svfprintf_r+0x48e>
 80025fc:	ea56 0207 	orrs.w	r2, r6, r7
 8002600:	950f      	str	r5, [sp, #60]	; 0x3c
 8002602:	f43f ac2b 	beq.w	8001e5c <_svfprintf_r+0x790>
 8002606:	2b01      	cmp	r3, #1
 8002608:	f43f ac9d 	beq.w	8001f46 <_svfprintf_r+0x87a>
 800260c:	2b02      	cmp	r3, #2
 800260e:	f43f acbd 	beq.w	8001f8c <_svfprintf_r+0x8c0>
 8002612:	ab2e      	add	r3, sp, #184	; 0xb8
 8002614:	08f1      	lsrs	r1, r6, #3
 8002616:	ea41 7147 	orr.w	r1, r1, r7, lsl #29
 800261a:	08f8      	lsrs	r0, r7, #3
 800261c:	f006 0207 	and.w	r2, r6, #7
 8002620:	4607      	mov	r7, r0
 8002622:	460e      	mov	r6, r1
 8002624:	3230      	adds	r2, #48	; 0x30
 8002626:	ea56 0107 	orrs.w	r1, r6, r7
 800262a:	f103 38ff 	add.w	r8, r3, #4294967295
 800262e:	f803 2c01 	strb.w	r2, [r3, #-1]
 8002632:	f47f ac86 	bne.w	8001f42 <_svfprintf_r+0x876>
 8002636:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8002638:	07c9      	lsls	r1, r1, #31
 800263a:	d506      	bpl.n	800264a <_svfprintf_r+0xf7e>
 800263c:	2a30      	cmp	r2, #48	; 0x30
 800263e:	d004      	beq.n	800264a <_svfprintf_r+0xf7e>
 8002640:	2230      	movs	r2, #48	; 0x30
 8002642:	f808 2c01 	strb.w	r2, [r8, #-1]
 8002646:	f1a3 0802 	sub.w	r8, r3, #2
 800264a:	ab2e      	add	r3, sp, #184	; 0xb8
 800264c:	465e      	mov	r6, fp
 800264e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8002650:	eba3 0b08 	sub.w	fp, r3, r8
 8002654:	2700      	movs	r7, #0
 8002656:	f7ff bace 	b.w	8001bf6 <_svfprintf_r+0x52a>
 800265a:	bf00      	nop
 800265c:	0800450e 	.word	0x0800450e
 8002660:	080044fe 	.word	0x080044fe
 8002664:	080044d2 	.word	0x080044d2
 8002668:	080044d6 	.word	0x080044d6

0800266c <quorem>:
 800266c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002670:	6903      	ldr	r3, [r0, #16]
 8002672:	690c      	ldr	r4, [r1, #16]
 8002674:	4680      	mov	r8, r0
 8002676:	429c      	cmp	r4, r3
 8002678:	f300 8082 	bgt.w	8002780 <quorem+0x114>
 800267c:	3c01      	subs	r4, #1
 800267e:	f101 0714 	add.w	r7, r1, #20
 8002682:	f100 0614 	add.w	r6, r0, #20
 8002686:	f857 5024 	ldr.w	r5, [r7, r4, lsl #2]
 800268a:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
 800268e:	3501      	adds	r5, #1
 8002690:	fbb0 f5f5 	udiv	r5, r0, r5
 8002694:	ea4f 0e84 	mov.w	lr, r4, lsl #2
 8002698:	eb06 030e 	add.w	r3, r6, lr
 800269c:	eb07 090e 	add.w	r9, r7, lr
 80026a0:	9301      	str	r3, [sp, #4]
 80026a2:	b38d      	cbz	r5, 8002708 <quorem+0x9c>
 80026a4:	f04f 0a00 	mov.w	sl, #0
 80026a8:	4638      	mov	r0, r7
 80026aa:	46b4      	mov	ip, r6
 80026ac:	46d3      	mov	fp, sl
 80026ae:	f850 2b04 	ldr.w	r2, [r0], #4
 80026b2:	b293      	uxth	r3, r2
 80026b4:	fb05 a303 	mla	r3, r5, r3, sl
 80026b8:	0c12      	lsrs	r2, r2, #16
 80026ba:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80026be:	fb05 a202 	mla	r2, r5, r2, sl
 80026c2:	b29b      	uxth	r3, r3
 80026c4:	ebab 0303 	sub.w	r3, fp, r3
 80026c8:	f8bc b000 	ldrh.w	fp, [ip]
 80026cc:	ea4f 4a12 	mov.w	sl, r2, lsr #16
 80026d0:	445b      	add	r3, fp
 80026d2:	fa1f fb82 	uxth.w	fp, r2
 80026d6:	f8dc 2000 	ldr.w	r2, [ip]
 80026da:	4581      	cmp	r9, r0
 80026dc:	ebcb 4212 	rsb	r2, fp, r2, lsr #16
 80026e0:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80026e4:	b29b      	uxth	r3, r3
 80026e6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80026ea:	ea4f 4b22 	mov.w	fp, r2, asr #16
 80026ee:	f84c 3b04 	str.w	r3, [ip], #4
 80026f2:	d2dc      	bcs.n	80026ae <quorem+0x42>
 80026f4:	f856 300e 	ldr.w	r3, [r6, lr]
 80026f8:	b933      	cbnz	r3, 8002708 <quorem+0x9c>
 80026fa:	9b01      	ldr	r3, [sp, #4]
 80026fc:	3b04      	subs	r3, #4
 80026fe:	429e      	cmp	r6, r3
 8002700:	461a      	mov	r2, r3
 8002702:	d331      	bcc.n	8002768 <quorem+0xfc>
 8002704:	f8c8 4010 	str.w	r4, [r8, #16]
 8002708:	4640      	mov	r0, r8
 800270a:	f001 fa62 	bl	8003bd2 <__mcmp>
 800270e:	2800      	cmp	r0, #0
 8002710:	db26      	blt.n	8002760 <quorem+0xf4>
 8002712:	4630      	mov	r0, r6
 8002714:	f04f 0e00 	mov.w	lr, #0
 8002718:	3501      	adds	r5, #1
 800271a:	f857 1b04 	ldr.w	r1, [r7], #4
 800271e:	f8d0 c000 	ldr.w	ip, [r0]
 8002722:	b28b      	uxth	r3, r1
 8002724:	ebae 0303 	sub.w	r3, lr, r3
 8002728:	fa1f f28c 	uxth.w	r2, ip
 800272c:	4413      	add	r3, r2
 800272e:	0c0a      	lsrs	r2, r1, #16
 8002730:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
 8002734:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8002738:	b29b      	uxth	r3, r3
 800273a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800273e:	45b9      	cmp	r9, r7
 8002740:	ea4f 4e22 	mov.w	lr, r2, asr #16
 8002744:	f840 3b04 	str.w	r3, [r0], #4
 8002748:	d2e7      	bcs.n	800271a <quorem+0xae>
 800274a:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
 800274e:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 8002752:	b92a      	cbnz	r2, 8002760 <quorem+0xf4>
 8002754:	3b04      	subs	r3, #4
 8002756:	429e      	cmp	r6, r3
 8002758:	461a      	mov	r2, r3
 800275a:	d30b      	bcc.n	8002774 <quorem+0x108>
 800275c:	f8c8 4010 	str.w	r4, [r8, #16]
 8002760:	4628      	mov	r0, r5
 8002762:	b003      	add	sp, #12
 8002764:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002768:	6812      	ldr	r2, [r2, #0]
 800276a:	3b04      	subs	r3, #4
 800276c:	2a00      	cmp	r2, #0
 800276e:	d1c9      	bne.n	8002704 <quorem+0x98>
 8002770:	3c01      	subs	r4, #1
 8002772:	e7c4      	b.n	80026fe <quorem+0x92>
 8002774:	6812      	ldr	r2, [r2, #0]
 8002776:	3b04      	subs	r3, #4
 8002778:	2a00      	cmp	r2, #0
 800277a:	d1ef      	bne.n	800275c <quorem+0xf0>
 800277c:	3c01      	subs	r4, #1
 800277e:	e7ea      	b.n	8002756 <quorem+0xea>
 8002780:	2000      	movs	r0, #0
 8002782:	e7ee      	b.n	8002762 <quorem+0xf6>
 8002784:	0000      	movs	r0, r0
	...

08002788 <_dtoa_r>:
 8002788:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800278c:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800278e:	b095      	sub	sp, #84	; 0x54
 8002790:	4604      	mov	r4, r0
 8002792:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8002794:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002798:	b93e      	cbnz	r6, 80027aa <_dtoa_r+0x22>
 800279a:	2010      	movs	r0, #16
 800279c:	f000 fdd6 	bl	800334c <malloc>
 80027a0:	6260      	str	r0, [r4, #36]	; 0x24
 80027a2:	6046      	str	r6, [r0, #4]
 80027a4:	6086      	str	r6, [r0, #8]
 80027a6:	6006      	str	r6, [r0, #0]
 80027a8:	60c6      	str	r6, [r0, #12]
 80027aa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80027ac:	6819      	ldr	r1, [r3, #0]
 80027ae:	b151      	cbz	r1, 80027c6 <_dtoa_r+0x3e>
 80027b0:	685a      	ldr	r2, [r3, #4]
 80027b2:	2301      	movs	r3, #1
 80027b4:	4093      	lsls	r3, r2
 80027b6:	604a      	str	r2, [r1, #4]
 80027b8:	608b      	str	r3, [r1, #8]
 80027ba:	4620      	mov	r0, r4
 80027bc:	f001 f834 	bl	8003828 <_Bfree>
 80027c0:	2200      	movs	r2, #0
 80027c2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80027c4:	601a      	str	r2, [r3, #0]
 80027c6:	9b03      	ldr	r3, [sp, #12]
 80027c8:	2b00      	cmp	r3, #0
 80027ca:	bfb7      	itett	lt
 80027cc:	2301      	movlt	r3, #1
 80027ce:	2300      	movge	r3, #0
 80027d0:	602b      	strlt	r3, [r5, #0]
 80027d2:	9b03      	ldrlt	r3, [sp, #12]
 80027d4:	bfae      	itee	ge
 80027d6:	602b      	strge	r3, [r5, #0]
 80027d8:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 80027dc:	9303      	strlt	r3, [sp, #12]
 80027de:	f8dd 900c 	ldr.w	r9, [sp, #12]
 80027e2:	4bab      	ldr	r3, [pc, #684]	; (8002a90 <_dtoa_r+0x308>)
 80027e4:	ea33 0309 	bics.w	r3, r3, r9
 80027e8:	d11b      	bne.n	8002822 <_dtoa_r+0x9a>
 80027ea:	f242 730f 	movw	r3, #9999	; 0x270f
 80027ee:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80027f0:	6013      	str	r3, [r2, #0]
 80027f2:	9b02      	ldr	r3, [sp, #8]
 80027f4:	b923      	cbnz	r3, 8002800 <_dtoa_r+0x78>
 80027f6:	f3c9 0013 	ubfx	r0, r9, #0, #20
 80027fa:	2800      	cmp	r0, #0
 80027fc:	f000 8583 	beq.w	8003306 <_dtoa_r+0xb7e>
 8002800:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002802:	b953      	cbnz	r3, 800281a <_dtoa_r+0x92>
 8002804:	4ba3      	ldr	r3, [pc, #652]	; (8002a94 <_dtoa_r+0x30c>)
 8002806:	e021      	b.n	800284c <_dtoa_r+0xc4>
 8002808:	4ba3      	ldr	r3, [pc, #652]	; (8002a98 <_dtoa_r+0x310>)
 800280a:	9306      	str	r3, [sp, #24]
 800280c:	3308      	adds	r3, #8
 800280e:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8002810:	6013      	str	r3, [r2, #0]
 8002812:	9806      	ldr	r0, [sp, #24]
 8002814:	b015      	add	sp, #84	; 0x54
 8002816:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800281a:	4b9e      	ldr	r3, [pc, #632]	; (8002a94 <_dtoa_r+0x30c>)
 800281c:	9306      	str	r3, [sp, #24]
 800281e:	3303      	adds	r3, #3
 8002820:	e7f5      	b.n	800280e <_dtoa_r+0x86>
 8002822:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8002826:	2200      	movs	r2, #0
 8002828:	2300      	movs	r3, #0
 800282a:	4630      	mov	r0, r6
 800282c:	4639      	mov	r1, r7
 800282e:	f7fe f8b7 	bl	80009a0 <__aeabi_dcmpeq>
 8002832:	4680      	mov	r8, r0
 8002834:	b160      	cbz	r0, 8002850 <_dtoa_r+0xc8>
 8002836:	2301      	movs	r3, #1
 8002838:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800283a:	6013      	str	r3, [r2, #0]
 800283c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800283e:	2b00      	cmp	r3, #0
 8002840:	f000 855e 	beq.w	8003300 <_dtoa_r+0xb78>
 8002844:	4b95      	ldr	r3, [pc, #596]	; (8002a9c <_dtoa_r+0x314>)
 8002846:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8002848:	6013      	str	r3, [r2, #0]
 800284a:	3b01      	subs	r3, #1
 800284c:	9306      	str	r3, [sp, #24]
 800284e:	e7e0      	b.n	8002812 <_dtoa_r+0x8a>
 8002850:	ab12      	add	r3, sp, #72	; 0x48
 8002852:	9301      	str	r3, [sp, #4]
 8002854:	ab13      	add	r3, sp, #76	; 0x4c
 8002856:	9300      	str	r3, [sp, #0]
 8002858:	4632      	mov	r2, r6
 800285a:	463b      	mov	r3, r7
 800285c:	4620      	mov	r0, r4
 800285e:	f001 fa31 	bl	8003cc4 <__d2b>
 8002862:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8002866:	4682      	mov	sl, r0
 8002868:	2d00      	cmp	r5, #0
 800286a:	d07d      	beq.n	8002968 <_dtoa_r+0x1e0>
 800286c:	4630      	mov	r0, r6
 800286e:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8002872:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
 8002876:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
 800287a:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 800287e:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 8002882:	2200      	movs	r2, #0
 8002884:	4b86      	ldr	r3, [pc, #536]	; (8002aa0 <_dtoa_r+0x318>)
 8002886:	f7fd fc6f 	bl	8000168 <__aeabi_dsub>
 800288a:	a37b      	add	r3, pc, #492	; (adr r3, 8002a78 <_dtoa_r+0x2f0>)
 800288c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002890:	f7fd fe1e 	bl	80004d0 <__aeabi_dmul>
 8002894:	a37a      	add	r3, pc, #488	; (adr r3, 8002a80 <_dtoa_r+0x2f8>)
 8002896:	e9d3 2300 	ldrd	r2, r3, [r3]
 800289a:	f7fd fc67 	bl	800016c <__adddf3>
 800289e:	4606      	mov	r6, r0
 80028a0:	4628      	mov	r0, r5
 80028a2:	460f      	mov	r7, r1
 80028a4:	f7fd fdae 	bl	8000404 <__aeabi_i2d>
 80028a8:	a377      	add	r3, pc, #476	; (adr r3, 8002a88 <_dtoa_r+0x300>)
 80028aa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80028ae:	f7fd fe0f 	bl	80004d0 <__aeabi_dmul>
 80028b2:	4602      	mov	r2, r0
 80028b4:	460b      	mov	r3, r1
 80028b6:	4630      	mov	r0, r6
 80028b8:	4639      	mov	r1, r7
 80028ba:	f7fd fc57 	bl	800016c <__adddf3>
 80028be:	4606      	mov	r6, r0
 80028c0:	460f      	mov	r7, r1
 80028c2:	f7fe f8b5 	bl	8000a30 <__aeabi_d2iz>
 80028c6:	2200      	movs	r2, #0
 80028c8:	4683      	mov	fp, r0
 80028ca:	2300      	movs	r3, #0
 80028cc:	4630      	mov	r0, r6
 80028ce:	4639      	mov	r1, r7
 80028d0:	f7fe f870 	bl	80009b4 <__aeabi_dcmplt>
 80028d4:	b158      	cbz	r0, 80028ee <_dtoa_r+0x166>
 80028d6:	4658      	mov	r0, fp
 80028d8:	f7fd fd94 	bl	8000404 <__aeabi_i2d>
 80028dc:	4602      	mov	r2, r0
 80028de:	460b      	mov	r3, r1
 80028e0:	4630      	mov	r0, r6
 80028e2:	4639      	mov	r1, r7
 80028e4:	f7fe f85c 	bl	80009a0 <__aeabi_dcmpeq>
 80028e8:	b908      	cbnz	r0, 80028ee <_dtoa_r+0x166>
 80028ea:	f10b 3bff 	add.w	fp, fp, #4294967295
 80028ee:	f1bb 0f16 	cmp.w	fp, #22
 80028f2:	d858      	bhi.n	80029a6 <_dtoa_r+0x21e>
 80028f4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80028f8:	496a      	ldr	r1, [pc, #424]	; (8002aa4 <_dtoa_r+0x31c>)
 80028fa:	eb01 01cb 	add.w	r1, r1, fp, lsl #3
 80028fe:	e9d1 0100 	ldrd	r0, r1, [r1]
 8002902:	f7fe f875 	bl	80009f0 <__aeabi_dcmpgt>
 8002906:	2800      	cmp	r0, #0
 8002908:	d04f      	beq.n	80029aa <_dtoa_r+0x222>
 800290a:	2300      	movs	r3, #0
 800290c:	f10b 3bff 	add.w	fp, fp, #4294967295
 8002910:	930d      	str	r3, [sp, #52]	; 0x34
 8002912:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002914:	1b5d      	subs	r5, r3, r5
 8002916:	1e6b      	subs	r3, r5, #1
 8002918:	9307      	str	r3, [sp, #28]
 800291a:	bf43      	ittte	mi
 800291c:	2300      	movmi	r3, #0
 800291e:	f1c5 0801 	rsbmi	r8, r5, #1
 8002922:	9307      	strmi	r3, [sp, #28]
 8002924:	f04f 0800 	movpl.w	r8, #0
 8002928:	f1bb 0f00 	cmp.w	fp, #0
 800292c:	db3f      	blt.n	80029ae <_dtoa_r+0x226>
 800292e:	9b07      	ldr	r3, [sp, #28]
 8002930:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8002934:	445b      	add	r3, fp
 8002936:	9307      	str	r3, [sp, #28]
 8002938:	2300      	movs	r3, #0
 800293a:	9308      	str	r3, [sp, #32]
 800293c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 800293e:	2b09      	cmp	r3, #9
 8002940:	f200 80b4 	bhi.w	8002aac <_dtoa_r+0x324>
 8002944:	2b05      	cmp	r3, #5
 8002946:	bfc4      	itt	gt
 8002948:	3b04      	subgt	r3, #4
 800294a:	931e      	strgt	r3, [sp, #120]	; 0x78
 800294c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 800294e:	bfc8      	it	gt
 8002950:	2600      	movgt	r6, #0
 8002952:	f1a3 0302 	sub.w	r3, r3, #2
 8002956:	bfd8      	it	le
 8002958:	2601      	movle	r6, #1
 800295a:	2b03      	cmp	r3, #3
 800295c:	f200 80b2 	bhi.w	8002ac4 <_dtoa_r+0x33c>
 8002960:	e8df f003 	tbb	[pc, r3]
 8002964:	782d8684 	.word	0x782d8684
 8002968:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800296a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800296c:	441d      	add	r5, r3
 800296e:	f205 4332 	addw	r3, r5, #1074	; 0x432
 8002972:	2b20      	cmp	r3, #32
 8002974:	dd11      	ble.n	800299a <_dtoa_r+0x212>
 8002976:	9a02      	ldr	r2, [sp, #8]
 8002978:	f205 4012 	addw	r0, r5, #1042	; 0x412
 800297c:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
 8002980:	fa22 f000 	lsr.w	r0, r2, r0
 8002984:	fa09 f303 	lsl.w	r3, r9, r3
 8002988:	4318      	orrs	r0, r3
 800298a:	f7fd fd2b 	bl	80003e4 <__aeabi_ui2d>
 800298e:	2301      	movs	r3, #1
 8002990:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
 8002994:	3d01      	subs	r5, #1
 8002996:	9310      	str	r3, [sp, #64]	; 0x40
 8002998:	e773      	b.n	8002882 <_dtoa_r+0xfa>
 800299a:	f1c3 0020 	rsb	r0, r3, #32
 800299e:	9b02      	ldr	r3, [sp, #8]
 80029a0:	fa03 f000 	lsl.w	r0, r3, r0
 80029a4:	e7f1      	b.n	800298a <_dtoa_r+0x202>
 80029a6:	2301      	movs	r3, #1
 80029a8:	e7b2      	b.n	8002910 <_dtoa_r+0x188>
 80029aa:	900d      	str	r0, [sp, #52]	; 0x34
 80029ac:	e7b1      	b.n	8002912 <_dtoa_r+0x18a>
 80029ae:	f1cb 0300 	rsb	r3, fp, #0
 80029b2:	9308      	str	r3, [sp, #32]
 80029b4:	2300      	movs	r3, #0
 80029b6:	eba8 080b 	sub.w	r8, r8, fp
 80029ba:	930c      	str	r3, [sp, #48]	; 0x30
 80029bc:	e7be      	b.n	800293c <_dtoa_r+0x1b4>
 80029be:	2301      	movs	r3, #1
 80029c0:	9309      	str	r3, [sp, #36]	; 0x24
 80029c2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80029c4:	2b00      	cmp	r3, #0
 80029c6:	f340 8080 	ble.w	8002aca <_dtoa_r+0x342>
 80029ca:	4699      	mov	r9, r3
 80029cc:	9304      	str	r3, [sp, #16]
 80029ce:	2200      	movs	r2, #0
 80029d0:	2104      	movs	r1, #4
 80029d2:	6a65      	ldr	r5, [r4, #36]	; 0x24
 80029d4:	606a      	str	r2, [r5, #4]
 80029d6:	f101 0214 	add.w	r2, r1, #20
 80029da:	429a      	cmp	r2, r3
 80029dc:	d97a      	bls.n	8002ad4 <_dtoa_r+0x34c>
 80029de:	6869      	ldr	r1, [r5, #4]
 80029e0:	4620      	mov	r0, r4
 80029e2:	f000 feed 	bl	80037c0 <_Balloc>
 80029e6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80029e8:	6028      	str	r0, [r5, #0]
 80029ea:	681b      	ldr	r3, [r3, #0]
 80029ec:	f1b9 0f0e 	cmp.w	r9, #14
 80029f0:	9306      	str	r3, [sp, #24]
 80029f2:	f200 80f0 	bhi.w	8002bd6 <_dtoa_r+0x44e>
 80029f6:	2e00      	cmp	r6, #0
 80029f8:	f000 80ed 	beq.w	8002bd6 <_dtoa_r+0x44e>
 80029fc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002a00:	f1bb 0f00 	cmp.w	fp, #0
 8002a04:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
 8002a08:	dd79      	ble.n	8002afe <_dtoa_r+0x376>
 8002a0a:	4a26      	ldr	r2, [pc, #152]	; (8002aa4 <_dtoa_r+0x31c>)
 8002a0c:	f00b 030f 	and.w	r3, fp, #15
 8002a10:	ea4f 162b 	mov.w	r6, fp, asr #4
 8002a14:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8002a18:	06f0      	lsls	r0, r6, #27
 8002a1a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002a1e:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 8002a22:	d55c      	bpl.n	8002ade <_dtoa_r+0x356>
 8002a24:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 8002a28:	4b1f      	ldr	r3, [pc, #124]	; (8002aa8 <_dtoa_r+0x320>)
 8002a2a:	2503      	movs	r5, #3
 8002a2c:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8002a30:	f7fd fe78 	bl	8000724 <__aeabi_ddiv>
 8002a34:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002a38:	f006 060f 	and.w	r6, r6, #15
 8002a3c:	4f1a      	ldr	r7, [pc, #104]	; (8002aa8 <_dtoa_r+0x320>)
 8002a3e:	2e00      	cmp	r6, #0
 8002a40:	d14f      	bne.n	8002ae2 <_dtoa_r+0x35a>
 8002a42:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8002a46:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002a4a:	f7fd fe6b 	bl	8000724 <__aeabi_ddiv>
 8002a4e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002a52:	e06e      	b.n	8002b32 <_dtoa_r+0x3aa>
 8002a54:	2301      	movs	r3, #1
 8002a56:	9309      	str	r3, [sp, #36]	; 0x24
 8002a58:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8002a5a:	445b      	add	r3, fp
 8002a5c:	f103 0901 	add.w	r9, r3, #1
 8002a60:	9304      	str	r3, [sp, #16]
 8002a62:	464b      	mov	r3, r9
 8002a64:	2b01      	cmp	r3, #1
 8002a66:	bfb8      	it	lt
 8002a68:	2301      	movlt	r3, #1
 8002a6a:	e7b0      	b.n	80029ce <_dtoa_r+0x246>
 8002a6c:	2300      	movs	r3, #0
 8002a6e:	e7a7      	b.n	80029c0 <_dtoa_r+0x238>
 8002a70:	2300      	movs	r3, #0
 8002a72:	e7f0      	b.n	8002a56 <_dtoa_r+0x2ce>
 8002a74:	f3af 8000 	nop.w
 8002a78:	636f4361 	.word	0x636f4361
 8002a7c:	3fd287a7 	.word	0x3fd287a7
 8002a80:	8b60c8b3 	.word	0x8b60c8b3
 8002a84:	3fc68a28 	.word	0x3fc68a28
 8002a88:	509f79fb 	.word	0x509f79fb
 8002a8c:	3fd34413 	.word	0x3fd34413
 8002a90:	7ff00000 	.word	0x7ff00000
 8002a94:	08004527 	.word	0x08004527
 8002a98:	0800451e 	.word	0x0800451e
 8002a9c:	080044fd 	.word	0x080044fd
 8002aa0:	3ff80000 	.word	0x3ff80000
 8002aa4:	08004558 	.word	0x08004558
 8002aa8:	08004530 	.word	0x08004530
 8002aac:	2601      	movs	r6, #1
 8002aae:	2300      	movs	r3, #0
 8002ab0:	9609      	str	r6, [sp, #36]	; 0x24
 8002ab2:	931e      	str	r3, [sp, #120]	; 0x78
 8002ab4:	f04f 33ff 	mov.w	r3, #4294967295
 8002ab8:	2200      	movs	r2, #0
 8002aba:	9304      	str	r3, [sp, #16]
 8002abc:	4699      	mov	r9, r3
 8002abe:	2312      	movs	r3, #18
 8002ac0:	921f      	str	r2, [sp, #124]	; 0x7c
 8002ac2:	e784      	b.n	80029ce <_dtoa_r+0x246>
 8002ac4:	2301      	movs	r3, #1
 8002ac6:	9309      	str	r3, [sp, #36]	; 0x24
 8002ac8:	e7f4      	b.n	8002ab4 <_dtoa_r+0x32c>
 8002aca:	2301      	movs	r3, #1
 8002acc:	9304      	str	r3, [sp, #16]
 8002ace:	4699      	mov	r9, r3
 8002ad0:	461a      	mov	r2, r3
 8002ad2:	e7f5      	b.n	8002ac0 <_dtoa_r+0x338>
 8002ad4:	686a      	ldr	r2, [r5, #4]
 8002ad6:	0049      	lsls	r1, r1, #1
 8002ad8:	3201      	adds	r2, #1
 8002ada:	606a      	str	r2, [r5, #4]
 8002adc:	e77b      	b.n	80029d6 <_dtoa_r+0x24e>
 8002ade:	2502      	movs	r5, #2
 8002ae0:	e7ac      	b.n	8002a3c <_dtoa_r+0x2b4>
 8002ae2:	07f1      	lsls	r1, r6, #31
 8002ae4:	d508      	bpl.n	8002af8 <_dtoa_r+0x370>
 8002ae6:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8002aea:	e9d7 2300 	ldrd	r2, r3, [r7]
 8002aee:	f7fd fcef 	bl	80004d0 <__aeabi_dmul>
 8002af2:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8002af6:	3501      	adds	r5, #1
 8002af8:	1076      	asrs	r6, r6, #1
 8002afa:	3708      	adds	r7, #8
 8002afc:	e79f      	b.n	8002a3e <_dtoa_r+0x2b6>
 8002afe:	f000 80a5 	beq.w	8002c4c <_dtoa_r+0x4c4>
 8002b02:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 8002b06:	f1cb 0600 	rsb	r6, fp, #0
 8002b0a:	4ba2      	ldr	r3, [pc, #648]	; (8002d94 <_dtoa_r+0x60c>)
 8002b0c:	f006 020f 	and.w	r2, r6, #15
 8002b10:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002b14:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002b18:	f7fd fcda 	bl	80004d0 <__aeabi_dmul>
 8002b1c:	2502      	movs	r5, #2
 8002b1e:	2300      	movs	r3, #0
 8002b20:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002b24:	4f9c      	ldr	r7, [pc, #624]	; (8002d98 <_dtoa_r+0x610>)
 8002b26:	1136      	asrs	r6, r6, #4
 8002b28:	2e00      	cmp	r6, #0
 8002b2a:	f040 8084 	bne.w	8002c36 <_dtoa_r+0x4ae>
 8002b2e:	2b00      	cmp	r3, #0
 8002b30:	d18d      	bne.n	8002a4e <_dtoa_r+0x2c6>
 8002b32:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002b34:	2b00      	cmp	r3, #0
 8002b36:	f000 808b 	beq.w	8002c50 <_dtoa_r+0x4c8>
 8002b3a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002b3e:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 8002b42:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8002b46:	2200      	movs	r2, #0
 8002b48:	4b94      	ldr	r3, [pc, #592]	; (8002d9c <_dtoa_r+0x614>)
 8002b4a:	f7fd ff33 	bl	80009b4 <__aeabi_dcmplt>
 8002b4e:	2800      	cmp	r0, #0
 8002b50:	d07e      	beq.n	8002c50 <_dtoa_r+0x4c8>
 8002b52:	f1b9 0f00 	cmp.w	r9, #0
 8002b56:	d07b      	beq.n	8002c50 <_dtoa_r+0x4c8>
 8002b58:	9b04      	ldr	r3, [sp, #16]
 8002b5a:	2b00      	cmp	r3, #0
 8002b5c:	dd37      	ble.n	8002bce <_dtoa_r+0x446>
 8002b5e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8002b62:	2200      	movs	r2, #0
 8002b64:	4b8e      	ldr	r3, [pc, #568]	; (8002da0 <_dtoa_r+0x618>)
 8002b66:	f7fd fcb3 	bl	80004d0 <__aeabi_dmul>
 8002b6a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002b6e:	9e04      	ldr	r6, [sp, #16]
 8002b70:	f10b 37ff 	add.w	r7, fp, #4294967295
 8002b74:	3501      	adds	r5, #1
 8002b76:	4628      	mov	r0, r5
 8002b78:	f7fd fc44 	bl	8000404 <__aeabi_i2d>
 8002b7c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002b80:	f7fd fca6 	bl	80004d0 <__aeabi_dmul>
 8002b84:	4b87      	ldr	r3, [pc, #540]	; (8002da4 <_dtoa_r+0x61c>)
 8002b86:	2200      	movs	r2, #0
 8002b88:	f7fd faf0 	bl	800016c <__adddf3>
 8002b8c:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8002b90:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8002b92:	f1a3 7550 	sub.w	r5, r3, #54525952	; 0x3400000
 8002b96:	950b      	str	r5, [sp, #44]	; 0x2c
 8002b98:	2e00      	cmp	r6, #0
 8002b9a:	d15c      	bne.n	8002c56 <_dtoa_r+0x4ce>
 8002b9c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002ba0:	2200      	movs	r2, #0
 8002ba2:	4b81      	ldr	r3, [pc, #516]	; (8002da8 <_dtoa_r+0x620>)
 8002ba4:	f7fd fae0 	bl	8000168 <__aeabi_dsub>
 8002ba8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8002baa:	462b      	mov	r3, r5
 8002bac:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002bb0:	f7fd ff1e 	bl	80009f0 <__aeabi_dcmpgt>
 8002bb4:	2800      	cmp	r0, #0
 8002bb6:	f040 82f7 	bne.w	80031a8 <_dtoa_r+0xa20>
 8002bba:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002bbe:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8002bc0:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
 8002bc4:	f7fd fef6 	bl	80009b4 <__aeabi_dcmplt>
 8002bc8:	2800      	cmp	r0, #0
 8002bca:	f040 82eb 	bne.w	80031a4 <_dtoa_r+0xa1c>
 8002bce:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
 8002bd2:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002bd6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8002bd8:	2b00      	cmp	r3, #0
 8002bda:	f2c0 8150 	blt.w	8002e7e <_dtoa_r+0x6f6>
 8002bde:	f1bb 0f0e 	cmp.w	fp, #14
 8002be2:	f300 814c 	bgt.w	8002e7e <_dtoa_r+0x6f6>
 8002be6:	4b6b      	ldr	r3, [pc, #428]	; (8002d94 <_dtoa_r+0x60c>)
 8002be8:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 8002bec:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002bf0:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8002bf4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8002bf6:	2b00      	cmp	r3, #0
 8002bf8:	f280 80da 	bge.w	8002db0 <_dtoa_r+0x628>
 8002bfc:	f1b9 0f00 	cmp.w	r9, #0
 8002c00:	f300 80d6 	bgt.w	8002db0 <_dtoa_r+0x628>
 8002c04:	f040 82cd 	bne.w	80031a2 <_dtoa_r+0xa1a>
 8002c08:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002c0c:	2200      	movs	r2, #0
 8002c0e:	4b66      	ldr	r3, [pc, #408]	; (8002da8 <_dtoa_r+0x620>)
 8002c10:	f7fd fc5e 	bl	80004d0 <__aeabi_dmul>
 8002c14:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002c18:	f7fd fee0 	bl	80009dc <__aeabi_dcmpge>
 8002c1c:	464e      	mov	r6, r9
 8002c1e:	464f      	mov	r7, r9
 8002c20:	2800      	cmp	r0, #0
 8002c22:	f040 82a4 	bne.w	800316e <_dtoa_r+0x9e6>
 8002c26:	9b06      	ldr	r3, [sp, #24]
 8002c28:	9a06      	ldr	r2, [sp, #24]
 8002c2a:	1c5d      	adds	r5, r3, #1
 8002c2c:	2331      	movs	r3, #49	; 0x31
 8002c2e:	f10b 0b01 	add.w	fp, fp, #1
 8002c32:	7013      	strb	r3, [r2, #0]
 8002c34:	e29f      	b.n	8003176 <_dtoa_r+0x9ee>
 8002c36:	07f2      	lsls	r2, r6, #31
 8002c38:	d505      	bpl.n	8002c46 <_dtoa_r+0x4be>
 8002c3a:	e9d7 2300 	ldrd	r2, r3, [r7]
 8002c3e:	f7fd fc47 	bl	80004d0 <__aeabi_dmul>
 8002c42:	2301      	movs	r3, #1
 8002c44:	3501      	adds	r5, #1
 8002c46:	1076      	asrs	r6, r6, #1
 8002c48:	3708      	adds	r7, #8
 8002c4a:	e76d      	b.n	8002b28 <_dtoa_r+0x3a0>
 8002c4c:	2502      	movs	r5, #2
 8002c4e:	e770      	b.n	8002b32 <_dtoa_r+0x3aa>
 8002c50:	465f      	mov	r7, fp
 8002c52:	464e      	mov	r6, r9
 8002c54:	e78f      	b.n	8002b76 <_dtoa_r+0x3ee>
 8002c56:	9a06      	ldr	r2, [sp, #24]
 8002c58:	4b4e      	ldr	r3, [pc, #312]	; (8002d94 <_dtoa_r+0x60c>)
 8002c5a:	4432      	add	r2, r6
 8002c5c:	9211      	str	r2, [sp, #68]	; 0x44
 8002c5e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8002c60:	1e71      	subs	r1, r6, #1
 8002c62:	2a00      	cmp	r2, #0
 8002c64:	d048      	beq.n	8002cf8 <_dtoa_r+0x570>
 8002c66:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 8002c6a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002c6e:	2000      	movs	r0, #0
 8002c70:	494e      	ldr	r1, [pc, #312]	; (8002dac <_dtoa_r+0x624>)
 8002c72:	f7fd fd57 	bl	8000724 <__aeabi_ddiv>
 8002c76:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8002c7a:	f7fd fa75 	bl	8000168 <__aeabi_dsub>
 8002c7e:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8002c82:	9d06      	ldr	r5, [sp, #24]
 8002c84:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002c88:	f7fd fed2 	bl	8000a30 <__aeabi_d2iz>
 8002c8c:	4606      	mov	r6, r0
 8002c8e:	f7fd fbb9 	bl	8000404 <__aeabi_i2d>
 8002c92:	4602      	mov	r2, r0
 8002c94:	460b      	mov	r3, r1
 8002c96:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002c9a:	f7fd fa65 	bl	8000168 <__aeabi_dsub>
 8002c9e:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8002ca2:	3630      	adds	r6, #48	; 0x30
 8002ca4:	f805 6b01 	strb.w	r6, [r5], #1
 8002ca8:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002cac:	f7fd fe82 	bl	80009b4 <__aeabi_dcmplt>
 8002cb0:	2800      	cmp	r0, #0
 8002cb2:	d164      	bne.n	8002d7e <_dtoa_r+0x5f6>
 8002cb4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002cb8:	2000      	movs	r0, #0
 8002cba:	4938      	ldr	r1, [pc, #224]	; (8002d9c <_dtoa_r+0x614>)
 8002cbc:	f7fd fa54 	bl	8000168 <__aeabi_dsub>
 8002cc0:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8002cc4:	f7fd fe76 	bl	80009b4 <__aeabi_dcmplt>
 8002cc8:	2800      	cmp	r0, #0
 8002cca:	f040 80b9 	bne.w	8002e40 <_dtoa_r+0x6b8>
 8002cce:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8002cd0:	429d      	cmp	r5, r3
 8002cd2:	f43f af7c 	beq.w	8002bce <_dtoa_r+0x446>
 8002cd6:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8002cda:	2200      	movs	r2, #0
 8002cdc:	4b30      	ldr	r3, [pc, #192]	; (8002da0 <_dtoa_r+0x618>)
 8002cde:	f7fd fbf7 	bl	80004d0 <__aeabi_dmul>
 8002ce2:	2200      	movs	r2, #0
 8002ce4:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8002ce8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002cec:	4b2c      	ldr	r3, [pc, #176]	; (8002da0 <_dtoa_r+0x618>)
 8002cee:	f7fd fbef 	bl	80004d0 <__aeabi_dmul>
 8002cf2:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002cf6:	e7c5      	b.n	8002c84 <_dtoa_r+0x4fc>
 8002cf8:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
 8002cfc:	e9d1 0100 	ldrd	r0, r1, [r1]
 8002d00:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8002d04:	f7fd fbe4 	bl	80004d0 <__aeabi_dmul>
 8002d08:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8002d0c:	9d06      	ldr	r5, [sp, #24]
 8002d0e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002d12:	f7fd fe8d 	bl	8000a30 <__aeabi_d2iz>
 8002d16:	4606      	mov	r6, r0
 8002d18:	f7fd fb74 	bl	8000404 <__aeabi_i2d>
 8002d1c:	4602      	mov	r2, r0
 8002d1e:	460b      	mov	r3, r1
 8002d20:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002d24:	f7fd fa20 	bl	8000168 <__aeabi_dsub>
 8002d28:	3630      	adds	r6, #48	; 0x30
 8002d2a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8002d2c:	f805 6b01 	strb.w	r6, [r5], #1
 8002d30:	42ab      	cmp	r3, r5
 8002d32:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002d36:	f04f 0200 	mov.w	r2, #0
 8002d3a:	d124      	bne.n	8002d86 <_dtoa_r+0x5fe>
 8002d3c:	4b1b      	ldr	r3, [pc, #108]	; (8002dac <_dtoa_r+0x624>)
 8002d3e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8002d42:	f7fd fa13 	bl	800016c <__adddf3>
 8002d46:	4602      	mov	r2, r0
 8002d48:	460b      	mov	r3, r1
 8002d4a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002d4e:	f7fd fe4f 	bl	80009f0 <__aeabi_dcmpgt>
 8002d52:	2800      	cmp	r0, #0
 8002d54:	d174      	bne.n	8002e40 <_dtoa_r+0x6b8>
 8002d56:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8002d5a:	2000      	movs	r0, #0
 8002d5c:	4913      	ldr	r1, [pc, #76]	; (8002dac <_dtoa_r+0x624>)
 8002d5e:	f7fd fa03 	bl	8000168 <__aeabi_dsub>
 8002d62:	4602      	mov	r2, r0
 8002d64:	460b      	mov	r3, r1
 8002d66:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002d6a:	f7fd fe23 	bl	80009b4 <__aeabi_dcmplt>
 8002d6e:	2800      	cmp	r0, #0
 8002d70:	f43f af2d 	beq.w	8002bce <_dtoa_r+0x446>
 8002d74:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8002d78:	1e6a      	subs	r2, r5, #1
 8002d7a:	2b30      	cmp	r3, #48	; 0x30
 8002d7c:	d001      	beq.n	8002d82 <_dtoa_r+0x5fa>
 8002d7e:	46bb      	mov	fp, r7
 8002d80:	e04d      	b.n	8002e1e <_dtoa_r+0x696>
 8002d82:	4615      	mov	r5, r2
 8002d84:	e7f6      	b.n	8002d74 <_dtoa_r+0x5ec>
 8002d86:	4b06      	ldr	r3, [pc, #24]	; (8002da0 <_dtoa_r+0x618>)
 8002d88:	f7fd fba2 	bl	80004d0 <__aeabi_dmul>
 8002d8c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002d90:	e7bd      	b.n	8002d0e <_dtoa_r+0x586>
 8002d92:	bf00      	nop
 8002d94:	08004558 	.word	0x08004558
 8002d98:	08004530 	.word	0x08004530
 8002d9c:	3ff00000 	.word	0x3ff00000
 8002da0:	40240000 	.word	0x40240000
 8002da4:	401c0000 	.word	0x401c0000
 8002da8:	40140000 	.word	0x40140000
 8002dac:	3fe00000 	.word	0x3fe00000
 8002db0:	9d06      	ldr	r5, [sp, #24]
 8002db2:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8002db6:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002dba:	4630      	mov	r0, r6
 8002dbc:	4639      	mov	r1, r7
 8002dbe:	f7fd fcb1 	bl	8000724 <__aeabi_ddiv>
 8002dc2:	f7fd fe35 	bl	8000a30 <__aeabi_d2iz>
 8002dc6:	4680      	mov	r8, r0
 8002dc8:	f7fd fb1c 	bl	8000404 <__aeabi_i2d>
 8002dcc:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002dd0:	f7fd fb7e 	bl	80004d0 <__aeabi_dmul>
 8002dd4:	4602      	mov	r2, r0
 8002dd6:	460b      	mov	r3, r1
 8002dd8:	4630      	mov	r0, r6
 8002dda:	4639      	mov	r1, r7
 8002ddc:	f7fd f9c4 	bl	8000168 <__aeabi_dsub>
 8002de0:	f108 0630 	add.w	r6, r8, #48	; 0x30
 8002de4:	f805 6b01 	strb.w	r6, [r5], #1
 8002de8:	9e06      	ldr	r6, [sp, #24]
 8002dea:	4602      	mov	r2, r0
 8002dec:	1bae      	subs	r6, r5, r6
 8002dee:	45b1      	cmp	r9, r6
 8002df0:	460b      	mov	r3, r1
 8002df2:	d137      	bne.n	8002e64 <_dtoa_r+0x6dc>
 8002df4:	f7fd f9ba 	bl	800016c <__adddf3>
 8002df8:	4606      	mov	r6, r0
 8002dfa:	460f      	mov	r7, r1
 8002dfc:	4602      	mov	r2, r0
 8002dfe:	460b      	mov	r3, r1
 8002e00:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002e04:	f7fd fdd6 	bl	80009b4 <__aeabi_dcmplt>
 8002e08:	b9c8      	cbnz	r0, 8002e3e <_dtoa_r+0x6b6>
 8002e0a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002e0e:	4632      	mov	r2, r6
 8002e10:	463b      	mov	r3, r7
 8002e12:	f7fd fdc5 	bl	80009a0 <__aeabi_dcmpeq>
 8002e16:	b110      	cbz	r0, 8002e1e <_dtoa_r+0x696>
 8002e18:	f018 0f01 	tst.w	r8, #1
 8002e1c:	d10f      	bne.n	8002e3e <_dtoa_r+0x6b6>
 8002e1e:	4651      	mov	r1, sl
 8002e20:	4620      	mov	r0, r4
 8002e22:	f000 fd01 	bl	8003828 <_Bfree>
 8002e26:	2300      	movs	r3, #0
 8002e28:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8002e2a:	702b      	strb	r3, [r5, #0]
 8002e2c:	f10b 0301 	add.w	r3, fp, #1
 8002e30:	6013      	str	r3, [r2, #0]
 8002e32:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002e34:	2b00      	cmp	r3, #0
 8002e36:	f43f acec 	beq.w	8002812 <_dtoa_r+0x8a>
 8002e3a:	601d      	str	r5, [r3, #0]
 8002e3c:	e4e9      	b.n	8002812 <_dtoa_r+0x8a>
 8002e3e:	465f      	mov	r7, fp
 8002e40:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 8002e44:	1e6b      	subs	r3, r5, #1
 8002e46:	2a39      	cmp	r2, #57	; 0x39
 8002e48:	d106      	bne.n	8002e58 <_dtoa_r+0x6d0>
 8002e4a:	9a06      	ldr	r2, [sp, #24]
 8002e4c:	429a      	cmp	r2, r3
 8002e4e:	d107      	bne.n	8002e60 <_dtoa_r+0x6d8>
 8002e50:	2330      	movs	r3, #48	; 0x30
 8002e52:	7013      	strb	r3, [r2, #0]
 8002e54:	4613      	mov	r3, r2
 8002e56:	3701      	adds	r7, #1
 8002e58:	781a      	ldrb	r2, [r3, #0]
 8002e5a:	3201      	adds	r2, #1
 8002e5c:	701a      	strb	r2, [r3, #0]
 8002e5e:	e78e      	b.n	8002d7e <_dtoa_r+0x5f6>
 8002e60:	461d      	mov	r5, r3
 8002e62:	e7ed      	b.n	8002e40 <_dtoa_r+0x6b8>
 8002e64:	2200      	movs	r2, #0
 8002e66:	4bb5      	ldr	r3, [pc, #724]	; (800313c <_dtoa_r+0x9b4>)
 8002e68:	f7fd fb32 	bl	80004d0 <__aeabi_dmul>
 8002e6c:	2200      	movs	r2, #0
 8002e6e:	2300      	movs	r3, #0
 8002e70:	4606      	mov	r6, r0
 8002e72:	460f      	mov	r7, r1
 8002e74:	f7fd fd94 	bl	80009a0 <__aeabi_dcmpeq>
 8002e78:	2800      	cmp	r0, #0
 8002e7a:	d09c      	beq.n	8002db6 <_dtoa_r+0x62e>
 8002e7c:	e7cf      	b.n	8002e1e <_dtoa_r+0x696>
 8002e7e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8002e80:	2a00      	cmp	r2, #0
 8002e82:	f000 8129 	beq.w	80030d8 <_dtoa_r+0x950>
 8002e86:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8002e88:	2a01      	cmp	r2, #1
 8002e8a:	f300 810e 	bgt.w	80030aa <_dtoa_r+0x922>
 8002e8e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8002e90:	2a00      	cmp	r2, #0
 8002e92:	f000 8106 	beq.w	80030a2 <_dtoa_r+0x91a>
 8002e96:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8002e9a:	4645      	mov	r5, r8
 8002e9c:	9e08      	ldr	r6, [sp, #32]
 8002e9e:	9a07      	ldr	r2, [sp, #28]
 8002ea0:	2101      	movs	r1, #1
 8002ea2:	441a      	add	r2, r3
 8002ea4:	4620      	mov	r0, r4
 8002ea6:	4498      	add	r8, r3
 8002ea8:	9207      	str	r2, [sp, #28]
 8002eaa:	f000 fd5d 	bl	8003968 <__i2b>
 8002eae:	4607      	mov	r7, r0
 8002eb0:	2d00      	cmp	r5, #0
 8002eb2:	dd0b      	ble.n	8002ecc <_dtoa_r+0x744>
 8002eb4:	9b07      	ldr	r3, [sp, #28]
 8002eb6:	2b00      	cmp	r3, #0
 8002eb8:	dd08      	ble.n	8002ecc <_dtoa_r+0x744>
 8002eba:	42ab      	cmp	r3, r5
 8002ebc:	bfa8      	it	ge
 8002ebe:	462b      	movge	r3, r5
 8002ec0:	9a07      	ldr	r2, [sp, #28]
 8002ec2:	eba8 0803 	sub.w	r8, r8, r3
 8002ec6:	1aed      	subs	r5, r5, r3
 8002ec8:	1ad3      	subs	r3, r2, r3
 8002eca:	9307      	str	r3, [sp, #28]
 8002ecc:	9b08      	ldr	r3, [sp, #32]
 8002ece:	b1fb      	cbz	r3, 8002f10 <_dtoa_r+0x788>
 8002ed0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002ed2:	2b00      	cmp	r3, #0
 8002ed4:	f000 8104 	beq.w	80030e0 <_dtoa_r+0x958>
 8002ed8:	2e00      	cmp	r6, #0
 8002eda:	dd11      	ble.n	8002f00 <_dtoa_r+0x778>
 8002edc:	4639      	mov	r1, r7
 8002ede:	4632      	mov	r2, r6
 8002ee0:	4620      	mov	r0, r4
 8002ee2:	f000 fdd7 	bl	8003a94 <__pow5mult>
 8002ee6:	4652      	mov	r2, sl
 8002ee8:	4601      	mov	r1, r0
 8002eea:	4607      	mov	r7, r0
 8002eec:	4620      	mov	r0, r4
 8002eee:	f000 fd44 	bl	800397a <__multiply>
 8002ef2:	4651      	mov	r1, sl
 8002ef4:	900a      	str	r0, [sp, #40]	; 0x28
 8002ef6:	4620      	mov	r0, r4
 8002ef8:	f000 fc96 	bl	8003828 <_Bfree>
 8002efc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002efe:	469a      	mov	sl, r3
 8002f00:	9b08      	ldr	r3, [sp, #32]
 8002f02:	1b9a      	subs	r2, r3, r6
 8002f04:	d004      	beq.n	8002f10 <_dtoa_r+0x788>
 8002f06:	4651      	mov	r1, sl
 8002f08:	4620      	mov	r0, r4
 8002f0a:	f000 fdc3 	bl	8003a94 <__pow5mult>
 8002f0e:	4682      	mov	sl, r0
 8002f10:	2101      	movs	r1, #1
 8002f12:	4620      	mov	r0, r4
 8002f14:	f000 fd28 	bl	8003968 <__i2b>
 8002f18:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002f1a:	4606      	mov	r6, r0
 8002f1c:	2b00      	cmp	r3, #0
 8002f1e:	f340 80e1 	ble.w	80030e4 <_dtoa_r+0x95c>
 8002f22:	461a      	mov	r2, r3
 8002f24:	4601      	mov	r1, r0
 8002f26:	4620      	mov	r0, r4
 8002f28:	f000 fdb4 	bl	8003a94 <__pow5mult>
 8002f2c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8002f2e:	4606      	mov	r6, r0
 8002f30:	2b01      	cmp	r3, #1
 8002f32:	f340 80da 	ble.w	80030ea <_dtoa_r+0x962>
 8002f36:	2300      	movs	r3, #0
 8002f38:	9308      	str	r3, [sp, #32]
 8002f3a:	6933      	ldr	r3, [r6, #16]
 8002f3c:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8002f40:	6918      	ldr	r0, [r3, #16]
 8002f42:	f000 fcc3 	bl	80038cc <__hi0bits>
 8002f46:	f1c0 0020 	rsb	r0, r0, #32
 8002f4a:	9b07      	ldr	r3, [sp, #28]
 8002f4c:	4418      	add	r0, r3
 8002f4e:	f010 001f 	ands.w	r0, r0, #31
 8002f52:	f000 80f0 	beq.w	8003136 <_dtoa_r+0x9ae>
 8002f56:	f1c0 0320 	rsb	r3, r0, #32
 8002f5a:	2b04      	cmp	r3, #4
 8002f5c:	f340 80e2 	ble.w	8003124 <_dtoa_r+0x99c>
 8002f60:	9b07      	ldr	r3, [sp, #28]
 8002f62:	f1c0 001c 	rsb	r0, r0, #28
 8002f66:	4480      	add	r8, r0
 8002f68:	4405      	add	r5, r0
 8002f6a:	4403      	add	r3, r0
 8002f6c:	9307      	str	r3, [sp, #28]
 8002f6e:	f1b8 0f00 	cmp.w	r8, #0
 8002f72:	dd05      	ble.n	8002f80 <_dtoa_r+0x7f8>
 8002f74:	4651      	mov	r1, sl
 8002f76:	4642      	mov	r2, r8
 8002f78:	4620      	mov	r0, r4
 8002f7a:	f000 fdd9 	bl	8003b30 <__lshift>
 8002f7e:	4682      	mov	sl, r0
 8002f80:	9b07      	ldr	r3, [sp, #28]
 8002f82:	2b00      	cmp	r3, #0
 8002f84:	dd05      	ble.n	8002f92 <_dtoa_r+0x80a>
 8002f86:	4631      	mov	r1, r6
 8002f88:	461a      	mov	r2, r3
 8002f8a:	4620      	mov	r0, r4
 8002f8c:	f000 fdd0 	bl	8003b30 <__lshift>
 8002f90:	4606      	mov	r6, r0
 8002f92:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002f94:	2b00      	cmp	r3, #0
 8002f96:	f000 80d3 	beq.w	8003140 <_dtoa_r+0x9b8>
 8002f9a:	4631      	mov	r1, r6
 8002f9c:	4650      	mov	r0, sl
 8002f9e:	f000 fe18 	bl	8003bd2 <__mcmp>
 8002fa2:	2800      	cmp	r0, #0
 8002fa4:	f280 80cc 	bge.w	8003140 <_dtoa_r+0x9b8>
 8002fa8:	2300      	movs	r3, #0
 8002faa:	4651      	mov	r1, sl
 8002fac:	220a      	movs	r2, #10
 8002fae:	4620      	mov	r0, r4
 8002fb0:	f000 fc51 	bl	8003856 <__multadd>
 8002fb4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002fb6:	f10b 3bff 	add.w	fp, fp, #4294967295
 8002fba:	4682      	mov	sl, r0
 8002fbc:	2b00      	cmp	r3, #0
 8002fbe:	f000 81a9 	beq.w	8003314 <_dtoa_r+0xb8c>
 8002fc2:	2300      	movs	r3, #0
 8002fc4:	4639      	mov	r1, r7
 8002fc6:	220a      	movs	r2, #10
 8002fc8:	4620      	mov	r0, r4
 8002fca:	f000 fc44 	bl	8003856 <__multadd>
 8002fce:	9b04      	ldr	r3, [sp, #16]
 8002fd0:	4607      	mov	r7, r0
 8002fd2:	2b00      	cmp	r3, #0
 8002fd4:	dc03      	bgt.n	8002fde <_dtoa_r+0x856>
 8002fd6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8002fd8:	2b02      	cmp	r3, #2
 8002fda:	f300 80b9 	bgt.w	8003150 <_dtoa_r+0x9c8>
 8002fde:	2d00      	cmp	r5, #0
 8002fe0:	dd05      	ble.n	8002fee <_dtoa_r+0x866>
 8002fe2:	4639      	mov	r1, r7
 8002fe4:	462a      	mov	r2, r5
 8002fe6:	4620      	mov	r0, r4
 8002fe8:	f000 fda2 	bl	8003b30 <__lshift>
 8002fec:	4607      	mov	r7, r0
 8002fee:	9b08      	ldr	r3, [sp, #32]
 8002ff0:	2b00      	cmp	r3, #0
 8002ff2:	f000 8110 	beq.w	8003216 <_dtoa_r+0xa8e>
 8002ff6:	6879      	ldr	r1, [r7, #4]
 8002ff8:	4620      	mov	r0, r4
 8002ffa:	f000 fbe1 	bl	80037c0 <_Balloc>
 8002ffe:	4605      	mov	r5, r0
 8003000:	693a      	ldr	r2, [r7, #16]
 8003002:	f107 010c 	add.w	r1, r7, #12
 8003006:	3202      	adds	r2, #2
 8003008:	0092      	lsls	r2, r2, #2
 800300a:	300c      	adds	r0, #12
 800300c:	f000 fbc0 	bl	8003790 <memcpy>
 8003010:	2201      	movs	r2, #1
 8003012:	4629      	mov	r1, r5
 8003014:	4620      	mov	r0, r4
 8003016:	f000 fd8b 	bl	8003b30 <__lshift>
 800301a:	9707      	str	r7, [sp, #28]
 800301c:	4607      	mov	r7, r0
 800301e:	9b02      	ldr	r3, [sp, #8]
 8003020:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8003024:	f003 0301 	and.w	r3, r3, #1
 8003028:	9308      	str	r3, [sp, #32]
 800302a:	4631      	mov	r1, r6
 800302c:	4650      	mov	r0, sl
 800302e:	f7ff fb1d 	bl	800266c <quorem>
 8003032:	9907      	ldr	r1, [sp, #28]
 8003034:	4605      	mov	r5, r0
 8003036:	f100 0930 	add.w	r9, r0, #48	; 0x30
 800303a:	4650      	mov	r0, sl
 800303c:	f000 fdc9 	bl	8003bd2 <__mcmp>
 8003040:	463a      	mov	r2, r7
 8003042:	9002      	str	r0, [sp, #8]
 8003044:	4631      	mov	r1, r6
 8003046:	4620      	mov	r0, r4
 8003048:	f000 fddd 	bl	8003c06 <__mdiff>
 800304c:	68c3      	ldr	r3, [r0, #12]
 800304e:	4602      	mov	r2, r0
 8003050:	2b00      	cmp	r3, #0
 8003052:	f040 80e2 	bne.w	800321a <_dtoa_r+0xa92>
 8003056:	4601      	mov	r1, r0
 8003058:	9009      	str	r0, [sp, #36]	; 0x24
 800305a:	4650      	mov	r0, sl
 800305c:	f000 fdb9 	bl	8003bd2 <__mcmp>
 8003060:	4603      	mov	r3, r0
 8003062:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003064:	4611      	mov	r1, r2
 8003066:	4620      	mov	r0, r4
 8003068:	9309      	str	r3, [sp, #36]	; 0x24
 800306a:	f000 fbdd 	bl	8003828 <_Bfree>
 800306e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003070:	2b00      	cmp	r3, #0
 8003072:	f040 80d4 	bne.w	800321e <_dtoa_r+0xa96>
 8003076:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8003078:	2a00      	cmp	r2, #0
 800307a:	f040 80d0 	bne.w	800321e <_dtoa_r+0xa96>
 800307e:	9a08      	ldr	r2, [sp, #32]
 8003080:	2a00      	cmp	r2, #0
 8003082:	f040 80cc 	bne.w	800321e <_dtoa_r+0xa96>
 8003086:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 800308a:	f000 80e8 	beq.w	800325e <_dtoa_r+0xad6>
 800308e:	9b02      	ldr	r3, [sp, #8]
 8003090:	2b00      	cmp	r3, #0
 8003092:	dd01      	ble.n	8003098 <_dtoa_r+0x910>
 8003094:	f105 0931 	add.w	r9, r5, #49	; 0x31
 8003098:	f108 0501 	add.w	r5, r8, #1
 800309c:	f888 9000 	strb.w	r9, [r8]
 80030a0:	e06b      	b.n	800317a <_dtoa_r+0x9f2>
 80030a2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80030a4:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 80030a8:	e6f7      	b.n	8002e9a <_dtoa_r+0x712>
 80030aa:	9b08      	ldr	r3, [sp, #32]
 80030ac:	f109 36ff 	add.w	r6, r9, #4294967295
 80030b0:	42b3      	cmp	r3, r6
 80030b2:	bfb7      	itett	lt
 80030b4:	9b08      	ldrlt	r3, [sp, #32]
 80030b6:	1b9e      	subge	r6, r3, r6
 80030b8:	1af2      	sublt	r2, r6, r3
 80030ba:	9b0c      	ldrlt	r3, [sp, #48]	; 0x30
 80030bc:	bfbf      	itttt	lt
 80030be:	9608      	strlt	r6, [sp, #32]
 80030c0:	189b      	addlt	r3, r3, r2
 80030c2:	930c      	strlt	r3, [sp, #48]	; 0x30
 80030c4:	2600      	movlt	r6, #0
 80030c6:	f1b9 0f00 	cmp.w	r9, #0
 80030ca:	bfb9      	ittee	lt
 80030cc:	eba8 0509 	sublt.w	r5, r8, r9
 80030d0:	2300      	movlt	r3, #0
 80030d2:	4645      	movge	r5, r8
 80030d4:	464b      	movge	r3, r9
 80030d6:	e6e2      	b.n	8002e9e <_dtoa_r+0x716>
 80030d8:	9e08      	ldr	r6, [sp, #32]
 80030da:	4645      	mov	r5, r8
 80030dc:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80030de:	e6e7      	b.n	8002eb0 <_dtoa_r+0x728>
 80030e0:	9a08      	ldr	r2, [sp, #32]
 80030e2:	e710      	b.n	8002f06 <_dtoa_r+0x77e>
 80030e4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80030e6:	2b01      	cmp	r3, #1
 80030e8:	dc18      	bgt.n	800311c <_dtoa_r+0x994>
 80030ea:	9b02      	ldr	r3, [sp, #8]
 80030ec:	b9b3      	cbnz	r3, 800311c <_dtoa_r+0x994>
 80030ee:	9b03      	ldr	r3, [sp, #12]
 80030f0:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80030f4:	b9a3      	cbnz	r3, 8003120 <_dtoa_r+0x998>
 80030f6:	9b03      	ldr	r3, [sp, #12]
 80030f8:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80030fc:	0d1b      	lsrs	r3, r3, #20
 80030fe:	051b      	lsls	r3, r3, #20
 8003100:	b12b      	cbz	r3, 800310e <_dtoa_r+0x986>
 8003102:	9b07      	ldr	r3, [sp, #28]
 8003104:	f108 0801 	add.w	r8, r8, #1
 8003108:	3301      	adds	r3, #1
 800310a:	9307      	str	r3, [sp, #28]
 800310c:	2301      	movs	r3, #1
 800310e:	9308      	str	r3, [sp, #32]
 8003110:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003112:	2b00      	cmp	r3, #0
 8003114:	f47f af11 	bne.w	8002f3a <_dtoa_r+0x7b2>
 8003118:	2001      	movs	r0, #1
 800311a:	e716      	b.n	8002f4a <_dtoa_r+0x7c2>
 800311c:	2300      	movs	r3, #0
 800311e:	e7f6      	b.n	800310e <_dtoa_r+0x986>
 8003120:	9b02      	ldr	r3, [sp, #8]
 8003122:	e7f4      	b.n	800310e <_dtoa_r+0x986>
 8003124:	f43f af23 	beq.w	8002f6e <_dtoa_r+0x7e6>
 8003128:	9a07      	ldr	r2, [sp, #28]
 800312a:	331c      	adds	r3, #28
 800312c:	441a      	add	r2, r3
 800312e:	4498      	add	r8, r3
 8003130:	441d      	add	r5, r3
 8003132:	4613      	mov	r3, r2
 8003134:	e71a      	b.n	8002f6c <_dtoa_r+0x7e4>
 8003136:	4603      	mov	r3, r0
 8003138:	e7f6      	b.n	8003128 <_dtoa_r+0x9a0>
 800313a:	bf00      	nop
 800313c:	40240000 	.word	0x40240000
 8003140:	f1b9 0f00 	cmp.w	r9, #0
 8003144:	dc33      	bgt.n	80031ae <_dtoa_r+0xa26>
 8003146:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8003148:	2b02      	cmp	r3, #2
 800314a:	dd30      	ble.n	80031ae <_dtoa_r+0xa26>
 800314c:	f8cd 9010 	str.w	r9, [sp, #16]
 8003150:	9b04      	ldr	r3, [sp, #16]
 8003152:	b963      	cbnz	r3, 800316e <_dtoa_r+0x9e6>
 8003154:	4631      	mov	r1, r6
 8003156:	2205      	movs	r2, #5
 8003158:	4620      	mov	r0, r4
 800315a:	f000 fb7c 	bl	8003856 <__multadd>
 800315e:	4601      	mov	r1, r0
 8003160:	4606      	mov	r6, r0
 8003162:	4650      	mov	r0, sl
 8003164:	f000 fd35 	bl	8003bd2 <__mcmp>
 8003168:	2800      	cmp	r0, #0
 800316a:	f73f ad5c 	bgt.w	8002c26 <_dtoa_r+0x49e>
 800316e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8003170:	9d06      	ldr	r5, [sp, #24]
 8003172:	ea6f 0b03 	mvn.w	fp, r3
 8003176:	2300      	movs	r3, #0
 8003178:	9307      	str	r3, [sp, #28]
 800317a:	4631      	mov	r1, r6
 800317c:	4620      	mov	r0, r4
 800317e:	f000 fb53 	bl	8003828 <_Bfree>
 8003182:	2f00      	cmp	r7, #0
 8003184:	f43f ae4b 	beq.w	8002e1e <_dtoa_r+0x696>
 8003188:	9b07      	ldr	r3, [sp, #28]
 800318a:	b12b      	cbz	r3, 8003198 <_dtoa_r+0xa10>
 800318c:	42bb      	cmp	r3, r7
 800318e:	d003      	beq.n	8003198 <_dtoa_r+0xa10>
 8003190:	4619      	mov	r1, r3
 8003192:	4620      	mov	r0, r4
 8003194:	f000 fb48 	bl	8003828 <_Bfree>
 8003198:	4639      	mov	r1, r7
 800319a:	4620      	mov	r0, r4
 800319c:	f000 fb44 	bl	8003828 <_Bfree>
 80031a0:	e63d      	b.n	8002e1e <_dtoa_r+0x696>
 80031a2:	2600      	movs	r6, #0
 80031a4:	4637      	mov	r7, r6
 80031a6:	e7e2      	b.n	800316e <_dtoa_r+0x9e6>
 80031a8:	46bb      	mov	fp, r7
 80031aa:	4637      	mov	r7, r6
 80031ac:	e53b      	b.n	8002c26 <_dtoa_r+0x49e>
 80031ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80031b0:	f8cd 9010 	str.w	r9, [sp, #16]
 80031b4:	2b00      	cmp	r3, #0
 80031b6:	f47f af12 	bne.w	8002fde <_dtoa_r+0x856>
 80031ba:	9d06      	ldr	r5, [sp, #24]
 80031bc:	4631      	mov	r1, r6
 80031be:	4650      	mov	r0, sl
 80031c0:	f7ff fa54 	bl	800266c <quorem>
 80031c4:	9b06      	ldr	r3, [sp, #24]
 80031c6:	f100 0930 	add.w	r9, r0, #48	; 0x30
 80031ca:	f805 9b01 	strb.w	r9, [r5], #1
 80031ce:	9a04      	ldr	r2, [sp, #16]
 80031d0:	1aeb      	subs	r3, r5, r3
 80031d2:	429a      	cmp	r2, r3
 80031d4:	f300 8081 	bgt.w	80032da <_dtoa_r+0xb52>
 80031d8:	9b06      	ldr	r3, [sp, #24]
 80031da:	2a01      	cmp	r2, #1
 80031dc:	bfac      	ite	ge
 80031de:	189b      	addge	r3, r3, r2
 80031e0:	3301      	addlt	r3, #1
 80031e2:	4698      	mov	r8, r3
 80031e4:	2300      	movs	r3, #0
 80031e6:	9307      	str	r3, [sp, #28]
 80031e8:	4651      	mov	r1, sl
 80031ea:	2201      	movs	r2, #1
 80031ec:	4620      	mov	r0, r4
 80031ee:	f000 fc9f 	bl	8003b30 <__lshift>
 80031f2:	4631      	mov	r1, r6
 80031f4:	4682      	mov	sl, r0
 80031f6:	f000 fcec 	bl	8003bd2 <__mcmp>
 80031fa:	2800      	cmp	r0, #0
 80031fc:	dc34      	bgt.n	8003268 <_dtoa_r+0xae0>
 80031fe:	d102      	bne.n	8003206 <_dtoa_r+0xa7e>
 8003200:	f019 0f01 	tst.w	r9, #1
 8003204:	d130      	bne.n	8003268 <_dtoa_r+0xae0>
 8003206:	4645      	mov	r5, r8
 8003208:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 800320c:	1e6a      	subs	r2, r5, #1
 800320e:	2b30      	cmp	r3, #48	; 0x30
 8003210:	d1b3      	bne.n	800317a <_dtoa_r+0x9f2>
 8003212:	4615      	mov	r5, r2
 8003214:	e7f8      	b.n	8003208 <_dtoa_r+0xa80>
 8003216:	4638      	mov	r0, r7
 8003218:	e6ff      	b.n	800301a <_dtoa_r+0x892>
 800321a:	2301      	movs	r3, #1
 800321c:	e722      	b.n	8003064 <_dtoa_r+0x8dc>
 800321e:	9a02      	ldr	r2, [sp, #8]
 8003220:	2a00      	cmp	r2, #0
 8003222:	db04      	blt.n	800322e <_dtoa_r+0xaa6>
 8003224:	d128      	bne.n	8003278 <_dtoa_r+0xaf0>
 8003226:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8003228:	bb32      	cbnz	r2, 8003278 <_dtoa_r+0xaf0>
 800322a:	9a08      	ldr	r2, [sp, #32]
 800322c:	bb22      	cbnz	r2, 8003278 <_dtoa_r+0xaf0>
 800322e:	2b00      	cmp	r3, #0
 8003230:	f77f af32 	ble.w	8003098 <_dtoa_r+0x910>
 8003234:	4651      	mov	r1, sl
 8003236:	2201      	movs	r2, #1
 8003238:	4620      	mov	r0, r4
 800323a:	f000 fc79 	bl	8003b30 <__lshift>
 800323e:	4631      	mov	r1, r6
 8003240:	4682      	mov	sl, r0
 8003242:	f000 fcc6 	bl	8003bd2 <__mcmp>
 8003246:	2800      	cmp	r0, #0
 8003248:	dc05      	bgt.n	8003256 <_dtoa_r+0xace>
 800324a:	f47f af25 	bne.w	8003098 <_dtoa_r+0x910>
 800324e:	f019 0f01 	tst.w	r9, #1
 8003252:	f43f af21 	beq.w	8003098 <_dtoa_r+0x910>
 8003256:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 800325a:	f47f af1b 	bne.w	8003094 <_dtoa_r+0x90c>
 800325e:	2339      	movs	r3, #57	; 0x39
 8003260:	f108 0801 	add.w	r8, r8, #1
 8003264:	f808 3c01 	strb.w	r3, [r8, #-1]
 8003268:	4645      	mov	r5, r8
 800326a:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 800326e:	1e6a      	subs	r2, r5, #1
 8003270:	2b39      	cmp	r3, #57	; 0x39
 8003272:	d03a      	beq.n	80032ea <_dtoa_r+0xb62>
 8003274:	3301      	adds	r3, #1
 8003276:	e03f      	b.n	80032f8 <_dtoa_r+0xb70>
 8003278:	2b00      	cmp	r3, #0
 800327a:	f108 0501 	add.w	r5, r8, #1
 800327e:	dd05      	ble.n	800328c <_dtoa_r+0xb04>
 8003280:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8003284:	d0eb      	beq.n	800325e <_dtoa_r+0xad6>
 8003286:	f109 0901 	add.w	r9, r9, #1
 800328a:	e707      	b.n	800309c <_dtoa_r+0x914>
 800328c:	9b06      	ldr	r3, [sp, #24]
 800328e:	9a04      	ldr	r2, [sp, #16]
 8003290:	1aeb      	subs	r3, r5, r3
 8003292:	4293      	cmp	r3, r2
 8003294:	46a8      	mov	r8, r5
 8003296:	f805 9c01 	strb.w	r9, [r5, #-1]
 800329a:	d0a5      	beq.n	80031e8 <_dtoa_r+0xa60>
 800329c:	4651      	mov	r1, sl
 800329e:	2300      	movs	r3, #0
 80032a0:	220a      	movs	r2, #10
 80032a2:	4620      	mov	r0, r4
 80032a4:	f000 fad7 	bl	8003856 <__multadd>
 80032a8:	9b07      	ldr	r3, [sp, #28]
 80032aa:	4682      	mov	sl, r0
 80032ac:	42bb      	cmp	r3, r7
 80032ae:	f04f 020a 	mov.w	r2, #10
 80032b2:	f04f 0300 	mov.w	r3, #0
 80032b6:	9907      	ldr	r1, [sp, #28]
 80032b8:	4620      	mov	r0, r4
 80032ba:	d104      	bne.n	80032c6 <_dtoa_r+0xb3e>
 80032bc:	f000 facb 	bl	8003856 <__multadd>
 80032c0:	9007      	str	r0, [sp, #28]
 80032c2:	4607      	mov	r7, r0
 80032c4:	e6b1      	b.n	800302a <_dtoa_r+0x8a2>
 80032c6:	f000 fac6 	bl	8003856 <__multadd>
 80032ca:	2300      	movs	r3, #0
 80032cc:	9007      	str	r0, [sp, #28]
 80032ce:	220a      	movs	r2, #10
 80032d0:	4639      	mov	r1, r7
 80032d2:	4620      	mov	r0, r4
 80032d4:	f000 fabf 	bl	8003856 <__multadd>
 80032d8:	e7f3      	b.n	80032c2 <_dtoa_r+0xb3a>
 80032da:	4651      	mov	r1, sl
 80032dc:	2300      	movs	r3, #0
 80032de:	220a      	movs	r2, #10
 80032e0:	4620      	mov	r0, r4
 80032e2:	f000 fab8 	bl	8003856 <__multadd>
 80032e6:	4682      	mov	sl, r0
 80032e8:	e768      	b.n	80031bc <_dtoa_r+0xa34>
 80032ea:	9b06      	ldr	r3, [sp, #24]
 80032ec:	4293      	cmp	r3, r2
 80032ee:	d105      	bne.n	80032fc <_dtoa_r+0xb74>
 80032f0:	2331      	movs	r3, #49	; 0x31
 80032f2:	9a06      	ldr	r2, [sp, #24]
 80032f4:	f10b 0b01 	add.w	fp, fp, #1
 80032f8:	7013      	strb	r3, [r2, #0]
 80032fa:	e73e      	b.n	800317a <_dtoa_r+0x9f2>
 80032fc:	4615      	mov	r5, r2
 80032fe:	e7b4      	b.n	800326a <_dtoa_r+0xae2>
 8003300:	4b09      	ldr	r3, [pc, #36]	; (8003328 <_dtoa_r+0xba0>)
 8003302:	f7ff baa3 	b.w	800284c <_dtoa_r+0xc4>
 8003306:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8003308:	2b00      	cmp	r3, #0
 800330a:	f47f aa7d 	bne.w	8002808 <_dtoa_r+0x80>
 800330e:	4b07      	ldr	r3, [pc, #28]	; (800332c <_dtoa_r+0xba4>)
 8003310:	f7ff ba9c 	b.w	800284c <_dtoa_r+0xc4>
 8003314:	9b04      	ldr	r3, [sp, #16]
 8003316:	2b00      	cmp	r3, #0
 8003318:	f73f af4f 	bgt.w	80031ba <_dtoa_r+0xa32>
 800331c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 800331e:	2b02      	cmp	r3, #2
 8003320:	f77f af4b 	ble.w	80031ba <_dtoa_r+0xa32>
 8003324:	e714      	b.n	8003150 <_dtoa_r+0x9c8>
 8003326:	bf00      	nop
 8003328:	080044fc 	.word	0x080044fc
 800332c:	0800451e 	.word	0x0800451e

08003330 <_localeconv_r>:
 8003330:	4b04      	ldr	r3, [pc, #16]	; (8003344 <_localeconv_r+0x14>)
 8003332:	681b      	ldr	r3, [r3, #0]
 8003334:	6a18      	ldr	r0, [r3, #32]
 8003336:	4b04      	ldr	r3, [pc, #16]	; (8003348 <_localeconv_r+0x18>)
 8003338:	2800      	cmp	r0, #0
 800333a:	bf08      	it	eq
 800333c:	4618      	moveq	r0, r3
 800333e:	30f0      	adds	r0, #240	; 0xf0
 8003340:	4770      	bx	lr
 8003342:	bf00      	nop
 8003344:	20000014 	.word	0x20000014
 8003348:	20000518 	.word	0x20000518

0800334c <malloc>:
 800334c:	4b02      	ldr	r3, [pc, #8]	; (8003358 <malloc+0xc>)
 800334e:	4601      	mov	r1, r0
 8003350:	6818      	ldr	r0, [r3, #0]
 8003352:	f000 b803 	b.w	800335c <_malloc_r>
 8003356:	bf00      	nop
 8003358:	20000014 	.word	0x20000014

0800335c <_malloc_r>:
 800335c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003360:	f101 040b 	add.w	r4, r1, #11
 8003364:	2c16      	cmp	r4, #22
 8003366:	4681      	mov	r9, r0
 8003368:	d907      	bls.n	800337a <_malloc_r+0x1e>
 800336a:	f034 0407 	bics.w	r4, r4, #7
 800336e:	d505      	bpl.n	800337c <_malloc_r+0x20>
 8003370:	230c      	movs	r3, #12
 8003372:	f8c9 3000 	str.w	r3, [r9]
 8003376:	2600      	movs	r6, #0
 8003378:	e131      	b.n	80035de <_malloc_r+0x282>
 800337a:	2410      	movs	r4, #16
 800337c:	428c      	cmp	r4, r1
 800337e:	d3f7      	bcc.n	8003370 <_malloc_r+0x14>
 8003380:	4648      	mov	r0, r9
 8003382:	f000 fa11 	bl	80037a8 <__malloc_lock>
 8003386:	f5b4 7ffc 	cmp.w	r4, #504	; 0x1f8
 800338a:	4d9b      	ldr	r5, [pc, #620]	; (80035f8 <_malloc_r+0x29c>)
 800338c:	d236      	bcs.n	80033fc <_malloc_r+0xa0>
 800338e:	f104 0208 	add.w	r2, r4, #8
 8003392:	442a      	add	r2, r5
 8003394:	6856      	ldr	r6, [r2, #4]
 8003396:	f1a2 0108 	sub.w	r1, r2, #8
 800339a:	428e      	cmp	r6, r1
 800339c:	ea4f 03d4 	mov.w	r3, r4, lsr #3
 80033a0:	d102      	bne.n	80033a8 <_malloc_r+0x4c>
 80033a2:	68d6      	ldr	r6, [r2, #12]
 80033a4:	42b2      	cmp	r2, r6
 80033a6:	d010      	beq.n	80033ca <_malloc_r+0x6e>
 80033a8:	6873      	ldr	r3, [r6, #4]
 80033aa:	68f2      	ldr	r2, [r6, #12]
 80033ac:	68b1      	ldr	r1, [r6, #8]
 80033ae:	f023 0303 	bic.w	r3, r3, #3
 80033b2:	60ca      	str	r2, [r1, #12]
 80033b4:	4433      	add	r3, r6
 80033b6:	6091      	str	r1, [r2, #8]
 80033b8:	685a      	ldr	r2, [r3, #4]
 80033ba:	f042 0201 	orr.w	r2, r2, #1
 80033be:	605a      	str	r2, [r3, #4]
 80033c0:	4648      	mov	r0, r9
 80033c2:	f000 f9f7 	bl	80037b4 <__malloc_unlock>
 80033c6:	3608      	adds	r6, #8
 80033c8:	e109      	b.n	80035de <_malloc_r+0x282>
 80033ca:	3302      	adds	r3, #2
 80033cc:	4a8b      	ldr	r2, [pc, #556]	; (80035fc <_malloc_r+0x2a0>)
 80033ce:	692e      	ldr	r6, [r5, #16]
 80033d0:	4611      	mov	r1, r2
 80033d2:	4296      	cmp	r6, r2
 80033d4:	d06d      	beq.n	80034b2 <_malloc_r+0x156>
 80033d6:	6870      	ldr	r0, [r6, #4]
 80033d8:	f020 0003 	bic.w	r0, r0, #3
 80033dc:	1b07      	subs	r7, r0, r4
 80033de:	2f0f      	cmp	r7, #15
 80033e0:	dd47      	ble.n	8003472 <_malloc_r+0x116>
 80033e2:	1933      	adds	r3, r6, r4
 80033e4:	f044 0401 	orr.w	r4, r4, #1
 80033e8:	6074      	str	r4, [r6, #4]
 80033ea:	616b      	str	r3, [r5, #20]
 80033ec:	612b      	str	r3, [r5, #16]
 80033ee:	60da      	str	r2, [r3, #12]
 80033f0:	609a      	str	r2, [r3, #8]
 80033f2:	f047 0201 	orr.w	r2, r7, #1
 80033f6:	605a      	str	r2, [r3, #4]
 80033f8:	5037      	str	r7, [r6, r0]
 80033fa:	e7e1      	b.n	80033c0 <_malloc_r+0x64>
 80033fc:	0a63      	lsrs	r3, r4, #9
 80033fe:	d02a      	beq.n	8003456 <_malloc_r+0xfa>
 8003400:	2b04      	cmp	r3, #4
 8003402:	d812      	bhi.n	800342a <_malloc_r+0xce>
 8003404:	09a3      	lsrs	r3, r4, #6
 8003406:	3338      	adds	r3, #56	; 0x38
 8003408:	1c5a      	adds	r2, r3, #1
 800340a:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
 800340e:	6856      	ldr	r6, [r2, #4]
 8003410:	f1a2 0008 	sub.w	r0, r2, #8
 8003414:	4286      	cmp	r6, r0
 8003416:	d006      	beq.n	8003426 <_malloc_r+0xca>
 8003418:	6872      	ldr	r2, [r6, #4]
 800341a:	f022 0203 	bic.w	r2, r2, #3
 800341e:	1b11      	subs	r1, r2, r4
 8003420:	290f      	cmp	r1, #15
 8003422:	dd1c      	ble.n	800345e <_malloc_r+0x102>
 8003424:	3b01      	subs	r3, #1
 8003426:	3301      	adds	r3, #1
 8003428:	e7d0      	b.n	80033cc <_malloc_r+0x70>
 800342a:	2b14      	cmp	r3, #20
 800342c:	d801      	bhi.n	8003432 <_malloc_r+0xd6>
 800342e:	335b      	adds	r3, #91	; 0x5b
 8003430:	e7ea      	b.n	8003408 <_malloc_r+0xac>
 8003432:	2b54      	cmp	r3, #84	; 0x54
 8003434:	d802      	bhi.n	800343c <_malloc_r+0xe0>
 8003436:	0b23      	lsrs	r3, r4, #12
 8003438:	336e      	adds	r3, #110	; 0x6e
 800343a:	e7e5      	b.n	8003408 <_malloc_r+0xac>
 800343c:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
 8003440:	d802      	bhi.n	8003448 <_malloc_r+0xec>
 8003442:	0be3      	lsrs	r3, r4, #15
 8003444:	3377      	adds	r3, #119	; 0x77
 8003446:	e7df      	b.n	8003408 <_malloc_r+0xac>
 8003448:	f240 5254 	movw	r2, #1364	; 0x554
 800344c:	4293      	cmp	r3, r2
 800344e:	d804      	bhi.n	800345a <_malloc_r+0xfe>
 8003450:	0ca3      	lsrs	r3, r4, #18
 8003452:	337c      	adds	r3, #124	; 0x7c
 8003454:	e7d8      	b.n	8003408 <_malloc_r+0xac>
 8003456:	233f      	movs	r3, #63	; 0x3f
 8003458:	e7d6      	b.n	8003408 <_malloc_r+0xac>
 800345a:	237e      	movs	r3, #126	; 0x7e
 800345c:	e7d4      	b.n	8003408 <_malloc_r+0xac>
 800345e:	2900      	cmp	r1, #0
 8003460:	68f1      	ldr	r1, [r6, #12]
 8003462:	db04      	blt.n	800346e <_malloc_r+0x112>
 8003464:	68b3      	ldr	r3, [r6, #8]
 8003466:	60d9      	str	r1, [r3, #12]
 8003468:	608b      	str	r3, [r1, #8]
 800346a:	18b3      	adds	r3, r6, r2
 800346c:	e7a4      	b.n	80033b8 <_malloc_r+0x5c>
 800346e:	460e      	mov	r6, r1
 8003470:	e7d0      	b.n	8003414 <_malloc_r+0xb8>
 8003472:	2f00      	cmp	r7, #0
 8003474:	616a      	str	r2, [r5, #20]
 8003476:	612a      	str	r2, [r5, #16]
 8003478:	db05      	blt.n	8003486 <_malloc_r+0x12a>
 800347a:	4430      	add	r0, r6
 800347c:	6843      	ldr	r3, [r0, #4]
 800347e:	f043 0301 	orr.w	r3, r3, #1
 8003482:	6043      	str	r3, [r0, #4]
 8003484:	e79c      	b.n	80033c0 <_malloc_r+0x64>
 8003486:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 800348a:	d244      	bcs.n	8003516 <_malloc_r+0x1ba>
 800348c:	2201      	movs	r2, #1
 800348e:	08c0      	lsrs	r0, r0, #3
 8003490:	1087      	asrs	r7, r0, #2
 8003492:	fa02 f707 	lsl.w	r7, r2, r7
 8003496:	686a      	ldr	r2, [r5, #4]
 8003498:	3001      	adds	r0, #1
 800349a:	433a      	orrs	r2, r7
 800349c:	606a      	str	r2, [r5, #4]
 800349e:	f855 7030 	ldr.w	r7, [r5, r0, lsl #3]
 80034a2:	eb05 02c0 	add.w	r2, r5, r0, lsl #3
 80034a6:	3a08      	subs	r2, #8
 80034a8:	60f2      	str	r2, [r6, #12]
 80034aa:	60b7      	str	r7, [r6, #8]
 80034ac:	f845 6030 	str.w	r6, [r5, r0, lsl #3]
 80034b0:	60fe      	str	r6, [r7, #12]
 80034b2:	2001      	movs	r0, #1
 80034b4:	109a      	asrs	r2, r3, #2
 80034b6:	fa00 f202 	lsl.w	r2, r0, r2
 80034ba:	6868      	ldr	r0, [r5, #4]
 80034bc:	4282      	cmp	r2, r0
 80034be:	f200 809f 	bhi.w	8003600 <_malloc_r+0x2a4>
 80034c2:	4202      	tst	r2, r0
 80034c4:	d106      	bne.n	80034d4 <_malloc_r+0x178>
 80034c6:	f023 0303 	bic.w	r3, r3, #3
 80034ca:	0052      	lsls	r2, r2, #1
 80034cc:	4202      	tst	r2, r0
 80034ce:	f103 0304 	add.w	r3, r3, #4
 80034d2:	d0fa      	beq.n	80034ca <_malloc_r+0x16e>
 80034d4:	eb05 0cc3 	add.w	ip, r5, r3, lsl #3
 80034d8:	46e0      	mov	r8, ip
 80034da:	469e      	mov	lr, r3
 80034dc:	f8d8 600c 	ldr.w	r6, [r8, #12]
 80034e0:	4546      	cmp	r6, r8
 80034e2:	d153      	bne.n	800358c <_malloc_r+0x230>
 80034e4:	f10e 0e01 	add.w	lr, lr, #1
 80034e8:	f01e 0f03 	tst.w	lr, #3
 80034ec:	f108 0808 	add.w	r8, r8, #8
 80034f0:	d1f4      	bne.n	80034dc <_malloc_r+0x180>
 80034f2:	0798      	lsls	r0, r3, #30
 80034f4:	d179      	bne.n	80035ea <_malloc_r+0x28e>
 80034f6:	686b      	ldr	r3, [r5, #4]
 80034f8:	ea23 0302 	bic.w	r3, r3, r2
 80034fc:	606b      	str	r3, [r5, #4]
 80034fe:	6868      	ldr	r0, [r5, #4]
 8003500:	0052      	lsls	r2, r2, #1
 8003502:	4282      	cmp	r2, r0
 8003504:	d87c      	bhi.n	8003600 <_malloc_r+0x2a4>
 8003506:	2a00      	cmp	r2, #0
 8003508:	d07a      	beq.n	8003600 <_malloc_r+0x2a4>
 800350a:	4673      	mov	r3, lr
 800350c:	4202      	tst	r2, r0
 800350e:	d1e1      	bne.n	80034d4 <_malloc_r+0x178>
 8003510:	3304      	adds	r3, #4
 8003512:	0052      	lsls	r2, r2, #1
 8003514:	e7fa      	b.n	800350c <_malloc_r+0x1b0>
 8003516:	0a42      	lsrs	r2, r0, #9
 8003518:	2a04      	cmp	r2, #4
 800351a:	d815      	bhi.n	8003548 <_malloc_r+0x1ec>
 800351c:	0982      	lsrs	r2, r0, #6
 800351e:	3238      	adds	r2, #56	; 0x38
 8003520:	1c57      	adds	r7, r2, #1
 8003522:	f855 7037 	ldr.w	r7, [r5, r7, lsl #3]
 8003526:	eb05 0ec2 	add.w	lr, r5, r2, lsl #3
 800352a:	45be      	cmp	lr, r7
 800352c:	d126      	bne.n	800357c <_malloc_r+0x220>
 800352e:	2001      	movs	r0, #1
 8003530:	1092      	asrs	r2, r2, #2
 8003532:	fa00 f202 	lsl.w	r2, r0, r2
 8003536:	6868      	ldr	r0, [r5, #4]
 8003538:	4310      	orrs	r0, r2
 800353a:	6068      	str	r0, [r5, #4]
 800353c:	f8c6 e00c 	str.w	lr, [r6, #12]
 8003540:	60b7      	str	r7, [r6, #8]
 8003542:	f8ce 6008 	str.w	r6, [lr, #8]
 8003546:	e7b3      	b.n	80034b0 <_malloc_r+0x154>
 8003548:	2a14      	cmp	r2, #20
 800354a:	d801      	bhi.n	8003550 <_malloc_r+0x1f4>
 800354c:	325b      	adds	r2, #91	; 0x5b
 800354e:	e7e7      	b.n	8003520 <_malloc_r+0x1c4>
 8003550:	2a54      	cmp	r2, #84	; 0x54
 8003552:	d802      	bhi.n	800355a <_malloc_r+0x1fe>
 8003554:	0b02      	lsrs	r2, r0, #12
 8003556:	326e      	adds	r2, #110	; 0x6e
 8003558:	e7e2      	b.n	8003520 <_malloc_r+0x1c4>
 800355a:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
 800355e:	d802      	bhi.n	8003566 <_malloc_r+0x20a>
 8003560:	0bc2      	lsrs	r2, r0, #15
 8003562:	3277      	adds	r2, #119	; 0x77
 8003564:	e7dc      	b.n	8003520 <_malloc_r+0x1c4>
 8003566:	f240 5754 	movw	r7, #1364	; 0x554
 800356a:	42ba      	cmp	r2, r7
 800356c:	bf9a      	itte	ls
 800356e:	0c82      	lsrls	r2, r0, #18
 8003570:	327c      	addls	r2, #124	; 0x7c
 8003572:	227e      	movhi	r2, #126	; 0x7e
 8003574:	e7d4      	b.n	8003520 <_malloc_r+0x1c4>
 8003576:	68bf      	ldr	r7, [r7, #8]
 8003578:	45be      	cmp	lr, r7
 800357a:	d004      	beq.n	8003586 <_malloc_r+0x22a>
 800357c:	687a      	ldr	r2, [r7, #4]
 800357e:	f022 0203 	bic.w	r2, r2, #3
 8003582:	4290      	cmp	r0, r2
 8003584:	d3f7      	bcc.n	8003576 <_malloc_r+0x21a>
 8003586:	f8d7 e00c 	ldr.w	lr, [r7, #12]
 800358a:	e7d7      	b.n	800353c <_malloc_r+0x1e0>
 800358c:	6870      	ldr	r0, [r6, #4]
 800358e:	68f7      	ldr	r7, [r6, #12]
 8003590:	f020 0003 	bic.w	r0, r0, #3
 8003594:	eba0 0a04 	sub.w	sl, r0, r4
 8003598:	f1ba 0f0f 	cmp.w	sl, #15
 800359c:	dd10      	ble.n	80035c0 <_malloc_r+0x264>
 800359e:	68b2      	ldr	r2, [r6, #8]
 80035a0:	1933      	adds	r3, r6, r4
 80035a2:	f044 0401 	orr.w	r4, r4, #1
 80035a6:	6074      	str	r4, [r6, #4]
 80035a8:	60d7      	str	r7, [r2, #12]
 80035aa:	60ba      	str	r2, [r7, #8]
 80035ac:	f04a 0201 	orr.w	r2, sl, #1
 80035b0:	616b      	str	r3, [r5, #20]
 80035b2:	612b      	str	r3, [r5, #16]
 80035b4:	60d9      	str	r1, [r3, #12]
 80035b6:	6099      	str	r1, [r3, #8]
 80035b8:	605a      	str	r2, [r3, #4]
 80035ba:	f846 a000 	str.w	sl, [r6, r0]
 80035be:	e6ff      	b.n	80033c0 <_malloc_r+0x64>
 80035c0:	f1ba 0f00 	cmp.w	sl, #0
 80035c4:	db0f      	blt.n	80035e6 <_malloc_r+0x28a>
 80035c6:	4430      	add	r0, r6
 80035c8:	6843      	ldr	r3, [r0, #4]
 80035ca:	f043 0301 	orr.w	r3, r3, #1
 80035ce:	6043      	str	r3, [r0, #4]
 80035d0:	f856 3f08 	ldr.w	r3, [r6, #8]!
 80035d4:	4648      	mov	r0, r9
 80035d6:	60df      	str	r7, [r3, #12]
 80035d8:	60bb      	str	r3, [r7, #8]
 80035da:	f000 f8eb 	bl	80037b4 <__malloc_unlock>
 80035de:	4630      	mov	r0, r6
 80035e0:	b003      	add	sp, #12
 80035e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80035e6:	463e      	mov	r6, r7
 80035e8:	e77a      	b.n	80034e0 <_malloc_r+0x184>
 80035ea:	f85c 0908 	ldr.w	r0, [ip], #-8
 80035ee:	3b01      	subs	r3, #1
 80035f0:	4584      	cmp	ip, r0
 80035f2:	f43f af7e 	beq.w	80034f2 <_malloc_r+0x196>
 80035f6:	e782      	b.n	80034fe <_malloc_r+0x1a2>
 80035f8:	20000108 	.word	0x20000108
 80035fc:	20000110 	.word	0x20000110
 8003600:	f8d5 b008 	ldr.w	fp, [r5, #8]
 8003604:	f8db 6004 	ldr.w	r6, [fp, #4]
 8003608:	f026 0603 	bic.w	r6, r6, #3
 800360c:	42b4      	cmp	r4, r6
 800360e:	d803      	bhi.n	8003618 <_malloc_r+0x2bc>
 8003610:	1b33      	subs	r3, r6, r4
 8003612:	2b0f      	cmp	r3, #15
 8003614:	f300 8095 	bgt.w	8003742 <_malloc_r+0x3e6>
 8003618:	4a4f      	ldr	r2, [pc, #316]	; (8003758 <_malloc_r+0x3fc>)
 800361a:	eb0b 0306 	add.w	r3, fp, r6
 800361e:	6817      	ldr	r7, [r2, #0]
 8003620:	4a4e      	ldr	r2, [pc, #312]	; (800375c <_malloc_r+0x400>)
 8003622:	3710      	adds	r7, #16
 8003624:	6811      	ldr	r1, [r2, #0]
 8003626:	4427      	add	r7, r4
 8003628:	3101      	adds	r1, #1
 800362a:	d005      	beq.n	8003638 <_malloc_r+0x2dc>
 800362c:	494c      	ldr	r1, [pc, #304]	; (8003760 <_malloc_r+0x404>)
 800362e:	3901      	subs	r1, #1
 8003630:	440f      	add	r7, r1
 8003632:	3101      	adds	r1, #1
 8003634:	4249      	negs	r1, r1
 8003636:	400f      	ands	r7, r1
 8003638:	4639      	mov	r1, r7
 800363a:	4648      	mov	r0, r9
 800363c:	9201      	str	r2, [sp, #4]
 800363e:	9300      	str	r3, [sp, #0]
 8003640:	f000 fb90 	bl	8003d64 <_sbrk_r>
 8003644:	f1b0 3fff 	cmp.w	r0, #4294967295
 8003648:	4680      	mov	r8, r0
 800364a:	d055      	beq.n	80036f8 <_malloc_r+0x39c>
 800364c:	9b00      	ldr	r3, [sp, #0]
 800364e:	9a01      	ldr	r2, [sp, #4]
 8003650:	4283      	cmp	r3, r0
 8003652:	d901      	bls.n	8003658 <_malloc_r+0x2fc>
 8003654:	45ab      	cmp	fp, r5
 8003656:	d14f      	bne.n	80036f8 <_malloc_r+0x39c>
 8003658:	4842      	ldr	r0, [pc, #264]	; (8003764 <_malloc_r+0x408>)
 800365a:	4543      	cmp	r3, r8
 800365c:	6801      	ldr	r1, [r0, #0]
 800365e:	4682      	mov	sl, r0
 8003660:	eb07 0e01 	add.w	lr, r7, r1
 8003664:	f8c0 e000 	str.w	lr, [r0]
 8003668:	493f      	ldr	r1, [pc, #252]	; (8003768 <_malloc_r+0x40c>)
 800366a:	d113      	bne.n	8003694 <_malloc_r+0x338>
 800366c:	420b      	tst	r3, r1
 800366e:	d111      	bne.n	8003694 <_malloc_r+0x338>
 8003670:	68ab      	ldr	r3, [r5, #8]
 8003672:	443e      	add	r6, r7
 8003674:	f046 0601 	orr.w	r6, r6, #1
 8003678:	605e      	str	r6, [r3, #4]
 800367a:	4a3c      	ldr	r2, [pc, #240]	; (800376c <_malloc_r+0x410>)
 800367c:	f8da 3000 	ldr.w	r3, [sl]
 8003680:	6811      	ldr	r1, [r2, #0]
 8003682:	428b      	cmp	r3, r1
 8003684:	bf88      	it	hi
 8003686:	6013      	strhi	r3, [r2, #0]
 8003688:	4a39      	ldr	r2, [pc, #228]	; (8003770 <_malloc_r+0x414>)
 800368a:	6811      	ldr	r1, [r2, #0]
 800368c:	428b      	cmp	r3, r1
 800368e:	bf88      	it	hi
 8003690:	6013      	strhi	r3, [r2, #0]
 8003692:	e031      	b.n	80036f8 <_malloc_r+0x39c>
 8003694:	6810      	ldr	r0, [r2, #0]
 8003696:	3001      	adds	r0, #1
 8003698:	bf1b      	ittet	ne
 800369a:	eba8 0303 	subne.w	r3, r8, r3
 800369e:	4473      	addne	r3, lr
 80036a0:	f8c2 8000 	streq.w	r8, [r2]
 80036a4:	f8ca 3000 	strne.w	r3, [sl]
 80036a8:	f018 0007 	ands.w	r0, r8, #7
 80036ac:	bf1c      	itt	ne
 80036ae:	f1c0 0008 	rsbne	r0, r0, #8
 80036b2:	4480      	addne	r8, r0
 80036b4:	4b2a      	ldr	r3, [pc, #168]	; (8003760 <_malloc_r+0x404>)
 80036b6:	4447      	add	r7, r8
 80036b8:	4418      	add	r0, r3
 80036ba:	400f      	ands	r7, r1
 80036bc:	1bc7      	subs	r7, r0, r7
 80036be:	4639      	mov	r1, r7
 80036c0:	4648      	mov	r0, r9
 80036c2:	f000 fb4f 	bl	8003d64 <_sbrk_r>
 80036c6:	1c43      	adds	r3, r0, #1
 80036c8:	bf04      	itt	eq
 80036ca:	4640      	moveq	r0, r8
 80036cc:	2700      	moveq	r7, #0
 80036ce:	f8da 3000 	ldr.w	r3, [sl]
 80036d2:	eba0 0008 	sub.w	r0, r0, r8
 80036d6:	443b      	add	r3, r7
 80036d8:	4407      	add	r7, r0
 80036da:	f047 0701 	orr.w	r7, r7, #1
 80036de:	45ab      	cmp	fp, r5
 80036e0:	f8c5 8008 	str.w	r8, [r5, #8]
 80036e4:	f8ca 3000 	str.w	r3, [sl]
 80036e8:	f8c8 7004 	str.w	r7, [r8, #4]
 80036ec:	d0c5      	beq.n	800367a <_malloc_r+0x31e>
 80036ee:	2e0f      	cmp	r6, #15
 80036f0:	d810      	bhi.n	8003714 <_malloc_r+0x3b8>
 80036f2:	2301      	movs	r3, #1
 80036f4:	f8c8 3004 	str.w	r3, [r8, #4]
 80036f8:	68ab      	ldr	r3, [r5, #8]
 80036fa:	685a      	ldr	r2, [r3, #4]
 80036fc:	f022 0203 	bic.w	r2, r2, #3
 8003700:	4294      	cmp	r4, r2
 8003702:	eba2 0304 	sub.w	r3, r2, r4
 8003706:	d801      	bhi.n	800370c <_malloc_r+0x3b0>
 8003708:	2b0f      	cmp	r3, #15
 800370a:	dc1a      	bgt.n	8003742 <_malloc_r+0x3e6>
 800370c:	4648      	mov	r0, r9
 800370e:	f000 f851 	bl	80037b4 <__malloc_unlock>
 8003712:	e630      	b.n	8003376 <_malloc_r+0x1a>
 8003714:	2205      	movs	r2, #5
 8003716:	f8db 3004 	ldr.w	r3, [fp, #4]
 800371a:	3e0c      	subs	r6, #12
 800371c:	f026 0607 	bic.w	r6, r6, #7
 8003720:	f003 0301 	and.w	r3, r3, #1
 8003724:	4333      	orrs	r3, r6
 8003726:	f8cb 3004 	str.w	r3, [fp, #4]
 800372a:	2e0f      	cmp	r6, #15
 800372c:	eb0b 0306 	add.w	r3, fp, r6
 8003730:	605a      	str	r2, [r3, #4]
 8003732:	609a      	str	r2, [r3, #8]
 8003734:	d9a1      	bls.n	800367a <_malloc_r+0x31e>
 8003736:	f10b 0108 	add.w	r1, fp, #8
 800373a:	4648      	mov	r0, r9
 800373c:	f000 fc20 	bl	8003f80 <_free_r>
 8003740:	e79b      	b.n	800367a <_malloc_r+0x31e>
 8003742:	68ae      	ldr	r6, [r5, #8]
 8003744:	f044 0201 	orr.w	r2, r4, #1
 8003748:	f043 0301 	orr.w	r3, r3, #1
 800374c:	4434      	add	r4, r6
 800374e:	6072      	str	r2, [r6, #4]
 8003750:	60ac      	str	r4, [r5, #8]
 8003752:	6063      	str	r3, [r4, #4]
 8003754:	e634      	b.n	80033c0 <_malloc_r+0x64>
 8003756:	bf00      	nop
 8003758:	200006d0 	.word	0x200006d0
 800375c:	20000510 	.word	0x20000510
 8003760:	00000080 	.word	0x00000080
 8003764:	200006a0 	.word	0x200006a0
 8003768:	0000007f 	.word	0x0000007f
 800376c:	200006c8 	.word	0x200006c8
 8003770:	200006cc 	.word	0x200006cc

08003774 <memchr>:
 8003774:	b510      	push	{r4, lr}
 8003776:	b2c9      	uxtb	r1, r1
 8003778:	4402      	add	r2, r0
 800377a:	4290      	cmp	r0, r2
 800377c:	4603      	mov	r3, r0
 800377e:	d101      	bne.n	8003784 <memchr+0x10>
 8003780:	2000      	movs	r0, #0
 8003782:	bd10      	pop	{r4, pc}
 8003784:	781c      	ldrb	r4, [r3, #0]
 8003786:	3001      	adds	r0, #1
 8003788:	428c      	cmp	r4, r1
 800378a:	d1f6      	bne.n	800377a <memchr+0x6>
 800378c:	4618      	mov	r0, r3
 800378e:	bd10      	pop	{r4, pc}

08003790 <memcpy>:
 8003790:	b510      	push	{r4, lr}
 8003792:	1e43      	subs	r3, r0, #1
 8003794:	440a      	add	r2, r1
 8003796:	4291      	cmp	r1, r2
 8003798:	d100      	bne.n	800379c <memcpy+0xc>
 800379a:	bd10      	pop	{r4, pc}
 800379c:	f811 4b01 	ldrb.w	r4, [r1], #1
 80037a0:	f803 4f01 	strb.w	r4, [r3, #1]!
 80037a4:	e7f7      	b.n	8003796 <memcpy+0x6>
	...

080037a8 <__malloc_lock>:
 80037a8:	4801      	ldr	r0, [pc, #4]	; (80037b0 <__malloc_lock+0x8>)
 80037aa:	f000 bca5 	b.w	80040f8 <__retarget_lock_acquire_recursive>
 80037ae:	bf00      	nop
 80037b0:	200006dc 	.word	0x200006dc

080037b4 <__malloc_unlock>:
 80037b4:	4801      	ldr	r0, [pc, #4]	; (80037bc <__malloc_unlock+0x8>)
 80037b6:	f000 bca0 	b.w	80040fa <__retarget_lock_release_recursive>
 80037ba:	bf00      	nop
 80037bc:	200006dc 	.word	0x200006dc

080037c0 <_Balloc>:
 80037c0:	b570      	push	{r4, r5, r6, lr}
 80037c2:	6a45      	ldr	r5, [r0, #36]	; 0x24
 80037c4:	4604      	mov	r4, r0
 80037c6:	460e      	mov	r6, r1
 80037c8:	b93d      	cbnz	r5, 80037da <_Balloc+0x1a>
 80037ca:	2010      	movs	r0, #16
 80037cc:	f7ff fdbe 	bl	800334c <malloc>
 80037d0:	6260      	str	r0, [r4, #36]	; 0x24
 80037d2:	6045      	str	r5, [r0, #4]
 80037d4:	6085      	str	r5, [r0, #8]
 80037d6:	6005      	str	r5, [r0, #0]
 80037d8:	60c5      	str	r5, [r0, #12]
 80037da:	6a65      	ldr	r5, [r4, #36]	; 0x24
 80037dc:	68eb      	ldr	r3, [r5, #12]
 80037de:	b183      	cbz	r3, 8003802 <_Balloc+0x42>
 80037e0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80037e2:	68db      	ldr	r3, [r3, #12]
 80037e4:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 80037e8:	b9b8      	cbnz	r0, 800381a <_Balloc+0x5a>
 80037ea:	2101      	movs	r1, #1
 80037ec:	fa01 f506 	lsl.w	r5, r1, r6
 80037f0:	1d6a      	adds	r2, r5, #5
 80037f2:	0092      	lsls	r2, r2, #2
 80037f4:	4620      	mov	r0, r4
 80037f6:	f000 fb3f 	bl	8003e78 <_calloc_r>
 80037fa:	b160      	cbz	r0, 8003816 <_Balloc+0x56>
 80037fc:	6046      	str	r6, [r0, #4]
 80037fe:	6085      	str	r5, [r0, #8]
 8003800:	e00e      	b.n	8003820 <_Balloc+0x60>
 8003802:	2221      	movs	r2, #33	; 0x21
 8003804:	2104      	movs	r1, #4
 8003806:	4620      	mov	r0, r4
 8003808:	f000 fb36 	bl	8003e78 <_calloc_r>
 800380c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800380e:	60e8      	str	r0, [r5, #12]
 8003810:	68db      	ldr	r3, [r3, #12]
 8003812:	2b00      	cmp	r3, #0
 8003814:	d1e4      	bne.n	80037e0 <_Balloc+0x20>
 8003816:	2000      	movs	r0, #0
 8003818:	bd70      	pop	{r4, r5, r6, pc}
 800381a:	6802      	ldr	r2, [r0, #0]
 800381c:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
 8003820:	2300      	movs	r3, #0
 8003822:	6103      	str	r3, [r0, #16]
 8003824:	60c3      	str	r3, [r0, #12]
 8003826:	bd70      	pop	{r4, r5, r6, pc}

08003828 <_Bfree>:
 8003828:	b570      	push	{r4, r5, r6, lr}
 800382a:	6a44      	ldr	r4, [r0, #36]	; 0x24
 800382c:	4606      	mov	r6, r0
 800382e:	460d      	mov	r5, r1
 8003830:	b93c      	cbnz	r4, 8003842 <_Bfree+0x1a>
 8003832:	2010      	movs	r0, #16
 8003834:	f7ff fd8a 	bl	800334c <malloc>
 8003838:	6270      	str	r0, [r6, #36]	; 0x24
 800383a:	6044      	str	r4, [r0, #4]
 800383c:	6084      	str	r4, [r0, #8]
 800383e:	6004      	str	r4, [r0, #0]
 8003840:	60c4      	str	r4, [r0, #12]
 8003842:	b13d      	cbz	r5, 8003854 <_Bfree+0x2c>
 8003844:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8003846:	686a      	ldr	r2, [r5, #4]
 8003848:	68db      	ldr	r3, [r3, #12]
 800384a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800384e:	6029      	str	r1, [r5, #0]
 8003850:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
 8003854:	bd70      	pop	{r4, r5, r6, pc}

08003856 <__multadd>:
 8003856:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800385a:	461f      	mov	r7, r3
 800385c:	4606      	mov	r6, r0
 800385e:	460c      	mov	r4, r1
 8003860:	2300      	movs	r3, #0
 8003862:	690d      	ldr	r5, [r1, #16]
 8003864:	f101 0e14 	add.w	lr, r1, #20
 8003868:	f8de 0000 	ldr.w	r0, [lr]
 800386c:	3301      	adds	r3, #1
 800386e:	b281      	uxth	r1, r0
 8003870:	fb02 7101 	mla	r1, r2, r1, r7
 8003874:	0c00      	lsrs	r0, r0, #16
 8003876:	0c0f      	lsrs	r7, r1, #16
 8003878:	fb02 7000 	mla	r0, r2, r0, r7
 800387c:	b289      	uxth	r1, r1
 800387e:	eb01 4100 	add.w	r1, r1, r0, lsl #16
 8003882:	429d      	cmp	r5, r3
 8003884:	ea4f 4710 	mov.w	r7, r0, lsr #16
 8003888:	f84e 1b04 	str.w	r1, [lr], #4
 800388c:	dcec      	bgt.n	8003868 <__multadd+0x12>
 800388e:	b1d7      	cbz	r7, 80038c6 <__multadd+0x70>
 8003890:	68a3      	ldr	r3, [r4, #8]
 8003892:	429d      	cmp	r5, r3
 8003894:	db12      	blt.n	80038bc <__multadd+0x66>
 8003896:	6861      	ldr	r1, [r4, #4]
 8003898:	4630      	mov	r0, r6
 800389a:	3101      	adds	r1, #1
 800389c:	f7ff ff90 	bl	80037c0 <_Balloc>
 80038a0:	4680      	mov	r8, r0
 80038a2:	6922      	ldr	r2, [r4, #16]
 80038a4:	f104 010c 	add.w	r1, r4, #12
 80038a8:	3202      	adds	r2, #2
 80038aa:	0092      	lsls	r2, r2, #2
 80038ac:	300c      	adds	r0, #12
 80038ae:	f7ff ff6f 	bl	8003790 <memcpy>
 80038b2:	4621      	mov	r1, r4
 80038b4:	4630      	mov	r0, r6
 80038b6:	f7ff ffb7 	bl	8003828 <_Bfree>
 80038ba:	4644      	mov	r4, r8
 80038bc:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 80038c0:	3501      	adds	r5, #1
 80038c2:	615f      	str	r7, [r3, #20]
 80038c4:	6125      	str	r5, [r4, #16]
 80038c6:	4620      	mov	r0, r4
 80038c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080038cc <__hi0bits>:
 80038cc:	0c02      	lsrs	r2, r0, #16
 80038ce:	0412      	lsls	r2, r2, #16
 80038d0:	4603      	mov	r3, r0
 80038d2:	b9b2      	cbnz	r2, 8003902 <__hi0bits+0x36>
 80038d4:	0403      	lsls	r3, r0, #16
 80038d6:	2010      	movs	r0, #16
 80038d8:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80038dc:	bf04      	itt	eq
 80038de:	021b      	lsleq	r3, r3, #8
 80038e0:	3008      	addeq	r0, #8
 80038e2:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80038e6:	bf04      	itt	eq
 80038e8:	011b      	lsleq	r3, r3, #4
 80038ea:	3004      	addeq	r0, #4
 80038ec:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80038f0:	bf04      	itt	eq
 80038f2:	009b      	lsleq	r3, r3, #2
 80038f4:	3002      	addeq	r0, #2
 80038f6:	2b00      	cmp	r3, #0
 80038f8:	db06      	blt.n	8003908 <__hi0bits+0x3c>
 80038fa:	005b      	lsls	r3, r3, #1
 80038fc:	d503      	bpl.n	8003906 <__hi0bits+0x3a>
 80038fe:	3001      	adds	r0, #1
 8003900:	4770      	bx	lr
 8003902:	2000      	movs	r0, #0
 8003904:	e7e8      	b.n	80038d8 <__hi0bits+0xc>
 8003906:	2020      	movs	r0, #32
 8003908:	4770      	bx	lr

0800390a <__lo0bits>:
 800390a:	6803      	ldr	r3, [r0, #0]
 800390c:	4601      	mov	r1, r0
 800390e:	f013 0207 	ands.w	r2, r3, #7
 8003912:	d00b      	beq.n	800392c <__lo0bits+0x22>
 8003914:	07da      	lsls	r2, r3, #31
 8003916:	d423      	bmi.n	8003960 <__lo0bits+0x56>
 8003918:	0798      	lsls	r0, r3, #30
 800391a:	bf49      	itett	mi
 800391c:	085b      	lsrmi	r3, r3, #1
 800391e:	089b      	lsrpl	r3, r3, #2
 8003920:	2001      	movmi	r0, #1
 8003922:	600b      	strmi	r3, [r1, #0]
 8003924:	bf5c      	itt	pl
 8003926:	600b      	strpl	r3, [r1, #0]
 8003928:	2002      	movpl	r0, #2
 800392a:	4770      	bx	lr
 800392c:	b298      	uxth	r0, r3
 800392e:	b9a8      	cbnz	r0, 800395c <__lo0bits+0x52>
 8003930:	2010      	movs	r0, #16
 8003932:	0c1b      	lsrs	r3, r3, #16
 8003934:	f013 0fff 	tst.w	r3, #255	; 0xff
 8003938:	bf04      	itt	eq
 800393a:	0a1b      	lsreq	r3, r3, #8
 800393c:	3008      	addeq	r0, #8
 800393e:	071a      	lsls	r2, r3, #28
 8003940:	bf04      	itt	eq
 8003942:	091b      	lsreq	r3, r3, #4
 8003944:	3004      	addeq	r0, #4
 8003946:	079a      	lsls	r2, r3, #30
 8003948:	bf04      	itt	eq
 800394a:	089b      	lsreq	r3, r3, #2
 800394c:	3002      	addeq	r0, #2
 800394e:	07da      	lsls	r2, r3, #31
 8003950:	d402      	bmi.n	8003958 <__lo0bits+0x4e>
 8003952:	085b      	lsrs	r3, r3, #1
 8003954:	d006      	beq.n	8003964 <__lo0bits+0x5a>
 8003956:	3001      	adds	r0, #1
 8003958:	600b      	str	r3, [r1, #0]
 800395a:	4770      	bx	lr
 800395c:	4610      	mov	r0, r2
 800395e:	e7e9      	b.n	8003934 <__lo0bits+0x2a>
 8003960:	2000      	movs	r0, #0
 8003962:	4770      	bx	lr
 8003964:	2020      	movs	r0, #32
 8003966:	4770      	bx	lr

08003968 <__i2b>:
 8003968:	b510      	push	{r4, lr}
 800396a:	460c      	mov	r4, r1
 800396c:	2101      	movs	r1, #1
 800396e:	f7ff ff27 	bl	80037c0 <_Balloc>
 8003972:	2201      	movs	r2, #1
 8003974:	6144      	str	r4, [r0, #20]
 8003976:	6102      	str	r2, [r0, #16]
 8003978:	bd10      	pop	{r4, pc}

0800397a <__multiply>:
 800397a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800397e:	4614      	mov	r4, r2
 8003980:	690a      	ldr	r2, [r1, #16]
 8003982:	6923      	ldr	r3, [r4, #16]
 8003984:	4689      	mov	r9, r1
 8003986:	429a      	cmp	r2, r3
 8003988:	bfbe      	ittt	lt
 800398a:	460b      	movlt	r3, r1
 800398c:	46a1      	movlt	r9, r4
 800398e:	461c      	movlt	r4, r3
 8003990:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8003994:	f8d4 a010 	ldr.w	sl, [r4, #16]
 8003998:	f8d9 3008 	ldr.w	r3, [r9, #8]
 800399c:	f8d9 1004 	ldr.w	r1, [r9, #4]
 80039a0:	eb07 060a 	add.w	r6, r7, sl
 80039a4:	429e      	cmp	r6, r3
 80039a6:	bfc8      	it	gt
 80039a8:	3101      	addgt	r1, #1
 80039aa:	f7ff ff09 	bl	80037c0 <_Balloc>
 80039ae:	f100 0514 	add.w	r5, r0, #20
 80039b2:	462b      	mov	r3, r5
 80039b4:	2200      	movs	r2, #0
 80039b6:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 80039ba:	4543      	cmp	r3, r8
 80039bc:	d316      	bcc.n	80039ec <__multiply+0x72>
 80039be:	f104 0214 	add.w	r2, r4, #20
 80039c2:	f109 0114 	add.w	r1, r9, #20
 80039c6:	eb02 038a 	add.w	r3, r2, sl, lsl #2
 80039ca:	eb01 0787 	add.w	r7, r1, r7, lsl #2
 80039ce:	9301      	str	r3, [sp, #4]
 80039d0:	9c01      	ldr	r4, [sp, #4]
 80039d2:	4613      	mov	r3, r2
 80039d4:	4294      	cmp	r4, r2
 80039d6:	d80c      	bhi.n	80039f2 <__multiply+0x78>
 80039d8:	2e00      	cmp	r6, #0
 80039da:	dd03      	ble.n	80039e4 <__multiply+0x6a>
 80039dc:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 80039e0:	2b00      	cmp	r3, #0
 80039e2:	d054      	beq.n	8003a8e <__multiply+0x114>
 80039e4:	6106      	str	r6, [r0, #16]
 80039e6:	b003      	add	sp, #12
 80039e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80039ec:	f843 2b04 	str.w	r2, [r3], #4
 80039f0:	e7e3      	b.n	80039ba <__multiply+0x40>
 80039f2:	f8b3 a000 	ldrh.w	sl, [r3]
 80039f6:	3204      	adds	r2, #4
 80039f8:	f1ba 0f00 	cmp.w	sl, #0
 80039fc:	d020      	beq.n	8003a40 <__multiply+0xc6>
 80039fe:	46ae      	mov	lr, r5
 8003a00:	4689      	mov	r9, r1
 8003a02:	f04f 0c00 	mov.w	ip, #0
 8003a06:	f859 4b04 	ldr.w	r4, [r9], #4
 8003a0a:	f8be b000 	ldrh.w	fp, [lr]
 8003a0e:	b2a3      	uxth	r3, r4
 8003a10:	fb0a b303 	mla	r3, sl, r3, fp
 8003a14:	ea4f 4b14 	mov.w	fp, r4, lsr #16
 8003a18:	f8de 4000 	ldr.w	r4, [lr]
 8003a1c:	4463      	add	r3, ip
 8003a1e:	ea4f 4c14 	mov.w	ip, r4, lsr #16
 8003a22:	fb0a c40b 	mla	r4, sl, fp, ip
 8003a26:	eb04 4413 	add.w	r4, r4, r3, lsr #16
 8003a2a:	b29b      	uxth	r3, r3
 8003a2c:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8003a30:	454f      	cmp	r7, r9
 8003a32:	ea4f 4c14 	mov.w	ip, r4, lsr #16
 8003a36:	f84e 3b04 	str.w	r3, [lr], #4
 8003a3a:	d8e4      	bhi.n	8003a06 <__multiply+0x8c>
 8003a3c:	f8ce c000 	str.w	ip, [lr]
 8003a40:	f832 9c02 	ldrh.w	r9, [r2, #-2]
 8003a44:	f1b9 0f00 	cmp.w	r9, #0
 8003a48:	d01f      	beq.n	8003a8a <__multiply+0x110>
 8003a4a:	46ae      	mov	lr, r5
 8003a4c:	468c      	mov	ip, r1
 8003a4e:	f04f 0a00 	mov.w	sl, #0
 8003a52:	682b      	ldr	r3, [r5, #0]
 8003a54:	f8bc 4000 	ldrh.w	r4, [ip]
 8003a58:	f8be b002 	ldrh.w	fp, [lr, #2]
 8003a5c:	b29b      	uxth	r3, r3
 8003a5e:	fb09 b404 	mla	r4, r9, r4, fp
 8003a62:	44a2      	add	sl, r4
 8003a64:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
 8003a68:	f84e 3b04 	str.w	r3, [lr], #4
 8003a6c:	f85c 3b04 	ldr.w	r3, [ip], #4
 8003a70:	f8be 4000 	ldrh.w	r4, [lr]
 8003a74:	0c1b      	lsrs	r3, r3, #16
 8003a76:	fb09 4303 	mla	r3, r9, r3, r4
 8003a7a:	4567      	cmp	r7, ip
 8003a7c:	eb03 431a 	add.w	r3, r3, sl, lsr #16
 8003a80:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8003a84:	d8e6      	bhi.n	8003a54 <__multiply+0xda>
 8003a86:	f8ce 3000 	str.w	r3, [lr]
 8003a8a:	3504      	adds	r5, #4
 8003a8c:	e7a0      	b.n	80039d0 <__multiply+0x56>
 8003a8e:	3e01      	subs	r6, #1
 8003a90:	e7a2      	b.n	80039d8 <__multiply+0x5e>
	...

08003a94 <__pow5mult>:
 8003a94:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003a98:	4615      	mov	r5, r2
 8003a9a:	f012 0203 	ands.w	r2, r2, #3
 8003a9e:	4606      	mov	r6, r0
 8003aa0:	460f      	mov	r7, r1
 8003aa2:	d007      	beq.n	8003ab4 <__pow5mult+0x20>
 8003aa4:	4c21      	ldr	r4, [pc, #132]	; (8003b2c <__pow5mult+0x98>)
 8003aa6:	3a01      	subs	r2, #1
 8003aa8:	2300      	movs	r3, #0
 8003aaa:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8003aae:	f7ff fed2 	bl	8003856 <__multadd>
 8003ab2:	4607      	mov	r7, r0
 8003ab4:	10ad      	asrs	r5, r5, #2
 8003ab6:	d035      	beq.n	8003b24 <__pow5mult+0x90>
 8003ab8:	6a74      	ldr	r4, [r6, #36]	; 0x24
 8003aba:	b93c      	cbnz	r4, 8003acc <__pow5mult+0x38>
 8003abc:	2010      	movs	r0, #16
 8003abe:	f7ff fc45 	bl	800334c <malloc>
 8003ac2:	6270      	str	r0, [r6, #36]	; 0x24
 8003ac4:	6044      	str	r4, [r0, #4]
 8003ac6:	6084      	str	r4, [r0, #8]
 8003ac8:	6004      	str	r4, [r0, #0]
 8003aca:	60c4      	str	r4, [r0, #12]
 8003acc:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8003ad0:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8003ad4:	b94c      	cbnz	r4, 8003aea <__pow5mult+0x56>
 8003ad6:	f240 2171 	movw	r1, #625	; 0x271
 8003ada:	4630      	mov	r0, r6
 8003adc:	f7ff ff44 	bl	8003968 <__i2b>
 8003ae0:	2300      	movs	r3, #0
 8003ae2:	4604      	mov	r4, r0
 8003ae4:	f8c8 0008 	str.w	r0, [r8, #8]
 8003ae8:	6003      	str	r3, [r0, #0]
 8003aea:	f04f 0800 	mov.w	r8, #0
 8003aee:	07eb      	lsls	r3, r5, #31
 8003af0:	d50a      	bpl.n	8003b08 <__pow5mult+0x74>
 8003af2:	4639      	mov	r1, r7
 8003af4:	4622      	mov	r2, r4
 8003af6:	4630      	mov	r0, r6
 8003af8:	f7ff ff3f 	bl	800397a <__multiply>
 8003afc:	4681      	mov	r9, r0
 8003afe:	4639      	mov	r1, r7
 8003b00:	4630      	mov	r0, r6
 8003b02:	f7ff fe91 	bl	8003828 <_Bfree>
 8003b06:	464f      	mov	r7, r9
 8003b08:	106d      	asrs	r5, r5, #1
 8003b0a:	d00b      	beq.n	8003b24 <__pow5mult+0x90>
 8003b0c:	6820      	ldr	r0, [r4, #0]
 8003b0e:	b938      	cbnz	r0, 8003b20 <__pow5mult+0x8c>
 8003b10:	4622      	mov	r2, r4
 8003b12:	4621      	mov	r1, r4
 8003b14:	4630      	mov	r0, r6
 8003b16:	f7ff ff30 	bl	800397a <__multiply>
 8003b1a:	6020      	str	r0, [r4, #0]
 8003b1c:	f8c0 8000 	str.w	r8, [r0]
 8003b20:	4604      	mov	r4, r0
 8003b22:	e7e4      	b.n	8003aee <__pow5mult+0x5a>
 8003b24:	4638      	mov	r0, r7
 8003b26:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003b2a:	bf00      	nop
 8003b2c:	08004620 	.word	0x08004620

08003b30 <__lshift>:
 8003b30:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003b34:	460c      	mov	r4, r1
 8003b36:	4607      	mov	r7, r0
 8003b38:	4616      	mov	r6, r2
 8003b3a:	6923      	ldr	r3, [r4, #16]
 8003b3c:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8003b40:	eb0a 0903 	add.w	r9, sl, r3
 8003b44:	6849      	ldr	r1, [r1, #4]
 8003b46:	68a3      	ldr	r3, [r4, #8]
 8003b48:	f109 0501 	add.w	r5, r9, #1
 8003b4c:	42ab      	cmp	r3, r5
 8003b4e:	db31      	blt.n	8003bb4 <__lshift+0x84>
 8003b50:	4638      	mov	r0, r7
 8003b52:	f7ff fe35 	bl	80037c0 <_Balloc>
 8003b56:	2200      	movs	r2, #0
 8003b58:	4680      	mov	r8, r0
 8003b5a:	4611      	mov	r1, r2
 8003b5c:	f100 0314 	add.w	r3, r0, #20
 8003b60:	4552      	cmp	r2, sl
 8003b62:	db2a      	blt.n	8003bba <__lshift+0x8a>
 8003b64:	6920      	ldr	r0, [r4, #16]
 8003b66:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8003b6a:	f104 0114 	add.w	r1, r4, #20
 8003b6e:	f016 021f 	ands.w	r2, r6, #31
 8003b72:	eb03 038a 	add.w	r3, r3, sl, lsl #2
 8003b76:	eb01 0e80 	add.w	lr, r1, r0, lsl #2
 8003b7a:	d022      	beq.n	8003bc2 <__lshift+0x92>
 8003b7c:	2000      	movs	r0, #0
 8003b7e:	f1c2 0c20 	rsb	ip, r2, #32
 8003b82:	680e      	ldr	r6, [r1, #0]
 8003b84:	4096      	lsls	r6, r2
 8003b86:	4330      	orrs	r0, r6
 8003b88:	f843 0b04 	str.w	r0, [r3], #4
 8003b8c:	f851 0b04 	ldr.w	r0, [r1], #4
 8003b90:	458e      	cmp	lr, r1
 8003b92:	fa20 f00c 	lsr.w	r0, r0, ip
 8003b96:	d8f4      	bhi.n	8003b82 <__lshift+0x52>
 8003b98:	6018      	str	r0, [r3, #0]
 8003b9a:	b108      	cbz	r0, 8003ba0 <__lshift+0x70>
 8003b9c:	f109 0502 	add.w	r5, r9, #2
 8003ba0:	3d01      	subs	r5, #1
 8003ba2:	4638      	mov	r0, r7
 8003ba4:	f8c8 5010 	str.w	r5, [r8, #16]
 8003ba8:	4621      	mov	r1, r4
 8003baa:	f7ff fe3d 	bl	8003828 <_Bfree>
 8003bae:	4640      	mov	r0, r8
 8003bb0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003bb4:	3101      	adds	r1, #1
 8003bb6:	005b      	lsls	r3, r3, #1
 8003bb8:	e7c8      	b.n	8003b4c <__lshift+0x1c>
 8003bba:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8003bbe:	3201      	adds	r2, #1
 8003bc0:	e7ce      	b.n	8003b60 <__lshift+0x30>
 8003bc2:	3b04      	subs	r3, #4
 8003bc4:	f851 2b04 	ldr.w	r2, [r1], #4
 8003bc8:	458e      	cmp	lr, r1
 8003bca:	f843 2f04 	str.w	r2, [r3, #4]!
 8003bce:	d8f9      	bhi.n	8003bc4 <__lshift+0x94>
 8003bd0:	e7e6      	b.n	8003ba0 <__lshift+0x70>

08003bd2 <__mcmp>:
 8003bd2:	6903      	ldr	r3, [r0, #16]
 8003bd4:	690a      	ldr	r2, [r1, #16]
 8003bd6:	b530      	push	{r4, r5, lr}
 8003bd8:	1a9b      	subs	r3, r3, r2
 8003bda:	d10c      	bne.n	8003bf6 <__mcmp+0x24>
 8003bdc:	0092      	lsls	r2, r2, #2
 8003bde:	3014      	adds	r0, #20
 8003be0:	3114      	adds	r1, #20
 8003be2:	1884      	adds	r4, r0, r2
 8003be4:	4411      	add	r1, r2
 8003be6:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8003bea:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8003bee:	4295      	cmp	r5, r2
 8003bf0:	d003      	beq.n	8003bfa <__mcmp+0x28>
 8003bf2:	d305      	bcc.n	8003c00 <__mcmp+0x2e>
 8003bf4:	2301      	movs	r3, #1
 8003bf6:	4618      	mov	r0, r3
 8003bf8:	bd30      	pop	{r4, r5, pc}
 8003bfa:	42a0      	cmp	r0, r4
 8003bfc:	d3f3      	bcc.n	8003be6 <__mcmp+0x14>
 8003bfe:	e7fa      	b.n	8003bf6 <__mcmp+0x24>
 8003c00:	f04f 33ff 	mov.w	r3, #4294967295
 8003c04:	e7f7      	b.n	8003bf6 <__mcmp+0x24>

08003c06 <__mdiff>:
 8003c06:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003c0a:	460d      	mov	r5, r1
 8003c0c:	4607      	mov	r7, r0
 8003c0e:	4611      	mov	r1, r2
 8003c10:	4628      	mov	r0, r5
 8003c12:	4614      	mov	r4, r2
 8003c14:	f7ff ffdd 	bl	8003bd2 <__mcmp>
 8003c18:	1e06      	subs	r6, r0, #0
 8003c1a:	d108      	bne.n	8003c2e <__mdiff+0x28>
 8003c1c:	4631      	mov	r1, r6
 8003c1e:	4638      	mov	r0, r7
 8003c20:	f7ff fdce 	bl	80037c0 <_Balloc>
 8003c24:	2301      	movs	r3, #1
 8003c26:	6146      	str	r6, [r0, #20]
 8003c28:	6103      	str	r3, [r0, #16]
 8003c2a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003c2e:	bfa4      	itt	ge
 8003c30:	4623      	movge	r3, r4
 8003c32:	462c      	movge	r4, r5
 8003c34:	4638      	mov	r0, r7
 8003c36:	6861      	ldr	r1, [r4, #4]
 8003c38:	bfa6      	itte	ge
 8003c3a:	461d      	movge	r5, r3
 8003c3c:	2600      	movge	r6, #0
 8003c3e:	2601      	movlt	r6, #1
 8003c40:	f7ff fdbe 	bl	80037c0 <_Balloc>
 8003c44:	f04f 0c00 	mov.w	ip, #0
 8003c48:	60c6      	str	r6, [r0, #12]
 8003c4a:	692b      	ldr	r3, [r5, #16]
 8003c4c:	6926      	ldr	r6, [r4, #16]
 8003c4e:	f104 0214 	add.w	r2, r4, #20
 8003c52:	f105 0914 	add.w	r9, r5, #20
 8003c56:	eb02 0786 	add.w	r7, r2, r6, lsl #2
 8003c5a:	eb09 0883 	add.w	r8, r9, r3, lsl #2
 8003c5e:	f100 0114 	add.w	r1, r0, #20
 8003c62:	f852 ab04 	ldr.w	sl, [r2], #4
 8003c66:	f859 5b04 	ldr.w	r5, [r9], #4
 8003c6a:	fa1f f38a 	uxth.w	r3, sl
 8003c6e:	4463      	add	r3, ip
 8003c70:	b2ac      	uxth	r4, r5
 8003c72:	1b1b      	subs	r3, r3, r4
 8003c74:	0c2c      	lsrs	r4, r5, #16
 8003c76:	ebc4 441a 	rsb	r4, r4, sl, lsr #16
 8003c7a:	eb04 4423 	add.w	r4, r4, r3, asr #16
 8003c7e:	b29b      	uxth	r3, r3
 8003c80:	ea4f 4c24 	mov.w	ip, r4, asr #16
 8003c84:	45c8      	cmp	r8, r9
 8003c86:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 8003c8a:	4696      	mov	lr, r2
 8003c8c:	f841 4b04 	str.w	r4, [r1], #4
 8003c90:	d8e7      	bhi.n	8003c62 <__mdiff+0x5c>
 8003c92:	45be      	cmp	lr, r7
 8003c94:	d305      	bcc.n	8003ca2 <__mdiff+0x9c>
 8003c96:	f851 3d04 	ldr.w	r3, [r1, #-4]!
 8003c9a:	b18b      	cbz	r3, 8003cc0 <__mdiff+0xba>
 8003c9c:	6106      	str	r6, [r0, #16]
 8003c9e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003ca2:	f85e 4b04 	ldr.w	r4, [lr], #4
 8003ca6:	b2a2      	uxth	r2, r4
 8003ca8:	4462      	add	r2, ip
 8003caa:	1413      	asrs	r3, r2, #16
 8003cac:	eb03 4314 	add.w	r3, r3, r4, lsr #16
 8003cb0:	b292      	uxth	r2, r2
 8003cb2:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8003cb6:	ea4f 4c23 	mov.w	ip, r3, asr #16
 8003cba:	f841 2b04 	str.w	r2, [r1], #4
 8003cbe:	e7e8      	b.n	8003c92 <__mdiff+0x8c>
 8003cc0:	3e01      	subs	r6, #1
 8003cc2:	e7e8      	b.n	8003c96 <__mdiff+0x90>

08003cc4 <__d2b>:
 8003cc4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8003cc8:	461c      	mov	r4, r3
 8003cca:	2101      	movs	r1, #1
 8003ccc:	4690      	mov	r8, r2
 8003cce:	9e08      	ldr	r6, [sp, #32]
 8003cd0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8003cd2:	f7ff fd75 	bl	80037c0 <_Balloc>
 8003cd6:	f3c4 0213 	ubfx	r2, r4, #0, #20
 8003cda:	f3c4 540a 	ubfx	r4, r4, #20, #11
 8003cde:	4607      	mov	r7, r0
 8003ce0:	bb34      	cbnz	r4, 8003d30 <__d2b+0x6c>
 8003ce2:	9201      	str	r2, [sp, #4]
 8003ce4:	f1b8 0f00 	cmp.w	r8, #0
 8003ce8:	d027      	beq.n	8003d3a <__d2b+0x76>
 8003cea:	a802      	add	r0, sp, #8
 8003cec:	f840 8d08 	str.w	r8, [r0, #-8]!
 8003cf0:	f7ff fe0b 	bl	800390a <__lo0bits>
 8003cf4:	9900      	ldr	r1, [sp, #0]
 8003cf6:	b1f0      	cbz	r0, 8003d36 <__d2b+0x72>
 8003cf8:	9a01      	ldr	r2, [sp, #4]
 8003cfa:	f1c0 0320 	rsb	r3, r0, #32
 8003cfe:	fa02 f303 	lsl.w	r3, r2, r3
 8003d02:	430b      	orrs	r3, r1
 8003d04:	40c2      	lsrs	r2, r0
 8003d06:	617b      	str	r3, [r7, #20]
 8003d08:	9201      	str	r2, [sp, #4]
 8003d0a:	9b01      	ldr	r3, [sp, #4]
 8003d0c:	2b00      	cmp	r3, #0
 8003d0e:	bf14      	ite	ne
 8003d10:	2102      	movne	r1, #2
 8003d12:	2101      	moveq	r1, #1
 8003d14:	61bb      	str	r3, [r7, #24]
 8003d16:	6139      	str	r1, [r7, #16]
 8003d18:	b1c4      	cbz	r4, 8003d4c <__d2b+0x88>
 8003d1a:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
 8003d1e:	4404      	add	r4, r0
 8003d20:	6034      	str	r4, [r6, #0]
 8003d22:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8003d26:	6028      	str	r0, [r5, #0]
 8003d28:	4638      	mov	r0, r7
 8003d2a:	b002      	add	sp, #8
 8003d2c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003d30:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8003d34:	e7d5      	b.n	8003ce2 <__d2b+0x1e>
 8003d36:	6179      	str	r1, [r7, #20]
 8003d38:	e7e7      	b.n	8003d0a <__d2b+0x46>
 8003d3a:	a801      	add	r0, sp, #4
 8003d3c:	f7ff fde5 	bl	800390a <__lo0bits>
 8003d40:	2101      	movs	r1, #1
 8003d42:	9b01      	ldr	r3, [sp, #4]
 8003d44:	6139      	str	r1, [r7, #16]
 8003d46:	617b      	str	r3, [r7, #20]
 8003d48:	3020      	adds	r0, #32
 8003d4a:	e7e5      	b.n	8003d18 <__d2b+0x54>
 8003d4c:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8003d50:	eb07 0381 	add.w	r3, r7, r1, lsl #2
 8003d54:	6030      	str	r0, [r6, #0]
 8003d56:	6918      	ldr	r0, [r3, #16]
 8003d58:	f7ff fdb8 	bl	80038cc <__hi0bits>
 8003d5c:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
 8003d60:	e7e1      	b.n	8003d26 <__d2b+0x62>
	...

08003d64 <_sbrk_r>:
 8003d64:	b538      	push	{r3, r4, r5, lr}
 8003d66:	2300      	movs	r3, #0
 8003d68:	4c05      	ldr	r4, [pc, #20]	; (8003d80 <_sbrk_r+0x1c>)
 8003d6a:	4605      	mov	r5, r0
 8003d6c:	4608      	mov	r0, r1
 8003d6e:	6023      	str	r3, [r4, #0]
 8003d70:	f000 fb88 	bl	8004484 <_sbrk>
 8003d74:	1c43      	adds	r3, r0, #1
 8003d76:	d102      	bne.n	8003d7e <_sbrk_r+0x1a>
 8003d78:	6823      	ldr	r3, [r4, #0]
 8003d7a:	b103      	cbz	r3, 8003d7e <_sbrk_r+0x1a>
 8003d7c:	602b      	str	r3, [r5, #0]
 8003d7e:	bd38      	pop	{r3, r4, r5, pc}
 8003d80:	200006e4 	.word	0x200006e4

08003d84 <__ssprint_r>:
 8003d84:	6893      	ldr	r3, [r2, #8]
 8003d86:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003d8a:	4681      	mov	r9, r0
 8003d8c:	460c      	mov	r4, r1
 8003d8e:	4617      	mov	r7, r2
 8003d90:	2b00      	cmp	r3, #0
 8003d92:	d060      	beq.n	8003e56 <__ssprint_r+0xd2>
 8003d94:	f04f 0b00 	mov.w	fp, #0
 8003d98:	465e      	mov	r6, fp
 8003d9a:	f8d2 a000 	ldr.w	sl, [r2]
 8003d9e:	b356      	cbz	r6, 8003df6 <__ssprint_r+0x72>
 8003da0:	68a3      	ldr	r3, [r4, #8]
 8003da2:	429e      	cmp	r6, r3
 8003da4:	d344      	bcc.n	8003e30 <__ssprint_r+0xac>
 8003da6:	89a2      	ldrh	r2, [r4, #12]
 8003da8:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8003dac:	d03e      	beq.n	8003e2c <__ssprint_r+0xa8>
 8003dae:	2302      	movs	r3, #2
 8003db0:	6825      	ldr	r5, [r4, #0]
 8003db2:	6921      	ldr	r1, [r4, #16]
 8003db4:	eba5 0801 	sub.w	r8, r5, r1
 8003db8:	6965      	ldr	r5, [r4, #20]
 8003dba:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8003dbe:	fb95 f5f3 	sdiv	r5, r5, r3
 8003dc2:	f108 0301 	add.w	r3, r8, #1
 8003dc6:	4433      	add	r3, r6
 8003dc8:	429d      	cmp	r5, r3
 8003dca:	bf38      	it	cc
 8003dcc:	461d      	movcc	r5, r3
 8003dce:	0553      	lsls	r3, r2, #21
 8003dd0:	d546      	bpl.n	8003e60 <__ssprint_r+0xdc>
 8003dd2:	4629      	mov	r1, r5
 8003dd4:	4648      	mov	r0, r9
 8003dd6:	f7ff fac1 	bl	800335c <_malloc_r>
 8003dda:	b998      	cbnz	r0, 8003e04 <__ssprint_r+0x80>
 8003ddc:	230c      	movs	r3, #12
 8003dde:	f8c9 3000 	str.w	r3, [r9]
 8003de2:	89a3      	ldrh	r3, [r4, #12]
 8003de4:	f04f 30ff 	mov.w	r0, #4294967295
 8003de8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003dec:	81a3      	strh	r3, [r4, #12]
 8003dee:	2300      	movs	r3, #0
 8003df0:	60bb      	str	r3, [r7, #8]
 8003df2:	607b      	str	r3, [r7, #4]
 8003df4:	e031      	b.n	8003e5a <__ssprint_r+0xd6>
 8003df6:	f8da b000 	ldr.w	fp, [sl]
 8003dfa:	f8da 6004 	ldr.w	r6, [sl, #4]
 8003dfe:	f10a 0a08 	add.w	sl, sl, #8
 8003e02:	e7cc      	b.n	8003d9e <__ssprint_r+0x1a>
 8003e04:	4642      	mov	r2, r8
 8003e06:	6921      	ldr	r1, [r4, #16]
 8003e08:	9001      	str	r0, [sp, #4]
 8003e0a:	f7ff fcc1 	bl	8003790 <memcpy>
 8003e0e:	89a2      	ldrh	r2, [r4, #12]
 8003e10:	9b01      	ldr	r3, [sp, #4]
 8003e12:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
 8003e16:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8003e1a:	81a2      	strh	r2, [r4, #12]
 8003e1c:	6123      	str	r3, [r4, #16]
 8003e1e:	4443      	add	r3, r8
 8003e20:	6023      	str	r3, [r4, #0]
 8003e22:	4633      	mov	r3, r6
 8003e24:	6165      	str	r5, [r4, #20]
 8003e26:	eba5 0508 	sub.w	r5, r5, r8
 8003e2a:	60a5      	str	r5, [r4, #8]
 8003e2c:	429e      	cmp	r6, r3
 8003e2e:	d200      	bcs.n	8003e32 <__ssprint_r+0xae>
 8003e30:	4633      	mov	r3, r6
 8003e32:	461a      	mov	r2, r3
 8003e34:	4659      	mov	r1, fp
 8003e36:	6820      	ldr	r0, [r4, #0]
 8003e38:	9301      	str	r3, [sp, #4]
 8003e3a:	f000 f971 	bl	8004120 <memmove>
 8003e3e:	68a2      	ldr	r2, [r4, #8]
 8003e40:	9b01      	ldr	r3, [sp, #4]
 8003e42:	1ad2      	subs	r2, r2, r3
 8003e44:	60a2      	str	r2, [r4, #8]
 8003e46:	6822      	ldr	r2, [r4, #0]
 8003e48:	4413      	add	r3, r2
 8003e4a:	6023      	str	r3, [r4, #0]
 8003e4c:	68bb      	ldr	r3, [r7, #8]
 8003e4e:	1b9e      	subs	r6, r3, r6
 8003e50:	60be      	str	r6, [r7, #8]
 8003e52:	2e00      	cmp	r6, #0
 8003e54:	d1cf      	bne.n	8003df6 <__ssprint_r+0x72>
 8003e56:	2000      	movs	r0, #0
 8003e58:	6078      	str	r0, [r7, #4]
 8003e5a:	b003      	add	sp, #12
 8003e5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003e60:	462a      	mov	r2, r5
 8003e62:	4648      	mov	r0, r9
 8003e64:	f000 f97e 	bl	8004164 <_realloc_r>
 8003e68:	4603      	mov	r3, r0
 8003e6a:	2800      	cmp	r0, #0
 8003e6c:	d1d6      	bne.n	8003e1c <__ssprint_r+0x98>
 8003e6e:	6921      	ldr	r1, [r4, #16]
 8003e70:	4648      	mov	r0, r9
 8003e72:	f000 f885 	bl	8003f80 <_free_r>
 8003e76:	e7b1      	b.n	8003ddc <__ssprint_r+0x58>

08003e78 <_calloc_r>:
 8003e78:	b510      	push	{r4, lr}
 8003e7a:	4351      	muls	r1, r2
 8003e7c:	f7ff fa6e 	bl	800335c <_malloc_r>
 8003e80:	4604      	mov	r4, r0
 8003e82:	b198      	cbz	r0, 8003eac <_calloc_r+0x34>
 8003e84:	f850 2c04 	ldr.w	r2, [r0, #-4]
 8003e88:	f022 0203 	bic.w	r2, r2, #3
 8003e8c:	3a04      	subs	r2, #4
 8003e8e:	2a24      	cmp	r2, #36	; 0x24
 8003e90:	d81b      	bhi.n	8003eca <_calloc_r+0x52>
 8003e92:	2a13      	cmp	r2, #19
 8003e94:	d917      	bls.n	8003ec6 <_calloc_r+0x4e>
 8003e96:	2100      	movs	r1, #0
 8003e98:	2a1b      	cmp	r2, #27
 8003e9a:	6001      	str	r1, [r0, #0]
 8003e9c:	6041      	str	r1, [r0, #4]
 8003e9e:	d807      	bhi.n	8003eb0 <_calloc_r+0x38>
 8003ea0:	f100 0308 	add.w	r3, r0, #8
 8003ea4:	2200      	movs	r2, #0
 8003ea6:	601a      	str	r2, [r3, #0]
 8003ea8:	605a      	str	r2, [r3, #4]
 8003eaa:	609a      	str	r2, [r3, #8]
 8003eac:	4620      	mov	r0, r4
 8003eae:	bd10      	pop	{r4, pc}
 8003eb0:	2a24      	cmp	r2, #36	; 0x24
 8003eb2:	6081      	str	r1, [r0, #8]
 8003eb4:	60c1      	str	r1, [r0, #12]
 8003eb6:	bf11      	iteee	ne
 8003eb8:	f100 0310 	addne.w	r3, r0, #16
 8003ebc:	6101      	streq	r1, [r0, #16]
 8003ebe:	f100 0318 	addeq.w	r3, r0, #24
 8003ec2:	6141      	streq	r1, [r0, #20]
 8003ec4:	e7ee      	b.n	8003ea4 <_calloc_r+0x2c>
 8003ec6:	4603      	mov	r3, r0
 8003ec8:	e7ec      	b.n	8003ea4 <_calloc_r+0x2c>
 8003eca:	2100      	movs	r1, #0
 8003ecc:	f000 f942 	bl	8004154 <memset>
 8003ed0:	e7ec      	b.n	8003eac <_calloc_r+0x34>
	...

08003ed4 <_malloc_trim_r>:
 8003ed4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003ed8:	4689      	mov	r9, r1
 8003eda:	4f25      	ldr	r7, [pc, #148]	; (8003f70 <_malloc_trim_r+0x9c>)
 8003edc:	4606      	mov	r6, r0
 8003ede:	f7ff fc63 	bl	80037a8 <__malloc_lock>
 8003ee2:	68bb      	ldr	r3, [r7, #8]
 8003ee4:	f8df 8094 	ldr.w	r8, [pc, #148]	; 8003f7c <_malloc_trim_r+0xa8>
 8003ee8:	685d      	ldr	r5, [r3, #4]
 8003eea:	f1a8 0411 	sub.w	r4, r8, #17
 8003eee:	f025 0503 	bic.w	r5, r5, #3
 8003ef2:	eba4 0409 	sub.w	r4, r4, r9
 8003ef6:	442c      	add	r4, r5
 8003ef8:	fbb4 f4f8 	udiv	r4, r4, r8
 8003efc:	3c01      	subs	r4, #1
 8003efe:	fb08 f404 	mul.w	r4, r8, r4
 8003f02:	4544      	cmp	r4, r8
 8003f04:	da05      	bge.n	8003f12 <_malloc_trim_r+0x3e>
 8003f06:	4630      	mov	r0, r6
 8003f08:	f7ff fc54 	bl	80037b4 <__malloc_unlock>
 8003f0c:	2000      	movs	r0, #0
 8003f0e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003f12:	2100      	movs	r1, #0
 8003f14:	4630      	mov	r0, r6
 8003f16:	f7ff ff25 	bl	8003d64 <_sbrk_r>
 8003f1a:	68bb      	ldr	r3, [r7, #8]
 8003f1c:	442b      	add	r3, r5
 8003f1e:	4298      	cmp	r0, r3
 8003f20:	d1f1      	bne.n	8003f06 <_malloc_trim_r+0x32>
 8003f22:	4261      	negs	r1, r4
 8003f24:	4630      	mov	r0, r6
 8003f26:	f7ff ff1d 	bl	8003d64 <_sbrk_r>
 8003f2a:	3001      	adds	r0, #1
 8003f2c:	d110      	bne.n	8003f50 <_malloc_trim_r+0x7c>
 8003f2e:	2100      	movs	r1, #0
 8003f30:	4630      	mov	r0, r6
 8003f32:	f7ff ff17 	bl	8003d64 <_sbrk_r>
 8003f36:	68ba      	ldr	r2, [r7, #8]
 8003f38:	1a83      	subs	r3, r0, r2
 8003f3a:	2b0f      	cmp	r3, #15
 8003f3c:	dde3      	ble.n	8003f06 <_malloc_trim_r+0x32>
 8003f3e:	490d      	ldr	r1, [pc, #52]	; (8003f74 <_malloc_trim_r+0xa0>)
 8003f40:	f043 0301 	orr.w	r3, r3, #1
 8003f44:	6809      	ldr	r1, [r1, #0]
 8003f46:	6053      	str	r3, [r2, #4]
 8003f48:	1a40      	subs	r0, r0, r1
 8003f4a:	490b      	ldr	r1, [pc, #44]	; (8003f78 <_malloc_trim_r+0xa4>)
 8003f4c:	6008      	str	r0, [r1, #0]
 8003f4e:	e7da      	b.n	8003f06 <_malloc_trim_r+0x32>
 8003f50:	68bb      	ldr	r3, [r7, #8]
 8003f52:	4a09      	ldr	r2, [pc, #36]	; (8003f78 <_malloc_trim_r+0xa4>)
 8003f54:	1b2d      	subs	r5, r5, r4
 8003f56:	f045 0501 	orr.w	r5, r5, #1
 8003f5a:	605d      	str	r5, [r3, #4]
 8003f5c:	6813      	ldr	r3, [r2, #0]
 8003f5e:	4630      	mov	r0, r6
 8003f60:	1b1c      	subs	r4, r3, r4
 8003f62:	6014      	str	r4, [r2, #0]
 8003f64:	f7ff fc26 	bl	80037b4 <__malloc_unlock>
 8003f68:	2001      	movs	r0, #1
 8003f6a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003f6e:	bf00      	nop
 8003f70:	20000108 	.word	0x20000108
 8003f74:	20000510 	.word	0x20000510
 8003f78:	200006a0 	.word	0x200006a0
 8003f7c:	00000080 	.word	0x00000080

08003f80 <_free_r>:
 8003f80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003f84:	4604      	mov	r4, r0
 8003f86:	4688      	mov	r8, r1
 8003f88:	2900      	cmp	r1, #0
 8003f8a:	f000 80ab 	beq.w	80040e4 <_free_r+0x164>
 8003f8e:	f7ff fc0b 	bl	80037a8 <__malloc_lock>
 8003f92:	f858 2c04 	ldr.w	r2, [r8, #-4]
 8003f96:	4d54      	ldr	r5, [pc, #336]	; (80040e8 <_free_r+0x168>)
 8003f98:	f022 0001 	bic.w	r0, r2, #1
 8003f9c:	f1a8 0308 	sub.w	r3, r8, #8
 8003fa0:	181f      	adds	r7, r3, r0
 8003fa2:	68a9      	ldr	r1, [r5, #8]
 8003fa4:	687e      	ldr	r6, [r7, #4]
 8003fa6:	428f      	cmp	r7, r1
 8003fa8:	f026 0603 	bic.w	r6, r6, #3
 8003fac:	f002 0201 	and.w	r2, r2, #1
 8003fb0:	d11b      	bne.n	8003fea <_free_r+0x6a>
 8003fb2:	4430      	add	r0, r6
 8003fb4:	b93a      	cbnz	r2, 8003fc6 <_free_r+0x46>
 8003fb6:	f858 2c08 	ldr.w	r2, [r8, #-8]
 8003fba:	1a9b      	subs	r3, r3, r2
 8003fbc:	6899      	ldr	r1, [r3, #8]
 8003fbe:	4410      	add	r0, r2
 8003fc0:	68da      	ldr	r2, [r3, #12]
 8003fc2:	60ca      	str	r2, [r1, #12]
 8003fc4:	6091      	str	r1, [r2, #8]
 8003fc6:	f040 0201 	orr.w	r2, r0, #1
 8003fca:	605a      	str	r2, [r3, #4]
 8003fcc:	60ab      	str	r3, [r5, #8]
 8003fce:	4b47      	ldr	r3, [pc, #284]	; (80040ec <_free_r+0x16c>)
 8003fd0:	681b      	ldr	r3, [r3, #0]
 8003fd2:	4298      	cmp	r0, r3
 8003fd4:	d304      	bcc.n	8003fe0 <_free_r+0x60>
 8003fd6:	4b46      	ldr	r3, [pc, #280]	; (80040f0 <_free_r+0x170>)
 8003fd8:	4620      	mov	r0, r4
 8003fda:	6819      	ldr	r1, [r3, #0]
 8003fdc:	f7ff ff7a 	bl	8003ed4 <_malloc_trim_r>
 8003fe0:	4620      	mov	r0, r4
 8003fe2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003fe6:	f7ff bbe5 	b.w	80037b4 <__malloc_unlock>
 8003fea:	607e      	str	r6, [r7, #4]
 8003fec:	2a00      	cmp	r2, #0
 8003fee:	d139      	bne.n	8004064 <_free_r+0xe4>
 8003ff0:	f858 1c08 	ldr.w	r1, [r8, #-8]
 8003ff4:	f105 0e08 	add.w	lr, r5, #8
 8003ff8:	1a5b      	subs	r3, r3, r1
 8003ffa:	4408      	add	r0, r1
 8003ffc:	6899      	ldr	r1, [r3, #8]
 8003ffe:	4571      	cmp	r1, lr
 8004000:	d032      	beq.n	8004068 <_free_r+0xe8>
 8004002:	f8d3 e00c 	ldr.w	lr, [r3, #12]
 8004006:	f8c1 e00c 	str.w	lr, [r1, #12]
 800400a:	f8ce 1008 	str.w	r1, [lr, #8]
 800400e:	19b9      	adds	r1, r7, r6
 8004010:	6849      	ldr	r1, [r1, #4]
 8004012:	07c9      	lsls	r1, r1, #31
 8004014:	d40a      	bmi.n	800402c <_free_r+0xac>
 8004016:	4430      	add	r0, r6
 8004018:	68b9      	ldr	r1, [r7, #8]
 800401a:	bb3a      	cbnz	r2, 800406c <_free_r+0xec>
 800401c:	4e35      	ldr	r6, [pc, #212]	; (80040f4 <_free_r+0x174>)
 800401e:	42b1      	cmp	r1, r6
 8004020:	d124      	bne.n	800406c <_free_r+0xec>
 8004022:	2201      	movs	r2, #1
 8004024:	616b      	str	r3, [r5, #20]
 8004026:	612b      	str	r3, [r5, #16]
 8004028:	60d9      	str	r1, [r3, #12]
 800402a:	6099      	str	r1, [r3, #8]
 800402c:	f040 0101 	orr.w	r1, r0, #1
 8004030:	6059      	str	r1, [r3, #4]
 8004032:	5018      	str	r0, [r3, r0]
 8004034:	2a00      	cmp	r2, #0
 8004036:	d1d3      	bne.n	8003fe0 <_free_r+0x60>
 8004038:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 800403c:	d21a      	bcs.n	8004074 <_free_r+0xf4>
 800403e:	2201      	movs	r2, #1
 8004040:	08c0      	lsrs	r0, r0, #3
 8004042:	1081      	asrs	r1, r0, #2
 8004044:	408a      	lsls	r2, r1
 8004046:	6869      	ldr	r1, [r5, #4]
 8004048:	3001      	adds	r0, #1
 800404a:	430a      	orrs	r2, r1
 800404c:	606a      	str	r2, [r5, #4]
 800404e:	f855 1030 	ldr.w	r1, [r5, r0, lsl #3]
 8004052:	eb05 02c0 	add.w	r2, r5, r0, lsl #3
 8004056:	3a08      	subs	r2, #8
 8004058:	60da      	str	r2, [r3, #12]
 800405a:	6099      	str	r1, [r3, #8]
 800405c:	f845 3030 	str.w	r3, [r5, r0, lsl #3]
 8004060:	60cb      	str	r3, [r1, #12]
 8004062:	e7bd      	b.n	8003fe0 <_free_r+0x60>
 8004064:	2200      	movs	r2, #0
 8004066:	e7d2      	b.n	800400e <_free_r+0x8e>
 8004068:	2201      	movs	r2, #1
 800406a:	e7d0      	b.n	800400e <_free_r+0x8e>
 800406c:	68fe      	ldr	r6, [r7, #12]
 800406e:	60ce      	str	r6, [r1, #12]
 8004070:	60b1      	str	r1, [r6, #8]
 8004072:	e7db      	b.n	800402c <_free_r+0xac>
 8004074:	0a42      	lsrs	r2, r0, #9
 8004076:	2a04      	cmp	r2, #4
 8004078:	d813      	bhi.n	80040a2 <_free_r+0x122>
 800407a:	0982      	lsrs	r2, r0, #6
 800407c:	3238      	adds	r2, #56	; 0x38
 800407e:	1c51      	adds	r1, r2, #1
 8004080:	f855 1031 	ldr.w	r1, [r5, r1, lsl #3]
 8004084:	eb05 06c2 	add.w	r6, r5, r2, lsl #3
 8004088:	428e      	cmp	r6, r1
 800408a:	d124      	bne.n	80040d6 <_free_r+0x156>
 800408c:	2001      	movs	r0, #1
 800408e:	1092      	asrs	r2, r2, #2
 8004090:	fa00 f202 	lsl.w	r2, r0, r2
 8004094:	6868      	ldr	r0, [r5, #4]
 8004096:	4302      	orrs	r2, r0
 8004098:	606a      	str	r2, [r5, #4]
 800409a:	60de      	str	r6, [r3, #12]
 800409c:	6099      	str	r1, [r3, #8]
 800409e:	60b3      	str	r3, [r6, #8]
 80040a0:	e7de      	b.n	8004060 <_free_r+0xe0>
 80040a2:	2a14      	cmp	r2, #20
 80040a4:	d801      	bhi.n	80040aa <_free_r+0x12a>
 80040a6:	325b      	adds	r2, #91	; 0x5b
 80040a8:	e7e9      	b.n	800407e <_free_r+0xfe>
 80040aa:	2a54      	cmp	r2, #84	; 0x54
 80040ac:	d802      	bhi.n	80040b4 <_free_r+0x134>
 80040ae:	0b02      	lsrs	r2, r0, #12
 80040b0:	326e      	adds	r2, #110	; 0x6e
 80040b2:	e7e4      	b.n	800407e <_free_r+0xfe>
 80040b4:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
 80040b8:	d802      	bhi.n	80040c0 <_free_r+0x140>
 80040ba:	0bc2      	lsrs	r2, r0, #15
 80040bc:	3277      	adds	r2, #119	; 0x77
 80040be:	e7de      	b.n	800407e <_free_r+0xfe>
 80040c0:	f240 5154 	movw	r1, #1364	; 0x554
 80040c4:	428a      	cmp	r2, r1
 80040c6:	bf9a      	itte	ls
 80040c8:	0c82      	lsrls	r2, r0, #18
 80040ca:	327c      	addls	r2, #124	; 0x7c
 80040cc:	227e      	movhi	r2, #126	; 0x7e
 80040ce:	e7d6      	b.n	800407e <_free_r+0xfe>
 80040d0:	6889      	ldr	r1, [r1, #8]
 80040d2:	428e      	cmp	r6, r1
 80040d4:	d004      	beq.n	80040e0 <_free_r+0x160>
 80040d6:	684a      	ldr	r2, [r1, #4]
 80040d8:	f022 0203 	bic.w	r2, r2, #3
 80040dc:	4290      	cmp	r0, r2
 80040de:	d3f7      	bcc.n	80040d0 <_free_r+0x150>
 80040e0:	68ce      	ldr	r6, [r1, #12]
 80040e2:	e7da      	b.n	800409a <_free_r+0x11a>
 80040e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80040e8:	20000108 	.word	0x20000108
 80040ec:	20000514 	.word	0x20000514
 80040f0:	200006d0 	.word	0x200006d0
 80040f4:	20000110 	.word	0x20000110

080040f8 <__retarget_lock_acquire_recursive>:
 80040f8:	4770      	bx	lr

080040fa <__retarget_lock_release_recursive>:
 80040fa:	4770      	bx	lr

080040fc <__ascii_mbtowc>:
 80040fc:	b082      	sub	sp, #8
 80040fe:	b901      	cbnz	r1, 8004102 <__ascii_mbtowc+0x6>
 8004100:	a901      	add	r1, sp, #4
 8004102:	b142      	cbz	r2, 8004116 <__ascii_mbtowc+0x1a>
 8004104:	b14b      	cbz	r3, 800411a <__ascii_mbtowc+0x1e>
 8004106:	7813      	ldrb	r3, [r2, #0]
 8004108:	600b      	str	r3, [r1, #0]
 800410a:	7812      	ldrb	r2, [r2, #0]
 800410c:	1c10      	adds	r0, r2, #0
 800410e:	bf18      	it	ne
 8004110:	2001      	movne	r0, #1
 8004112:	b002      	add	sp, #8
 8004114:	4770      	bx	lr
 8004116:	4610      	mov	r0, r2
 8004118:	e7fb      	b.n	8004112 <__ascii_mbtowc+0x16>
 800411a:	f06f 0001 	mvn.w	r0, #1
 800411e:	e7f8      	b.n	8004112 <__ascii_mbtowc+0x16>

08004120 <memmove>:
 8004120:	4288      	cmp	r0, r1
 8004122:	b510      	push	{r4, lr}
 8004124:	eb01 0302 	add.w	r3, r1, r2
 8004128:	d803      	bhi.n	8004132 <memmove+0x12>
 800412a:	1e42      	subs	r2, r0, #1
 800412c:	4299      	cmp	r1, r3
 800412e:	d10c      	bne.n	800414a <memmove+0x2a>
 8004130:	bd10      	pop	{r4, pc}
 8004132:	4298      	cmp	r0, r3
 8004134:	d2f9      	bcs.n	800412a <memmove+0xa>
 8004136:	1881      	adds	r1, r0, r2
 8004138:	1ad2      	subs	r2, r2, r3
 800413a:	42d3      	cmn	r3, r2
 800413c:	d100      	bne.n	8004140 <memmove+0x20>
 800413e:	bd10      	pop	{r4, pc}
 8004140:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8004144:	f801 4d01 	strb.w	r4, [r1, #-1]!
 8004148:	e7f7      	b.n	800413a <memmove+0x1a>
 800414a:	f811 4b01 	ldrb.w	r4, [r1], #1
 800414e:	f802 4f01 	strb.w	r4, [r2, #1]!
 8004152:	e7eb      	b.n	800412c <memmove+0xc>

08004154 <memset>:
 8004154:	4603      	mov	r3, r0
 8004156:	4402      	add	r2, r0
 8004158:	4293      	cmp	r3, r2
 800415a:	d100      	bne.n	800415e <memset+0xa>
 800415c:	4770      	bx	lr
 800415e:	f803 1b01 	strb.w	r1, [r3], #1
 8004162:	e7f9      	b.n	8004158 <memset+0x4>

08004164 <_realloc_r>:
 8004164:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004168:	4682      	mov	sl, r0
 800416a:	460c      	mov	r4, r1
 800416c:	b929      	cbnz	r1, 800417a <_realloc_r+0x16>
 800416e:	4611      	mov	r1, r2
 8004170:	b003      	add	sp, #12
 8004172:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004176:	f7ff b8f1 	b.w	800335c <_malloc_r>
 800417a:	9201      	str	r2, [sp, #4]
 800417c:	f7ff fb14 	bl	80037a8 <__malloc_lock>
 8004180:	9a01      	ldr	r2, [sp, #4]
 8004182:	f854 5c04 	ldr.w	r5, [r4, #-4]
 8004186:	f102 080b 	add.w	r8, r2, #11
 800418a:	f1b8 0f16 	cmp.w	r8, #22
 800418e:	f1a4 0908 	sub.w	r9, r4, #8
 8004192:	f025 0603 	bic.w	r6, r5, #3
 8004196:	d90a      	bls.n	80041ae <_realloc_r+0x4a>
 8004198:	f038 0807 	bics.w	r8, r8, #7
 800419c:	d509      	bpl.n	80041b2 <_realloc_r+0x4e>
 800419e:	230c      	movs	r3, #12
 80041a0:	2700      	movs	r7, #0
 80041a2:	f8ca 3000 	str.w	r3, [sl]
 80041a6:	4638      	mov	r0, r7
 80041a8:	b003      	add	sp, #12
 80041aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80041ae:	f04f 0810 	mov.w	r8, #16
 80041b2:	4590      	cmp	r8, r2
 80041b4:	d3f3      	bcc.n	800419e <_realloc_r+0x3a>
 80041b6:	45b0      	cmp	r8, r6
 80041b8:	f340 8148 	ble.w	800444c <_realloc_r+0x2e8>
 80041bc:	4ba9      	ldr	r3, [pc, #676]	; (8004464 <_realloc_r+0x300>)
 80041be:	eb09 0106 	add.w	r1, r9, r6
 80041c2:	f8d3 e008 	ldr.w	lr, [r3, #8]
 80041c6:	469b      	mov	fp, r3
 80041c8:	4571      	cmp	r1, lr
 80041ca:	684b      	ldr	r3, [r1, #4]
 80041cc:	d005      	beq.n	80041da <_realloc_r+0x76>
 80041ce:	f023 0001 	bic.w	r0, r3, #1
 80041d2:	4408      	add	r0, r1
 80041d4:	6840      	ldr	r0, [r0, #4]
 80041d6:	07c7      	lsls	r7, r0, #31
 80041d8:	d447      	bmi.n	800426a <_realloc_r+0x106>
 80041da:	f023 0303 	bic.w	r3, r3, #3
 80041de:	4571      	cmp	r1, lr
 80041e0:	eb06 0703 	add.w	r7, r6, r3
 80041e4:	d119      	bne.n	800421a <_realloc_r+0xb6>
 80041e6:	f108 0010 	add.w	r0, r8, #16
 80041ea:	4287      	cmp	r7, r0
 80041ec:	db3f      	blt.n	800426e <_realloc_r+0x10a>
 80041ee:	eba7 0708 	sub.w	r7, r7, r8
 80041f2:	eb09 0308 	add.w	r3, r9, r8
 80041f6:	f047 0701 	orr.w	r7, r7, #1
 80041fa:	f8cb 3008 	str.w	r3, [fp, #8]
 80041fe:	605f      	str	r7, [r3, #4]
 8004200:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8004204:	4650      	mov	r0, sl
 8004206:	f003 0301 	and.w	r3, r3, #1
 800420a:	ea43 0308 	orr.w	r3, r3, r8
 800420e:	f844 3c04 	str.w	r3, [r4, #-4]
 8004212:	f7ff facf 	bl	80037b4 <__malloc_unlock>
 8004216:	4627      	mov	r7, r4
 8004218:	e7c5      	b.n	80041a6 <_realloc_r+0x42>
 800421a:	45b8      	cmp	r8, r7
 800421c:	dc27      	bgt.n	800426e <_realloc_r+0x10a>
 800421e:	68cb      	ldr	r3, [r1, #12]
 8004220:	688a      	ldr	r2, [r1, #8]
 8004222:	60d3      	str	r3, [r2, #12]
 8004224:	609a      	str	r2, [r3, #8]
 8004226:	eba7 0008 	sub.w	r0, r7, r8
 800422a:	280f      	cmp	r0, #15
 800422c:	f8d9 3004 	ldr.w	r3, [r9, #4]
 8004230:	eb09 0207 	add.w	r2, r9, r7
 8004234:	f240 810c 	bls.w	8004450 <_realloc_r+0x2ec>
 8004238:	f003 0301 	and.w	r3, r3, #1
 800423c:	eb09 0108 	add.w	r1, r9, r8
 8004240:	ea43 0308 	orr.w	r3, r3, r8
 8004244:	f040 0001 	orr.w	r0, r0, #1
 8004248:	f8c9 3004 	str.w	r3, [r9, #4]
 800424c:	6048      	str	r0, [r1, #4]
 800424e:	6853      	ldr	r3, [r2, #4]
 8004250:	3108      	adds	r1, #8
 8004252:	f043 0301 	orr.w	r3, r3, #1
 8004256:	6053      	str	r3, [r2, #4]
 8004258:	4650      	mov	r0, sl
 800425a:	f7ff fe91 	bl	8003f80 <_free_r>
 800425e:	4650      	mov	r0, sl
 8004260:	f7ff faa8 	bl	80037b4 <__malloc_unlock>
 8004264:	f109 0708 	add.w	r7, r9, #8
 8004268:	e79d      	b.n	80041a6 <_realloc_r+0x42>
 800426a:	2300      	movs	r3, #0
 800426c:	4619      	mov	r1, r3
 800426e:	07e8      	lsls	r0, r5, #31
 8004270:	f100 8085 	bmi.w	800437e <_realloc_r+0x21a>
 8004274:	f854 5c08 	ldr.w	r5, [r4, #-8]
 8004278:	eba9 0505 	sub.w	r5, r9, r5
 800427c:	6868      	ldr	r0, [r5, #4]
 800427e:	f020 0003 	bic.w	r0, r0, #3
 8004282:	4430      	add	r0, r6
 8004284:	2900      	cmp	r1, #0
 8004286:	d077      	beq.n	8004378 <_realloc_r+0x214>
 8004288:	4571      	cmp	r1, lr
 800428a:	d151      	bne.n	8004330 <_realloc_r+0x1cc>
 800428c:	4403      	add	r3, r0
 800428e:	f108 0110 	add.w	r1, r8, #16
 8004292:	428b      	cmp	r3, r1
 8004294:	db70      	blt.n	8004378 <_realloc_r+0x214>
 8004296:	462f      	mov	r7, r5
 8004298:	68ea      	ldr	r2, [r5, #12]
 800429a:	f857 1f08 	ldr.w	r1, [r7, #8]!
 800429e:	60ca      	str	r2, [r1, #12]
 80042a0:	6091      	str	r1, [r2, #8]
 80042a2:	1f32      	subs	r2, r6, #4
 80042a4:	2a24      	cmp	r2, #36	; 0x24
 80042a6:	d83c      	bhi.n	8004322 <_realloc_r+0x1be>
 80042a8:	2a13      	cmp	r2, #19
 80042aa:	d937      	bls.n	800431c <_realloc_r+0x1b8>
 80042ac:	6821      	ldr	r1, [r4, #0]
 80042ae:	2a1b      	cmp	r2, #27
 80042b0:	60a9      	str	r1, [r5, #8]
 80042b2:	6861      	ldr	r1, [r4, #4]
 80042b4:	60e9      	str	r1, [r5, #12]
 80042b6:	d81c      	bhi.n	80042f2 <_realloc_r+0x18e>
 80042b8:	f105 0210 	add.w	r2, r5, #16
 80042bc:	f104 0108 	add.w	r1, r4, #8
 80042c0:	6808      	ldr	r0, [r1, #0]
 80042c2:	6010      	str	r0, [r2, #0]
 80042c4:	6848      	ldr	r0, [r1, #4]
 80042c6:	6050      	str	r0, [r2, #4]
 80042c8:	6889      	ldr	r1, [r1, #8]
 80042ca:	6091      	str	r1, [r2, #8]
 80042cc:	eba3 0308 	sub.w	r3, r3, r8
 80042d0:	eb05 0208 	add.w	r2, r5, r8
 80042d4:	f043 0301 	orr.w	r3, r3, #1
 80042d8:	f8cb 2008 	str.w	r2, [fp, #8]
 80042dc:	6053      	str	r3, [r2, #4]
 80042de:	686b      	ldr	r3, [r5, #4]
 80042e0:	f003 0301 	and.w	r3, r3, #1
 80042e4:	ea43 0308 	orr.w	r3, r3, r8
 80042e8:	606b      	str	r3, [r5, #4]
 80042ea:	4650      	mov	r0, sl
 80042ec:	f7ff fa62 	bl	80037b4 <__malloc_unlock>
 80042f0:	e759      	b.n	80041a6 <_realloc_r+0x42>
 80042f2:	68a1      	ldr	r1, [r4, #8]
 80042f4:	2a24      	cmp	r2, #36	; 0x24
 80042f6:	6129      	str	r1, [r5, #16]
 80042f8:	68e1      	ldr	r1, [r4, #12]
 80042fa:	bf18      	it	ne
 80042fc:	f105 0218 	addne.w	r2, r5, #24
 8004300:	6169      	str	r1, [r5, #20]
 8004302:	bf09      	itett	eq
 8004304:	6922      	ldreq	r2, [r4, #16]
 8004306:	f104 0110 	addne.w	r1, r4, #16
 800430a:	61aa      	streq	r2, [r5, #24]
 800430c:	6960      	ldreq	r0, [r4, #20]
 800430e:	bf02      	ittt	eq
 8004310:	f105 0220 	addeq.w	r2, r5, #32
 8004314:	f104 0118 	addeq.w	r1, r4, #24
 8004318:	61e8      	streq	r0, [r5, #28]
 800431a:	e7d1      	b.n	80042c0 <_realloc_r+0x15c>
 800431c:	463a      	mov	r2, r7
 800431e:	4621      	mov	r1, r4
 8004320:	e7ce      	b.n	80042c0 <_realloc_r+0x15c>
 8004322:	4621      	mov	r1, r4
 8004324:	4638      	mov	r0, r7
 8004326:	9301      	str	r3, [sp, #4]
 8004328:	f7ff fefa 	bl	8004120 <memmove>
 800432c:	9b01      	ldr	r3, [sp, #4]
 800432e:	e7cd      	b.n	80042cc <_realloc_r+0x168>
 8004330:	18c7      	adds	r7, r0, r3
 8004332:	45b8      	cmp	r8, r7
 8004334:	dc20      	bgt.n	8004378 <_realloc_r+0x214>
 8004336:	68cb      	ldr	r3, [r1, #12]
 8004338:	688a      	ldr	r2, [r1, #8]
 800433a:	60d3      	str	r3, [r2, #12]
 800433c:	609a      	str	r2, [r3, #8]
 800433e:	4628      	mov	r0, r5
 8004340:	68eb      	ldr	r3, [r5, #12]
 8004342:	f850 2f08 	ldr.w	r2, [r0, #8]!
 8004346:	60d3      	str	r3, [r2, #12]
 8004348:	609a      	str	r2, [r3, #8]
 800434a:	1f32      	subs	r2, r6, #4
 800434c:	2a24      	cmp	r2, #36	; 0x24
 800434e:	d843      	bhi.n	80043d8 <_realloc_r+0x274>
 8004350:	2a13      	cmp	r2, #19
 8004352:	d93f      	bls.n	80043d4 <_realloc_r+0x270>
 8004354:	6823      	ldr	r3, [r4, #0]
 8004356:	2a1b      	cmp	r2, #27
 8004358:	60ab      	str	r3, [r5, #8]
 800435a:	6863      	ldr	r3, [r4, #4]
 800435c:	60eb      	str	r3, [r5, #12]
 800435e:	d824      	bhi.n	80043aa <_realloc_r+0x246>
 8004360:	f105 0010 	add.w	r0, r5, #16
 8004364:	f104 0308 	add.w	r3, r4, #8
 8004368:	681a      	ldr	r2, [r3, #0]
 800436a:	6002      	str	r2, [r0, #0]
 800436c:	685a      	ldr	r2, [r3, #4]
 800436e:	6042      	str	r2, [r0, #4]
 8004370:	689b      	ldr	r3, [r3, #8]
 8004372:	6083      	str	r3, [r0, #8]
 8004374:	46a9      	mov	r9, r5
 8004376:	e756      	b.n	8004226 <_realloc_r+0xc2>
 8004378:	4580      	cmp	r8, r0
 800437a:	4607      	mov	r7, r0
 800437c:	dddf      	ble.n	800433e <_realloc_r+0x1da>
 800437e:	4611      	mov	r1, r2
 8004380:	4650      	mov	r0, sl
 8004382:	f7fe ffeb 	bl	800335c <_malloc_r>
 8004386:	4607      	mov	r7, r0
 8004388:	2800      	cmp	r0, #0
 800438a:	d0ae      	beq.n	80042ea <_realloc_r+0x186>
 800438c:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8004390:	f1a0 0208 	sub.w	r2, r0, #8
 8004394:	f023 0301 	bic.w	r3, r3, #1
 8004398:	444b      	add	r3, r9
 800439a:	429a      	cmp	r2, r3
 800439c:	d120      	bne.n	80043e0 <_realloc_r+0x27c>
 800439e:	f850 7c04 	ldr.w	r7, [r0, #-4]
 80043a2:	f027 0703 	bic.w	r7, r7, #3
 80043a6:	4437      	add	r7, r6
 80043a8:	e73d      	b.n	8004226 <_realloc_r+0xc2>
 80043aa:	68a3      	ldr	r3, [r4, #8]
 80043ac:	2a24      	cmp	r2, #36	; 0x24
 80043ae:	612b      	str	r3, [r5, #16]
 80043b0:	68e3      	ldr	r3, [r4, #12]
 80043b2:	bf18      	it	ne
 80043b4:	f105 0018 	addne.w	r0, r5, #24
 80043b8:	616b      	str	r3, [r5, #20]
 80043ba:	bf09      	itett	eq
 80043bc:	6923      	ldreq	r3, [r4, #16]
 80043be:	f104 0310 	addne.w	r3, r4, #16
 80043c2:	61ab      	streq	r3, [r5, #24]
 80043c4:	6962      	ldreq	r2, [r4, #20]
 80043c6:	bf02      	ittt	eq
 80043c8:	f105 0020 	addeq.w	r0, r5, #32
 80043cc:	f104 0318 	addeq.w	r3, r4, #24
 80043d0:	61ea      	streq	r2, [r5, #28]
 80043d2:	e7c9      	b.n	8004368 <_realloc_r+0x204>
 80043d4:	4623      	mov	r3, r4
 80043d6:	e7c7      	b.n	8004368 <_realloc_r+0x204>
 80043d8:	4621      	mov	r1, r4
 80043da:	f7ff fea1 	bl	8004120 <memmove>
 80043de:	e7c9      	b.n	8004374 <_realloc_r+0x210>
 80043e0:	1f32      	subs	r2, r6, #4
 80043e2:	2a24      	cmp	r2, #36	; 0x24
 80043e4:	d82e      	bhi.n	8004444 <_realloc_r+0x2e0>
 80043e6:	2a13      	cmp	r2, #19
 80043e8:	d929      	bls.n	800443e <_realloc_r+0x2da>
 80043ea:	6823      	ldr	r3, [r4, #0]
 80043ec:	2a1b      	cmp	r2, #27
 80043ee:	6003      	str	r3, [r0, #0]
 80043f0:	6863      	ldr	r3, [r4, #4]
 80043f2:	6043      	str	r3, [r0, #4]
 80043f4:	d80e      	bhi.n	8004414 <_realloc_r+0x2b0>
 80043f6:	f100 0308 	add.w	r3, r0, #8
 80043fa:	f104 0208 	add.w	r2, r4, #8
 80043fe:	6811      	ldr	r1, [r2, #0]
 8004400:	6019      	str	r1, [r3, #0]
 8004402:	6851      	ldr	r1, [r2, #4]
 8004404:	6059      	str	r1, [r3, #4]
 8004406:	6892      	ldr	r2, [r2, #8]
 8004408:	609a      	str	r2, [r3, #8]
 800440a:	4621      	mov	r1, r4
 800440c:	4650      	mov	r0, sl
 800440e:	f7ff fdb7 	bl	8003f80 <_free_r>
 8004412:	e76a      	b.n	80042ea <_realloc_r+0x186>
 8004414:	68a3      	ldr	r3, [r4, #8]
 8004416:	2a24      	cmp	r2, #36	; 0x24
 8004418:	6083      	str	r3, [r0, #8]
 800441a:	68e3      	ldr	r3, [r4, #12]
 800441c:	bf18      	it	ne
 800441e:	f104 0210 	addne.w	r2, r4, #16
 8004422:	60c3      	str	r3, [r0, #12]
 8004424:	bf09      	itett	eq
 8004426:	6923      	ldreq	r3, [r4, #16]
 8004428:	f100 0310 	addne.w	r3, r0, #16
 800442c:	6103      	streq	r3, [r0, #16]
 800442e:	6961      	ldreq	r1, [r4, #20]
 8004430:	bf02      	ittt	eq
 8004432:	f100 0318 	addeq.w	r3, r0, #24
 8004436:	f104 0218 	addeq.w	r2, r4, #24
 800443a:	6141      	streq	r1, [r0, #20]
 800443c:	e7df      	b.n	80043fe <_realloc_r+0x29a>
 800443e:	4603      	mov	r3, r0
 8004440:	4622      	mov	r2, r4
 8004442:	e7dc      	b.n	80043fe <_realloc_r+0x29a>
 8004444:	4621      	mov	r1, r4
 8004446:	f7ff fe6b 	bl	8004120 <memmove>
 800444a:	e7de      	b.n	800440a <_realloc_r+0x2a6>
 800444c:	4637      	mov	r7, r6
 800444e:	e6ea      	b.n	8004226 <_realloc_r+0xc2>
 8004450:	f003 0301 	and.w	r3, r3, #1
 8004454:	431f      	orrs	r7, r3
 8004456:	f8c9 7004 	str.w	r7, [r9, #4]
 800445a:	6853      	ldr	r3, [r2, #4]
 800445c:	f043 0301 	orr.w	r3, r3, #1
 8004460:	6053      	str	r3, [r2, #4]
 8004462:	e6fc      	b.n	800425e <_realloc_r+0xfa>
 8004464:	20000108 	.word	0x20000108

08004468 <__ascii_wctomb>:
 8004468:	b149      	cbz	r1, 800447e <__ascii_wctomb+0x16>
 800446a:	2aff      	cmp	r2, #255	; 0xff
 800446c:	bf8b      	itete	hi
 800446e:	238a      	movhi	r3, #138	; 0x8a
 8004470:	700a      	strbls	r2, [r1, #0]
 8004472:	6003      	strhi	r3, [r0, #0]
 8004474:	2001      	movls	r0, #1
 8004476:	bf88      	it	hi
 8004478:	f04f 30ff 	movhi.w	r0, #4294967295
 800447c:	4770      	bx	lr
 800447e:	4608      	mov	r0, r1
 8004480:	4770      	bx	lr
	...

08004484 <_sbrk>:
 8004484:	4b04      	ldr	r3, [pc, #16]	; (8004498 <_sbrk+0x14>)
 8004486:	4602      	mov	r2, r0
 8004488:	6819      	ldr	r1, [r3, #0]
 800448a:	b909      	cbnz	r1, 8004490 <_sbrk+0xc>
 800448c:	4903      	ldr	r1, [pc, #12]	; (800449c <_sbrk+0x18>)
 800448e:	6019      	str	r1, [r3, #0]
 8004490:	6818      	ldr	r0, [r3, #0]
 8004492:	4402      	add	r2, r0
 8004494:	601a      	str	r2, [r3, #0]
 8004496:	4770      	bx	lr
 8004498:	200006d4 	.word	0x200006d4
 800449c:	200006e8 	.word	0x200006e8

080044a0 <_init>:
 80044a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80044a2:	bf00      	nop
 80044a4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80044a6:	bc08      	pop	{r3}
 80044a8:	469e      	mov	lr, r3
 80044aa:	4770      	bx	lr

080044ac <_fini>:
 80044ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80044ae:	bf00      	nop
 80044b0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80044b2:	bc08      	pop	{r3}
 80044b4:	469e      	mov	lr, r3
 80044b6:	4770      	bx	lr
